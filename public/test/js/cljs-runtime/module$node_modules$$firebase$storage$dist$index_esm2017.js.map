{
"version":3,
"file":"module$node_modules$$firebase$storage$dist$index_esm2017.js",
"lineCount":93,
"mappings":"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",
"sources":["node_modules/@firebase/storage/dist/index.esm2017.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$storage$dist$index_esm2017\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._dataFromString = dataFromString;\nexports._getChild = _getChild;\nexports._invalidArgument = invalidArgument;\nexports._invalidRootOperation = invalidRootOperation;\nexports.connectStorageEmulator = connectStorageEmulator;\nexports.deleteObject = deleteObject;\nexports.getBlob = getBlob;\nexports.getBytes = getBytes;\nexports.getDownloadURL = getDownloadURL;\nexports.getMetadata = getMetadata;\nexports.getStorage = getStorage;\nexports.getStream = getStream;\nexports.list = list;\nexports.listAll = listAll;\nexports.ref = ref;\nexports.updateMetadata = updateMetadata;\nexports.uploadBytes = uploadBytes;\nexports.uploadBytesResumable = uploadBytesResumable;\nexports.uploadString = uploadString;\nexports._UploadTask = exports._TaskState = exports._TaskEvent = exports._Location = exports._FbsBlob = exports.StringFormat = void 0;\n\nvar _app = require(\"@firebase/app\");\n\nvar _util = require(\"@firebase/util\");\n\nvar _component = require(\"@firebase/component\");\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\n\nclass StorageError extends _util.FirebaseError {\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n  constructor(code, message) {\n    super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\n    /**\r\n     * Stores custom error data unque to StorageError.\r\n     */\n\n    this.customData = {\n      serverResponse: null\n    };\n    this._baseMessage = this.message; // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n\n\n  _codeEquals(code) {\n    return prependCode(code) === this.code;\n  }\n  /**\r\n   * Optional response message that was added by the server.\r\n   */\n\n\n  get serverResponse() {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse) {\n    this.customData.serverResponse = serverResponse;\n\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n\n}\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  const message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new StorageError(\"unknown\"\n  /* UNKNOWN */\n  , message);\n}\n\nfunction objectNotFound(path) {\n  return new StorageError(\"object-not-found\"\n  /* OBJECT_NOT_FOUND */\n  , \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new StorageError(\"quota-exceeded\"\n  /* QUOTA_EXCEEDED */\n  , \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  const message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new StorageError(\"unauthenticated\"\n  /* UNAUTHENTICATED */\n  , message);\n}\n\nfunction unauthorizedApp() {\n  return new StorageError(\"unauthorized-app\"\n  /* UNAUTHORIZED_APP */\n  , 'This app does not have permission to access Firebase Storage on this project.');\n}\n\nfunction unauthorized(path) {\n  return new StorageError(\"unauthorized\"\n  /* UNAUTHORIZED */\n  , \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new StorageError(\"retry-limit-exceeded\"\n  /* RETRY_LIMIT_EXCEEDED */\n  , 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new StorageError(\"canceled\"\n  /* CANCELED */\n  , 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new StorageError(\"invalid-url\"\n  /* INVALID_URL */\n  , \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new StorageError(\"invalid-default-bucket\"\n  /* INVALID_DEFAULT_BUCKET */\n  , \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new StorageError(\"no-default-bucket\"\n  /* NO_DEFAULT_BUCKET */\n  , 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new StorageError(\"cannot-slice-blob\"\n  /* CANNOT_SLICE_BLOB */\n  , 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new StorageError(\"server-file-wrong-size\"\n  /* SERVER_FILE_WRONG_SIZE */\n  , 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new StorageError(\"no-download-url\"\n  /* NO_DOWNLOAD_URL */\n  , 'The given file does not have any download URLs.');\n}\n/**\r\n * @internal\r\n */\n\n\nfunction invalidArgument(message) {\n  return new StorageError(\"invalid-argument\"\n  /* INVALID_ARGUMENT */\n  , message);\n}\n\nfunction appDeleted() {\n  return new StorageError(\"app-deleted\"\n  /* APP_DELETED */\n  , 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new StorageError(\"invalid-root-operation\"\n  /* INVALID_ROOT_OPERATION */\n  , \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new StorageError(\"invalid-format\"\n  /* INVALID_FORMAT */\n  , \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new StorageError(\"internal-error\"\n  /* INTERNAL_ERROR */\n  , 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\n\n\nclass Location {\n  constructor(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  get path() {\n    return this.path_;\n  }\n\n  get isRoot() {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl() {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl() {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString, host) {\n    let bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url, host) {\n    let location = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\n    const firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    const cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\n    const cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    const groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  }\n\n}\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nexports._Location = Location;\n\nclass FailRequest {\n  constructor(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  getPromise() {\n    return this.promise_;\n  }\n  /** @inheritDoc */\n\n\n  cancel(_appDelete = false) {}\n\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so \u00af\\_(\u30c4)_/\u00af\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  let retryTimeoutId = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  let globalTimeoutId = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  let triggeredCallback = false;\n\n  function triggerCallback(...args) {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout() {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success, ...args) {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n\n    const mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    let waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  let stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n    clearGlobalTimeout();\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\n  }\n\n  if (value > maxValue) {\n    throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart, host, protocol) {\n  let origin = host;\n\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nfunction makeQueryString(params) {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\n\n\nclass NetworkRequest {\n  constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_) {\n    this.url_ = url_;\n    this.method_ = method_;\n    this.headers_ = headers_;\n    this.body_ = body_;\n    this.successCodes_ = successCodes_;\n    this.additionalRetryCodes_ = additionalRetryCodes_;\n    this.callback_ = callback_;\n    this.errorCallback_ = errorCallback_;\n    this.timeout_ = timeout_;\n    this.progressCallback_ = progressCallback_;\n    this.connectionFactory_ = connectionFactory_;\n    this.pendingConnection_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  start_() {\n    const doTheRequest = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener = progressEvent => {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (this.progressCallback_ !== null) {\n          this.progressCallback_(loaded, total);\n        }\n      };\n\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      } // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      connection.send(this.url_, this.method_, this.body_, this.headers_).then(() => {\n        if (this.progressCallback_ !== null) {\n          connection.removeUploadProgressListener(progressListener);\n        }\n\n        this.pendingConnection_ = null;\n        const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n        const status = connection.getStatus();\n\n        if (!hitServer || this.isRetryStatusCode_(status)) {\n          const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        const successCode = this.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, connection));\n      });\n    };\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    const backoffDone = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection;\n\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n  /** @inheritDoc */\n\n\n  getPromise() {\n    return this.promise_;\n  }\n  /** @inheritDoc */\n\n\n  cancel(appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  isRetryStatusCode_(status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n\n}\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nclass RequestEndStatus {\n  constructor(wasSuccessCode, connection, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.connection = connection;\n    this.canceled = !!canceled;\n  }\n\n}\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction addAppCheckHeader_(headers, appCheckToken) {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion) {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob$1(...args) {\n  const BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\"unsupported-environment\"\n      /* UNSUPPORTED_ENVIRONMENT */\n      , \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n\nfunction decodeBase64(encoded) {\n  return atob(encoded);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\n\n\nconst StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\nexports.StringFormat = StringFormat;\n\nclass StringData {\n  constructor(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n}\n/**\r\n * @internal\r\n */\n\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  const b = [];\n\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  let decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        const hasMinus = value.indexOf('-') !== -1;\n        const hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          const invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        const hasPlus = value.indexOf('+') !== -1;\n        const hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          const invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  let bytes;\n\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  const array = new Uint8Array(bytes.length);\n\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nclass DataURLParts {\n  constructor(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    const middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n}\n\nfunction dataURLBytes_(dataUrl) {\n  const parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  const longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\n\n\nclass FbsBlob {\n  constructor(data, elideCopy) {\n    let size = 0;\n    let blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size() {\n    return this.size_;\n  }\n\n  type() {\n    return this.type_;\n  }\n\n  slice(startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args) {\n    if (isNativeBlobDefined()) {\n      const blobby = args.map(val => {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob$1.apply(null, blobby));\n    } else {\n      const uint8Arrays = args.map(val => {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      let finalLength = 0;\n      uint8Arrays.forEach(array => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach(array => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData() {\n    return this.data_;\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nexports._FbsBlob = FbsBlob;\n\nfunction jsonObjectOrNull(s) {\n  let obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  const index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  const canonicalChildPath = childPath.split('/').filter(component => component.length > 0).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  const index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nclass Mapping {\n  constructor(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n}\n\nlet mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  const mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  const nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  const sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    const bucket = metadata['bucket'];\n    const path = metadata['fullPath'];\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  const metadata = {};\n  metadata['type'] = 'file';\n  const len = mappings.length;\n\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  const obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  const resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\n  const obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  const tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map(token => {\n    const bucket = metadata['bucket'];\n    const path = metadata['fullPath'];\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  const resource = {};\n  const len = mappings.length;\n\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  const listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n\n      const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(new Location(bucket, item['name']));\n\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  const obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  const resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\n\n\nclass RequestInfo {\n  constructor(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    let newErr;\n\n    if (xhr.getStatus() === 401) {\n      if ( // This exact message string is the only consistent part of the\n      // server's error response that identifies it as an App Check error.\n      xhr.getErrorText().includes('Firebase App Check token is invalid')) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    let newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata$2(service, location, mappings) {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\n  const urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200\n    /* OK */\n    , 206\n    /* Partial Content */\n    ];\n  }\n\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata$2(service, location, metadata, mappings) {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject$2(service, location) {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\n\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    let str = '';\n\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  const urlParams = {\n    name: metadata_['fullPath']\n  };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nclass ResumableUploadStatus {\n  constructor(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n}\n\nfunction checkResumeHeader_(xhr, allowed) {\n  let status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    let url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  const headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\n\n\nconst TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n}; // type keys = keyof TaskState\n\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\n\nexports._TaskEvent = TaskEvent;\nconst TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\nexports._TaskState = TaskState;\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\"\n    /* RUNNING */\n    :\n    case \"pausing\"\n    /* PAUSING */\n    :\n    case \"canceling\"\n    /* CANCELING */\n    :\n      return TaskState.RUNNING;\n\n    case \"paused\"\n    /* PAUSED */\n    :\n      return TaskState.PAUSED;\n\n    case \"success\"\n    /* SUCCESS */\n    :\n      return TaskState.SUCCESS;\n\n    case \"canceled\"\n    /* CANCELED */\n    :\n      return TaskState.CANCELED;\n\n    case \"error\"\n    /* ERROR */\n    :\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass Observer {\n  constructor(nextOrObserver, error, complete) {\n    const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error !== null && error !== void 0 ? error : undefined;\n      this.complete = complete !== null && complete !== void 0 ? complete : undefined;\n    } else {\n      const observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return (...argsToForward) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** An override for the text-based Connection. Used in tests. */\n\n\nlet textFactoryOverride = null;\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\n\nclass XhrConnection {\n  constructor() {\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  send(url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  }\n\n  getErrorCode() {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  }\n\n  getStatus() {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse() {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n\n    return this.xhr_.response;\n  }\n\n  getErrorText() {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n\n    return this.xhr_.statusText;\n  }\n  /** Aborts the request. */\n\n\n  abort() {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header) {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n\n}\n\nclass XhrTextConnection extends XhrConnection {\n  initXhr() {\n    this.xhr_.responseType = 'text';\n  }\n\n}\n\nfunction newTextConnection() {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nclass XhrBytesConnection extends XhrConnection {\n  initXhr() {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n\n}\n\nfunction newBytesConnection() {\n  return new XhrBytesConnection();\n}\n\nclass XhrBlobConnection extends XhrConnection {\n  initXhr() {\n    this.xhr_.responseType = 'blob';\n  }\n\n}\n\nfunction newBlobConnection() {\n  return new XhrBlobConnection();\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\n\n\nclass UploadTask {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  constructor(ref, blob, metadata = null) {\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\"\n    /* RUNNING */\n    ;\n\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n\n        this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n\n        this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n\n      this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, () => {});\n  }\n\n  _makeProgressCallback() {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  _shouldDoResumable(blob) {\n    return blob.size() > 256 * 1024;\n  }\n\n  _start() {\n    if (this._state !== \"running\"\n    /* RUNNING */\n    ) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  _resolveToken(callback) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case \"running\"\n        /* RUNNING */\n        :\n          callback(authToken, appCheckToken);\n          break;\n\n        case \"canceling\"\n        /* CANCELING */\n        :\n          this._transition(\"canceled\"\n          /* CANCELED */\n          );\n\n          break;\n\n        case \"pausing\"\n        /* PAUSING */\n        :\n          this._transition(\"paused\"\n          /* PAUSED */\n          );\n\n          break;\n      }\n    });\n  } // TODO(andysoto): assert false\n\n\n  _createResumable() {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\n\n      const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n      this._request = createRequest;\n      createRequest.getPromise().then(url => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  _fetchStatus() {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl;\n\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\n\n      const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status;\n        this._request = undefined;\n\n        this._updateProgress(status.current);\n\n        this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  _continueUpload() {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    const url = this._uploadUrl;\n\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\n      } catch (e) {\n        this._error = e;\n\n        this._transition(\"error\"\n        /* ERROR */\n        );\n\n        return;\n      }\n\n      const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then(newStatus => {\n        this._increaseMultiplier();\n\n        this._request = undefined;\n\n        this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n\n          this._transition(\"success\"\n          /* SUCCESS */\n          );\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  _increaseMultiplier() {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  _fetchMetadata() {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\n\n      const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n\n        this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  _oneShotUpload() {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\n\n      const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n\n        this._updateProgress(this._blob.size());\n\n        this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, this._errorHandler);\n    });\n  }\n\n  _updateProgress(transferred) {\n    const old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  _transition(state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case \"canceling\"\n      /* CANCELING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"pausing\"\n      /* PAUSING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === \"paused\"\n        /* PAUSED */\n        ;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case \"paused\"\n      /* PAUSED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"canceled\"\n      /* CANCELED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"error\"\n      /* ERROR */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"success\"\n      /* SUCCESS */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  }\n\n  completeTransitions_() {\n    switch (this._state) {\n      case \"pausing\"\n      /* PAUSING */\n      :\n        this._transition(\"paused\"\n        /* PAUSED */\n        );\n\n        break;\n\n      case \"canceling\"\n      /* CANCELING */\n      :\n        this._transition(\"canceled\"\n        /* CANCELED */\n        );\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        this._start();\n\n        break;\n    }\n  }\n  /**\r\n   * A snapshot of the current task state.\r\n   */\n\n\n  get snapshot() {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata,\n      task: this,\n      ref: this._ref\n    };\n  }\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   * @param nextOrObserver -\r\n   *     The `next` function, which gets called for each item in\r\n   *     the event stream, or an observer object with some or all of these three\r\n   *     properties (`next`, `error`, `complete`).\r\n   * @param error - A function that gets called with a `StorageError`\r\n   *     if the event stream ends due to an error.\r\n   * @param completed - A function that gets called if the\r\n   *     event stream ends normally.\r\n   * @returns\r\n   *     If only the event argument is passed, returns a function you can use to\r\n   *     add callbacks (see the examples above). If more than just the event\r\n   *     argument is passed, returns a function you can call to unregister the\r\n   *     callbacks.\r\n   */\n\n\n  on(type, nextOrObserver, error, completed) {\n    const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\n\n    this._addObserver(observer);\n\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  then(onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  }\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  catch(onRejected) {\n    return this.then(null, onRejected);\n  }\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  _addObserver(observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  }\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  _removeObserver(observer) {\n    const i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  _notifyObservers() {\n    this._finishPromise();\n\n    const observers = this._observers.slice();\n\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  _finishPromise() {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  _notifyObserver(observer) {\n    const externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  }\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  resume() {\n    const valid = this._state === \"paused\"\n    /* PAUSED */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"running\"\n      /* RUNNING */\n      );\n    }\n\n    return valid;\n  }\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  pause() {\n    const valid = this._state === \"running\"\n    /* RUNNING */\n    ;\n\n    if (valid) {\n      this._transition(\"pausing\"\n      /* PAUSING */\n      );\n    }\n\n    return valid;\n  }\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  cancel() {\n    const valid = this._state === \"running\"\n    /* RUNNING */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"canceling\"\n      /* CANCELING */\n      );\n    }\n\n    return valid;\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nexports._UploadTask = UploadTask;\n\nclass Reference {\n  constructor(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  toString() {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  _newRef(service, location) {\n    return new Reference(service, location);\n  }\n  /**\r\n   * A reference to the root of this object's bucket.\r\n   */\n\n\n  get root() {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n  /**\r\n   * The name of the bucket containing this reference's object.\r\n   */\n\n\n  get bucket() {\n    return this._location.bucket;\n  }\n  /**\r\n   * The full path of this object.\r\n   */\n\n\n  get fullPath() {\n    return this._location.path;\n  }\n  /**\r\n   * The short name of this object, which is the last component of the full path.\r\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n   */\n\n\n  get name() {\n    return lastComponent(this._location.path);\n  }\n  /**\r\n   * The `StorageService` instance this `StorageReference` is associated with.\r\n   */\n\n\n  get storage() {\n    return this._service;\n  }\n  /**\r\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n   * this reference is the root.\r\n   */\n\n\n  get parent() {\n    const newPath = parent(this._location.path);\n\n    if (newPath === null) {\n      return null;\n    }\n\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n  /**\r\n   * Utility function to throw an error in methods that do not accept a root reference.\r\n   */\n\n\n  _throwIfRoot(name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n\n}\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\n\n\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\n  ref._throwIfRoot('getBytes');\n\n  const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\n  return ref.storage.makeRequestWithTokens(requestInfo, newBytesConnection).then(bytes => maxDownloadSizeBytes !== undefined ? // GCS may not honor the Range header for small files\n  bytes.slice(0, maxDownloadSizeBytes) : bytes);\n}\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\n\n\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\n  ref._throwIfRoot('getBlob');\n\n  const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\n  return ref.storage.makeRequestWithTokens(requestInfo, newBlobConnection).then(blob => maxDownloadSizeBytes !== undefined ? // GCS may not honor the Range header for small files\n  blob.slice(0, maxDownloadSizeBytes) : blob);\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadBytes$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytes');\n\n  const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection).then(finalMetadata => {\n    return {\n      metadata: finalMetadata,\n      ref\n    };\n  });\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\n  ref._throwIfRoot('uploadString');\n\n  const data = dataFromString(format, value);\n  const metadataClone = Object.assign({}, metadata);\n\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType;\n  }\n\n  return uploadBytes$1(ref, data.data, metadataClone);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll$1(ref) {\n  const accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nasync function listAllHelper(ref, accumulator, pageToken) {\n  const opt = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list$1(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber('options.maxResults',\n      /* minValue= */\n      1,\n      /* maxValue= */\n      1000, options.maxResults);\n    }\n  }\n\n  const op = options || {};\n  const requestInfo = list$2(ref.storage, ref._location,\n  /*delimiter= */\n  '/', op.pageToken, op.maxResults);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  ref._throwIfRoot('getMetadata');\n\n  const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  ref._throwIfRoot('updateMetadata');\n\n  const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL$1(ref) {\n  ref._throwIfRoot('getDownloadURL');\n\n  const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection).then(url => {\n    if (url === null) {\n      throw noDownloadURL();\n    }\n\n    return url;\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  ref._throwIfRoot('deleteObject');\n\n  const requestInfo = deleteObject$2(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\n\n\nfunction _getChild$1(ref, childPath) {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    const reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild$1(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(host, config) {\n  const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const {\n    mockUserToken\n  } = options;\n\n  if (mockUserToken) {\n    storage._overrideAuthToken = typeof mockUserToken === 'string' ? mockUserToken : (0, _util.createMockUserToken)(mockUserToken, storage.app.options.projectId);\n  }\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\n\n\nclass FirebaseStorageImpl {\n  constructor(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _appCheckProvider,\n  /**\r\n   * @internal\r\n   */\n  _url, _firebaseVersion) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._appCheckProvider = _appCheckProvider;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    /**\r\n     * This string can be in the formats:\r\n     * - host\r\n     * - host:port\r\n     */\n\n    this._host = DEFAULT_HOST;\n    this._protocol = 'https';\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n  /**\r\n   * The host string for this service, in the form of `host` or\r\n   * `host:port`.\r\n   */\n\n\n  get host() {\n    return this._host;\n  }\n\n  set host(host) {\n    this._host = host;\n\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n  /**\r\n   * The maximum time to retry uploads in milliseconds.\r\n   */\n\n\n  get maxUploadRetryTime() {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time) {\n    validateNumber('time',\n    /* minValue=*/\n    0,\n    /* maxValue= */\n    Number.POSITIVE_INFINITY, time);\n    this._maxUploadRetryTime = time;\n  }\n  /**\r\n   * The maximum time to retry operations other than uploads or downloads in\r\n   * milliseconds.\r\n   */\n\n\n  get maxOperationRetryTime() {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time) {\n    validateNumber('time',\n    /* minValue=*/\n    0,\n    /* maxValue= */\n    Number.POSITIVE_INFINITY, time);\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken() {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n\n    const auth = this._authProvider.getImmediate({\n      optional: true\n    });\n\n    if (auth) {\n      const tokenData = await auth.getToken();\n\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n\n    return null;\n  }\n\n  async _getAppCheckToken() {\n    const appCheck = this._appCheckProvider.getImmediate({\n      optional: true\n    });\n\n    if (appCheck) {\n      const result = await appCheck.getToken(); // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n\n      return result.token;\n    }\n\n    return null;\n  }\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  _delete() {\n    if (!this._deleted) {\n      this._deleted = true;\n\n      this._requests.forEach(request => request.cancel());\n\n      this._requests.clear();\n    }\n\n    return Promise.resolve();\n  }\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  _makeStorageReference(loc) {\n    return new Reference(this, loc);\n  }\n  /**\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  _makeRequest(requestInfo, requestFactory, authToken, appCheckToken) {\n    if (!this._deleted) {\n      const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion);\n\n      this._requests.add(request); // Request removes itself from set when complete.\n\n\n      request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens(requestInfo, requestFactory) {\n    const [authToken, appCheckToken] = await Promise.all([this._getAuthToken(), this._getAppCheckToken()]);\n    return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\n  }\n\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.9.5\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nconst STORAGE_TYPE = 'storage';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\n\nfunction getBytes(ref, maxDownloadSizeBytes) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getBytesInternal(ref, maxDownloadSizeBytes);\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadBytes(ref, data, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return uploadBytes$1(ref, data, metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadString(ref, value, format, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return uploadString$1(ref, value, format, metadata);\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return uploadBytesResumable$1(ref, data, metadata);\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\n\n\nfunction getMetadata(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\n\n\nfunction updateMetadata(ref, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list(ref, options) {\n  ref = (0, _util.getModularInstance)(ref);\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return listAll$1(ref);\n}\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getDownloadURL$1(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return deleteObject$1(ref);\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  serviceOrRef = (0, _util.getModularInstance)(serviceOrRef);\n  return ref$1(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\n\n\nfunction _getChild(ref, childPath) {\n  return _getChild$1(ref, childPath);\n}\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\n\n\nfunction getStorage(app = (0, _app.getApp)(), bucketUrl) {\n  app = (0, _util.getModularInstance)(app);\n  const storageProvider = (0, _app._getProvider)(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\n\n\nfunction connectStorageEmulator(storage, host, port, options = {}) {\n  connectStorageEmulator$1(storage, host, port, options);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\n\n\nfunction getBlob(ref, maxDownloadSizeBytes) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getBlobInternal(ref, maxDownloadSizeBytes);\n}\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\n\n\nfunction getStream(ref, maxDownloadSizeBytes) {\n  throw new Error('getStream() is only supported by NodeJS builds');\n}\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\n\n\nfunction factory(container, {\n  instanceIdentifier: url\n}) {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n  return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, _app.SDK_VERSION);\n}\n\nfunction registerStorage() {\n  (0, _app._registerComponent)(new _component.Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true)); //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n\n  (0, _app.registerVersion)(name, version, ''); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  (0, _app.registerVersion)(name, version, 'esm2017');\n}\n\nregisterStorage();\n};"],
"names":["shadow$provide","global","require","module","exports","unknown","StorageError","message","canceled","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","start","f","callback","timeout","triggerCallback","args","triggeredCallback","apply","callWithDelay","millis","retryTimeoutId","setTimeout","handler","cancelState","success","globalTimeoutId","clearTimeout","call","hitTimeout","waitSeconds","waitMillis","Math","random","stop","wasTimeout","stopped","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","value","makeUrl","urlPart","host","protocol","origin","makeQueryString","params","encode","encodeURIComponent","queryPart","key","hasOwnProperty","nextPart","slice","makeRequest","requestInfo","appId","authToken","appCheckToken","requestFactory","firebaseVersion","urlParams","url","headers","Object","assign","length","NetworkRequest","method","body","successCodes","additionalRetryCodes","errorHandler","progressCallback","getBlob$1","BlobBuilder","WebKitBlobBuilder","undefined","bb","i","append","getBlob","dataFromString","stringData","StringFormat","RAW","StringData","utf8Bytes_","BASE64","BASE64URL","base64Bytes_","DATA_URL","parts","DataURLParts","base64","decoded","decodeURIComponent","e","contentType","b","c","charCodeAt","push","lo","hi","Uint8Array","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","jsonObjectOrNull","s","obj","JSON","parse","Array","isArray","child","path","childPath","canonicalChildPath","split","filter","component","join","lastComponent","index","lastIndexOf","noXform_","metadata","getMappings","mappings_","mappings","Mapping","nameMapping","xform","mappingsXformPath","_metadata","fullPath","sizeMapping","xformSize","size","Number","addRef","service","defineProperty","get","generateRef","loc","Location","bucket","_makeStorageReference","fromResourceString","resourceString","len","mapping","local","server","downloadUrlFromResourceString","tokens","tokensList","map","urls","token","base","queryString","alt","toResourceString","resource","writable","stringify","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","downloadUrlHandler","_protocol","sharedErrorHandler","location","err","newErr","getStatus","getErrorText","includes","serverResponse","objectErrorHandler","shared","getMetadata$2","fullServerUrl","maxOperationRetryTime","RequestInfo","getBytes$1","maxDownloadSizeBytes","_","data","getDownloadUrl","deleteObject$2","_xhr","_text","metadataForUpload_","blob","metadataClone","type","multipartUpload","bucketOnlyServerUrl","str","toString","boundary","metadata_","metadataString","FbsBlob","maxUploadRetryTime","uploadData","checkResumeHeader_","allowed","status","getResponseHeader","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","ResumableUploadStatus","continueResumableUpload","chunkSize","status_","current","total","bytesToUpload","bytesLeft","min","startByte","uploadCommand","uploadStatus","newCurrent","taskStateFromInternalTaskState","state","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","async","argsToForward","Promise","resolve","then","newTextConnection","XhrTextConnection","newBytesConnection","XhrBytesConnection","newBlobConnection","XhrBlobConnection","getBytesInternal","ref","_throwIfRoot","storage","_location","makeRequestWithTokens","getBlobInternal","uploadBytes$1","finalMetadata","uploadString$1","listAll$1","accumulator","listAllHelper","pageToken","nextPage","list$1","opt","options","maxResults","op","isRoot","delimiter","getDownloadURL$1","_getChild$1","newPath","Reference","refFromPath","FirebaseStorageImpl","_bucket","extractBucket","config","bucketString","makeFromBucketSpec","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","_util","createMockUserToken","app","projectId","_dataFromString","_getChild","_invalidArgument","_invalidRootOperation","connectStorageEmulator","deleteObject","getModularInstance","getBytes","getDownloadURL","getMetadata","getStorage","_app","getApp","bucketUrl","storageProvider","_getProvider","STORAGE_TYPE","getImmediate","storageInstance","identifier","getStream","Error","list","listAll","serviceOrRef","pathOrUrl","test","updateMetadata","uploadBytes","uploadBytesResumable","UploadTask","uploadString","_UploadTask","_TaskState","_TaskEvent","_Location","_FbsBlob","_component","FirebaseError","constructor","code","customData","_baseMessage","setPrototypeOf","prototype","_codeEquals","path_","bucketLocation","makeFromUrl","httpModify","gsRegex","RegExp","firebaseStorageHost","groups","regex","indices","gsIndices","postModify","gsModify","charAt","firebaseStorageRegExp","version","bucketDomain","firebaseStoragePath","firebaseStorageIndices","cloudStorageRegExp","DEFAULT_HOST","cloudStorageHost","cloudStoragePath","cloudStorageIndices","group","captures","exec","bucketValue","pathValue","FailRequest","error","promise_","reject","getPromise","cancel","_appDelete","ErrorCode","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","backoffId_","pendingConnection_","appDelete_","canceled_","resolve_","reject_","start_","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","isRetryStatusCode_","wasCanceled","ABORT","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","getResponse","appDelete","abort","isFiveHundredCode","isExtraRetryCode","extraRetryCodes","isRequestSpecificRetryCode","dataURL","matches","match","middle","end","substring","rest","elideCopy","blobType","data_","ArrayBuffer","byteLength","set","size_","type_","endByte","realBlob","webkitSlice","mozSlice","sliced","buffer","blobby","val","uint8Arrays","finalLength","forEach","merged","finalized","TaskEvent","STATE_CHANGED","Observer","nextOrObserver","complete","next","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","header","listener","upload","removeEventListener","responseType","_transferred","_needToFetchMetadata","_needToFetchStatus","_observers","_request","_uploadUrl","_error","_chunkMultiplier","_reject","_resolve","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","this._errorHandler","completeTransitions_","_transition","_metadataErrorHandler","this._metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","_getAuthToken","_getAppCheckToken","createRequest","_makeRequest","statusRequest","RESUMABLE_UPLOAD_CHUNK_SIZE","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","observer","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","observers","triggered","bind","snapshot","resume","valid","pause","_service","_newRef","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","DEFAULT_MAX_OPERATION_RETRY_TIME","_maxUploadRetryTime","DEFAULT_MAX_UPLOAD_RETRY_TIME","_requests","Set","time","POSITIVE_INFINITY","auth","optional","tokenData","getToken","accessToken","appCheck","_delete","request","clear","add","delete","_registerComponent","setMultipleInstances","Component","factory","container","getProvider","authProvider","appCheckProvider","SDK_VERSION","registerVersion"]
}
