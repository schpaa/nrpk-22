{
"version":3,
"file":"module$node_modules$$firebase$database$dist$index_esm2017.js",
"lineCount":441,
"mappings":"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",
"sources":["node_modules/@firebase/database/dist/index.esm2017.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$database$dist$index_esm2017\"] = function(global,require,module,exports) {\nvar process = require('process');\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports._repoManagerDatabaseFromApp=repoManagerDatabaseFromApp;exports._setSDKVersion=setSDKVersion;exports.child=child;exports.connectDatabaseEmulator=connectDatabaseEmulator;exports.enableLogging=enableLogging;exports.endAt=endAt;exports.endBefore=endBefore;exports.equalTo=equalTo;exports.get=get;exports.getDatabase=getDatabase;exports.goOffline=goOffline;exports.goOnline=goOnline;exports.increment=increment;exports.limitToFirst=limitToFirst;exports.limitToLast=limitToLast;exports.off=off;exports.onChildAdded=onChildAdded;exports.onChildChanged=onChildChanged;exports.onChildMoved=onChildMoved;exports.onChildRemoved=onChildRemoved;exports.onDisconnect=onDisconnect;exports.onValue=onValue;exports.orderByChild=orderByChild;exports.orderByKey=orderByKey;exports.orderByPriority=orderByPriority;exports.orderByValue=orderByValue;exports.push=push;exports.query=query;exports.ref=ref;exports.refFromURL=refFromURL;exports.remove=remove;exports.runTransaction=runTransaction;exports.serverTimestamp=serverTimestamp;exports.set=set;exports.setPriority=setPriority;exports.setWithPriority=setWithPriority;exports.startAfter=startAfter;exports.startAt=startAt;exports.update=update;exports._validateWritablePath=exports._validatePathString=exports._TEST_ACCESS_hijackHash=exports._TEST_ACCESS_forceRestClient=exports._ReferenceImpl=exports._QueryParams=exports._QueryImpl=exports.TransactionResult=exports.QueryConstraint=exports.OnDisconnect=exports.Database=exports.DataSnapshot=void 0;var _app=require(\"@firebase/app\");var _component=require(\"@firebase/component\");var _util=require(\"@firebase/util\");var _logger=require(\"@firebase/logger\");const name=\"@firebase/database\";const version=\"0.12.8\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** The semver (www.semver.org) version of the SDK. */let SDK_VERSION='';/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */function setSDKVersion(version){SDK_VERSION=version;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */class DOMStorageWrapper{/**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */constructor(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */set(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),(0,_util.stringify)(value));}}/**\r\n     * @returns The value that was stored under this key, or null\r\n     */get(key){const storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return(0,_util.jsonEval)(storedVal);}}remove(key){this.domStorage_.removeItem(this.prefixedName_(key));}prefixedName_(name){return this.prefix_+name;}toString(){return this.domStorage_.toString();}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */class MemoryStorage{constructor(){this.cache_={};this.isInMemoryStorage=true;}set(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}}get(key){if((0,_util.contains)(this.cache_,key)){return this.cache_[key];}return null;}remove(key){delete this.cache_[key];}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */const createStoragefor=function(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nconst domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */const PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */const SessionStorage=createStoragefor('sessionStorage');/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const logClient=new _logger.Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */const LUIDGenerator=function(){let id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */const sha1=function(str){const utf8Bytes=(0,_util.stringToByteArray)(str);const sha1=new _util.Sha1();sha1.update(utf8Bytes);const sha1Bytes=sha1.digest();return _util.base64.encodeByteArray(sha1Bytes);};const buildLogMessage_=function(...varArgs){let message='';for(let i=0;i<varArgs.length;i++){const arg=varArgs[i];if(Array.isArray(arg)||arg&&typeof arg==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof arg.length==='number'){message+=buildLogMessage_.apply(null,arg);}else if(typeof arg==='object'){message+=(0,_util.stringify)(arg);}else{message+=arg;}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n */let logger=null;/**\r\n * Flag to check for log availability on first log message\r\n */let firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */const enableLogging$1=function(logger_,persistent){(0,_util.assert)(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=_logger.LogLevel.VERBOSE;logger=logClient.log.bind(logClient);if(persistent){SessionStorage.set('logging_enabled',true);}}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};const log=function(...varArgs){if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true){enableLogging$1(true);}}if(logger){const message=buildLogMessage_.apply(null,varArgs);logger(message);}};const logWrapper=function(prefix){return function(...varArgs){log(prefix,...varArgs);};};const error=function(...varArgs){const message='FIREBASE INTERNAL ERROR: '+buildLogMessage_(...varArgs);logClient.error(message);};const fatal=function(...varArgs){const message=`FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;logClient.error(message);throw new Error(message);};const warn=function(...varArgs){const message='FIREBASE WARNING: '+buildLogMessage_(...varArgs);logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */const warnIfPageIsSecure=function(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */const isInvalidJSONNumber=function(data){return typeof data==='number'&&(data!==data||// NaN\ndata===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY);};const executeWhenDOMReady=function(fn){if((0,_util.isNodeSdk)()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nlet called=false;const wrappedFn=function(){if(!document.body){setTimeout(wrappedFn,Math.floor(10));return;}if(!called){called=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn,false);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(document.attachEvent){// IE.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndocument.attachEvent('onreadystatechange',()=>{if(document.readyState==='complete'){wrappedFn();}});// fallback to onload.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.attachEvent('onload',wrappedFn);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */const MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */const MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */const nameCompare=function(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{const aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt===0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @returns {!number} comparison result.\r\n */const stringCompare=function(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};const requireKey=function(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+(0,_util.stringify)(obj));}};const ObjectToUniqueKey=function(obj){if(typeof obj!=='object'||obj===null){return(0,_util.stringify)(obj);}const keys=[];// eslint-disable-next-line guard-for-in\nfor(const k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();let key='{';for(let i=0;i<keys.length;i++){if(i!==0){key+=',';}key+=(0,_util.stringify)(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */const splitStringBySize=function(str,segsize){const len=str.length;if(len<=segsize){return[str];}const dataSegs=[];for(let c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */function each(obj,fn){for(const key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */const doubleToIEEE754String=function(v){(0,_util.assert)(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nconst ebits=11,fbits=52;const bias=(1<<ebits-1)-1;let s,e,f,ln,i;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nconst bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();const str=bits.join('');// Return the data as a hex string. --MJL\nlet hexByteString='';for(i=0;i<64;i+=8){let hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1){hexByte='0'+hexByte;}hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */const isChromeExtensionContentScript=function(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */const isWindowsStoreApp=function(){// Check for the presence of a couple WinRT globals\nreturn typeof Windows==='object'&&typeof Windows.UI==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n */function errorForServerCode(code,query){let reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code==='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code==='unavailable'){reason='The service is unavailable';}const error=new Error(code+' at '+query._path.toString()+': '+reason);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code.toUpperCase();return error;}/**\r\n * Used to test for integer-looking strings\r\n */const INTEGER_REGEXP_=new RegExp('^-?(0*)\\\\d{1,10}$');/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */const INTEGER_32_MIN=-2147483648;/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */const INTEGER_32_MAX=2147483647;/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */const tryParseInt=function(str){if(INTEGER_REGEXP_.test(str)){const intVal=Number(str);if(intVal>=INTEGER_32_MIN&&intVal<=INTEGER_32_MAX){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */const exceptionGuard=function(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(()=>{// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nconst stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */const beingCrawled=function(){const userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */const setTimeoutNonBlocking=function(fn,time){const timeout=setTimeout(fn,time);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(typeof timeout==='object'&&timeout['unref']){// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntimeout['unref']();}return timeout;};/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */class AppCheckTokenProvider{constructor(appName_,appCheckProvider){this.appName_=appName_;this.appCheckProvider=appCheckProvider;this.appCheck=appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.getImmediate({optional:true});if(!this.appCheck){appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.get().then(appCheck=>this.appCheck=appCheck);}}getToken(forceRefresh){if(!this.appCheck){return new Promise((resolve,reject)=>{// Support delayed initialization of FirebaseAppCheck. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// AppCheck and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(()=>{if(this.appCheck){this.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.appCheck.getToken(forceRefresh);}addTokenChangeListener(listener){var _a;(_a=this.appCheckProvider)===null||_a===void 0?void 0:_a.get().then(appCheck=>appCheck.addTokenListener(listener));}notifyForInvalidToken(){warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" `+'are invalid. This usually indicates your app was not initialized correctly.');}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */class FirebaseAuthTokenProvider{constructor(appName_,firebaseOptions_,authProvider_){this.appName_=appName_;this.firebaseOptions_=firebaseOptions_;this.authProvider_=authProvider_;this.auth_=null;this.auth_=authProvider_.getImmediate({optional:true});if(!this.auth_){authProvider_.onInit(auth=>this.auth_=auth);}}getToken(forceRefresh){if(!this.auth_){return new Promise((resolve,reject)=>{// Support delayed initialization of FirebaseAuth. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// Auth and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(()=>{if(this.auth_){this.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.auth_.getToken(forceRefresh).catch(error=>{// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});}addTokenChangeListener(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nif(this.auth_){this.auth_.addAuthTokenListener(listener);}else{this.authProvider_.get().then(auth=>auth.addAuthTokenListener(listener));}}removeTokenChangeListener(listener){this.authProvider_.get().then(auth=>auth.removeAuthTokenListener(listener));}notifyForInvalidToken(){let errorMessage='Provided authentication credentials for the app named \"'+this.appName_+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.firebaseOptions_){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.firebaseOptions_){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);}}/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */class EmulatorTokenProvider{constructor(accessToken){this.accessToken=accessToken;}getToken(forceRefresh){return Promise.resolve({accessToken:this.accessToken});}addTokenChangeListener(listener){// Invoke the listener immediately to match the behavior in Firebase Auth\n// (see packages/auth/src/auth.js#L1807)\nlistener(this.accessToken);}removeTokenChangeListener(listener){}notifyForInvalidToken(){}}/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */EmulatorTokenProvider.OWNER='owner';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const PROTOCOL_VERSION='5';const VERSION_PARAM='v';const TRANSPORT_SESSION_PARAM='s';const REFERER_PARAM='r';const FORGE_REF='f';// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nconst FORGE_DOMAIN_RE=/(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;const LAST_SESSION_PARAM='ls';const APPLICATION_ID_PARAM='p';const APP_CHECK_TOKEN_PARAM='ac';const WEBSOCKET='websocket';const LONG_POLLING='long_polling';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A class that holds metadata about a Repo object\r\n */class RepoInfo{/**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */constructor(host,secure,namespace,webSocketOnly,nodeAdmin=false,persistenceKey='',includeNamespaceInQueryParams=false){this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.nodeAdmin=nodeAdmin;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this._host=host.toLowerCase();this._domain=this._host.substr(this._host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this._host;}isCacheableHost(){return this.internalHost.substr(0,2)==='s-';}isCustomHost(){return this._domain!=='firebaseio.com'&&this._domain!=='firebaseio-demo.com';}get host(){return this._host;}set host(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this._host,this.internalHost);}}}toString(){let str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;}toURLString(){const protocol=this.secure?'https://':'http://';const query=this.includeNamespaceInQueryParams?`?ns=${this.namespace}`:'';return`${protocol}${this.host}/${query}`;}}function repoInfoNeedsQueryParam(repoInfo){return repoInfo.host!==repoInfo.internalHost||repoInfo.isCustomHost()||repoInfo.includeNamespaceInQueryParams;}/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */function repoInfoConnectionURL(repoInfo,type,params){(0,_util.assert)(typeof type==='string','typeof type must == string');(0,_util.assert)(typeof params==='object','typeof params must == object');let connURL;if(type===WEBSOCKET){connURL=(repoInfo.secure?'wss://':'ws://')+repoInfo.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(repoInfo.secure?'https://':'http://')+repoInfo.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(repoInfoNeedsQueryParam(repoInfo)){params['ns']=repoInfo.namespace;}const pairs=[];each(params,(key,value)=>{pairs.push(key+'='+value);});return connURL+pairs.join('&');}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Tracks a collection of stats.\r\n */class StatsCollection{constructor(){this.counters_={};}incrementCounter(name,amount=1){if(!(0,_util.contains)(this.counters_,name)){this.counters_[name]=0;}this.counters_[name]+=amount;}get(){return(0,_util.deepCopy)(this.counters_);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const collections={};const reporters={};function statsManagerGetCollection(repoInfo){const hashString=repoInfo.toString();if(!collections[hashString]){collections[hashString]=new StatsCollection();}return collections[hashString];}function statsManagerGetOrCreateReporter(repoInfo,creatorFunction){const hashString=repoInfo.toString();if(!reporters[hashString]){reporters[hashString]=creatorFunction();}return reporters[hashString];}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */class PacketReceiver{/**\r\n     * @param onMessage_\r\n     */constructor(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}closeAfter(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}}/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */handleResponse(requestNum,data){this.pendingResponses[requestNum]=data;while(this.pendingResponses[this.currentResponseNum]){const toProcess=this.pendingResponses[this.currentResponseNum];delete this.pendingResponses[this.currentResponseNum];for(let i=0;i<toProcess.length;++i){if(toProcess[i]){exceptionGuard(()=>{this.onMessage_(toProcess[i]);});}}if(this.currentResponseNum===this.closeAfterResponse){if(this.onClose){this.onClose();this.onClose=null;}break;}this.currentResponseNum++;}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // URL query parameters associated with longpolling\nconst FIREBASE_LONGPOLL_START_PARAM='start';const FIREBASE_LONGPOLL_CLOSE_COMMAND='close';const FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';const FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';const FIREBASE_LONGPOLL_ID_PARAM='id';const FIREBASE_LONGPOLL_PW_PARAM='pw';const FIREBASE_LONGPOLL_SERIAL_PARAM='ser';const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';const FIREBASE_LONGPOLL_DATA_PARAM='d';const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE=1870;const SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */const KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */const LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n */class BrowserPollConnection{/**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */constructor(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){this.connId=connId;this.repoInfo=repoInfo;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=statsManagerGetCollection(repoInfo);this.urlFn=params=>{// Always add the token if we have one.\nif(this.appCheckToken){params[APP_CHECK_TOKEN_PARAM]=this.appCheckToken;}return repoInfoConnectionURL(repoInfo,LONG_POLLING,params);};}/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */open(onMessage,onDisconnect){this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(()=>{this.log_('Timed out trying to connect.');// Make sure we clear the host cache\nthis.onClosed_();this.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(()=>{if(this.isClosed_){return;}//Set up a callback that gets triggered once a connection is set up.\nthis.scriptTagHolder=new FirebaseIFrameScriptHolder((...args)=>{const[command,arg1,arg2,arg3,arg4]=args;this.incrementIncomingBytes_(args);if(!this.scriptTagHolder){return;// we closed the connection.\n}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}this.everConnected_=true;if(command===FIREBASE_LONGPOLL_START_PARAM){this.id=arg1;this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\nthis.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\nthis.myPacketOrderer.closeAfter(arg1,()=>{this.onClosed_();});}else{this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},(...args)=>{const[pN,data]=args;this.incrementIncomingBytes_(args);this.myPacketOrderer.handleResponse(pN,data);},()=>{this.onClosed_();},this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nconst urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(this.scriptTagHolder.uniqueCallbackIdentifier){urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=this.scriptTagHolder.uniqueCallbackIdentifier;}urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=this.transportSessionId;}if(this.lastSessionId){urlParams[LAST_SESSION_PARAM]=this.lastSessionId;}if(this.applicationId){urlParams[APPLICATION_ID_PARAM]=this.applicationId;}if(this.appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=this.appCheckToken;}if(typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}const connectURL=this.urlFn(urlParams);this.log_('Connecting via long-poll to '+connectURL);this.scriptTagHolder.addTag(connectURL,()=>{/* do nothing */});});}/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */start(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);}/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */static forceAllow(){BrowserPollConnection.forceAllow_=true;}/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */static forceDisallow(){BrowserPollConnection.forceDisallow_=true;}// Static method, use string literal so it can be accessed in a generic way\nstatic isAvailable(){if((0,_util.isNodeSdk)()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}}/**\r\n     * No-op for polling\r\n     */markConnectionHealthy(){}/**\r\n     * Stops polling and cleans up the iframe\r\n     */shutdown_(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}}/**\r\n     * Triggered when this transport is closed\r\n     */onClosed_(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}}/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */close(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}}/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */send(data){const dataStr=(0,_util.stringify)(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nconst base64data=(0,_util.base64Encode)(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nconst dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(let i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}}/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */addDisconnectPingFrame(id,pw){if((0,_util.isNodeSdk)()){return;}this.myDisconnFrame=document.createElement('iframe');const urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);}/**\r\n     * Used to track the bytes received by this client\r\n     */incrementIncomingBytes_(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nconst bytesReceived=(0,_util.stringify)(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);}}/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/class FirebaseIFrameScriptHolder{/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */constructor(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\nthis.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!(0,_util.isNodeSdk)()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nlet script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){const currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";\u003c/script>';}const iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */static createIFrame_(){const iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nconst a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){const domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(iframe.document){// eslint-disable-next-line @typescript-eslint/no-explicit-any\niframe.doc=iframe.document;//others?\n}return iframe;}/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */close(){//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(()=>{if(this.myIFrame!==null){document.body.removeChild(this.myIFrame);this.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.\nconst onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}}/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */startLongPoll(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}}/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */newRequest_(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;const urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;let theURL=this.urlFn(urlParams);//Now add as much data as we can.\nlet curDataString='';let i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nconst nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nconst theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}}/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */enqueueSegment(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}}/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */addLongPollTag_(url,serial){//remember that we sent this request.\nthis.outstandingRequests.add(serial);const doNewRequest=()=>{this.outstandingRequests.delete(serial);this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nconst keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));const readyStateCB=()=>{// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);}/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */addTag(url,loadCB){if((0,_util.isNodeSdk)()){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nthis.doNodeLongPoll(url,loadCB);}else{setTimeout(()=>{try{// if we're already closed, don't add this poll\nif(!this.sendNewPolls){return;}const newScript=this.myIFrame.doc.createElement('script');newScript.type='text/javascript';newScript.async=true;newScript.src=url;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript.onload=newScript.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst rstate=newScript.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript.onload=newScript.onreadystatechange=null;if(newScript.parentNode){newScript.parentNode.removeChild(newScript);}loadCB();}};newScript.onerror=()=>{log('Long-poll script failed to load: '+url);this.sendNewPolls=false;this.close();};this.myIFrame.doc.body.appendChild(newScript);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const WEBSOCKET_MAX_FRAME_SIZE=16384;const WEBSOCKET_KEEPALIVE_INTERVAL=45000;let WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n */class WebSocketConnection{/**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */constructor(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){this.connId=connId;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=statsManagerGetCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId,appCheckToken);this.nodeAdmin=repoInfo.nodeAdmin;}/**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */static connectionURL_(repoInfo,transportSessionId,lastSessionId,appCheckToken){const urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!(0,_util.isNodeSdk)()&&typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}if(appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=appCheckToken;}return repoInfoConnectionURL(repoInfo,WEBSOCKET,urlParams);}/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */open(onMessage,onDisconnect){this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if((0,_util.isNodeSdk)()){const device=this.nodeAdmin?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nconst options={headers:{'User-Agent':`Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,'X-Firebase-GMPID':this.applicationId||''}};// If using Node with admin creds, AppCheck-related checks are unnecessary.\n// Note that we send the credentials here even if they aren't admin credentials, which is\n// not a problem.\n// Note that this header is just used to bypass appcheck, and the token should still be sent\n// through the websocket connection once it is established.\nif(this.authToken){options.headers['Authorization']=`Bearer ${this.authToken}`;}if(this.appCheckToken){options.headers['X-Firebase-AppCheck']=this.appCheckToken;}// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nconst env=process['env'];const proxy=this.connURL.indexOf('wss://')===0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{const options={headers:{'X-Firebase-GMPID':this.applicationId||'','X-Firebase-AppCheck':this.appCheckToken||''}};this.mySock=new WebSocketImpl(this.connURL,[],options);}}catch(e){this.log_('Error instantiating WebSocket.');const error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();return;}this.mySock.onopen=()=>{this.log_('Websocket connected.');this.everConnected_=true;};this.mySock.onclose=()=>{this.log_('Websocket connection was disconnected.');this.mySock=null;this.onClosed_();};this.mySock.onmessage=m=>{this.handleIncomingFrame(m);};this.mySock.onerror=e=>{this.log_('WebSocket error.  Closing connection.');// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();};}/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */start(){}static forceDisallow(){WebSocketConnection.forceDisallow_=true;}static isAvailable(){let isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){const oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;const oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;}/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */static previouslyFailed(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;}markConnectionHealthy(){PersistentStorage.remove('previous_websocket_failure');}appendFrame_(data){this.frames.push(data);if(this.frames.length===this.totalFrames){const fullMess=this.frames.join('');this.frames=null;const jsonMess=(0,_util.jsonEval)(fullMess);//handle the message\nthis.onMessage(jsonMess);}}/**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */handleNewFrameCount_(frameCount){this.totalFrames=frameCount;this.frames=[];}/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */extractFrameCount_(data){(0,_util.assert)(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){const frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;}/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */handleIncomingFrame(mess){if(this.mySock===null){return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n}const data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nconst remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}}/**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */send(data){this.resetKeepAlive();const dataStr=(0,_util.stringify)(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nconst dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(let i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}}shutdown_(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}}onClosed_(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}}/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */close(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}}/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */resetKeepAlive(){clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(()=>{//If there has been no websocket activity for a while, send a no-op\nif(this.mySock){this.sendString_('0');}this.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));}/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */sendString_(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}}}/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */WebSocketConnection.healthyTimeout=30000;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */class TransportManager{/**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */constructor(repoInfo){this.initTransports_(repoInfo);}static get ALL_TRANSPORTS(){return[BrowserPollConnection,WebSocketConnection];}initTransports_(repoInfo){const isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();let isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable){warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");}isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{const transports=this.transports_=[];for(const transport of TransportManager.ALL_TRANSPORTS){if(transport&&transport['isAvailable']()){transports.push(transport);}}}}/**\r\n     * @returns The constructor for the initial transport to use\r\n     */initialTransport(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}}/**\r\n     * @returns The constructor for the next transport, or null\r\n     */upgradeTransport(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE=10*1024;const BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;const MESSAGE_TYPE='t';const MESSAGE_DATA='d';const CONTROL_SHUTDOWN='s';const CONTROL_RESET='r';const CONTROL_ERROR='e';const CONTROL_PONG='o';const SWITCH_ACK='a';const END_TRANSMISSION='n';const PING='p';const SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */class Connection{/**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */constructor(id,repoInfo_,applicationId_,appCheckToken_,authToken_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.appCheckToken_=appCheckToken_;this.authToken_=authToken_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     */start_(){const conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,null,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;const onMessageReceived=this.connReceiver_(this.conn_);const onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(()=>{// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\nthis.conn_&&this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));const healthyTimeoutMS=conn['healthyTimeout']||0;if(healthyTimeoutMS>0){this.healthyTimeout_=setTimeoutNonBlocking(()=>{this.healthyTimeout_=null;if(!this.isHealthy_){if(this.conn_&&this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){this.log_('Connection exceeded healthy timeout but has received '+this.conn_.bytesReceived+' bytes.  Marking connection healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}else if(this.conn_&&this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){this.log_('Connection exceeded healthy timeout but has sent '+this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{this.log_('Closing unhealthy connection after timeout.');this.close();}}// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(healthyTimeoutMS));}}nextTransportId_(){return'c:'+this.id+':'+this.connectionCount++;}disconnReceiver_(conn){return everConnected=>{if(conn===this.conn_){this.onConnectionLost_(everConnected);}else if(conn===this.secondaryConn_){this.log_('Secondary connection lost.');this.onSecondaryConnectionLost_();}else{this.log_('closing an old connection');}};}connReceiver_(conn){return message=>{if(this.state_!==2/* DISCONNECTED */){if(conn===this.rx_){this.onPrimaryMessageReceived_(message);}else if(conn===this.secondaryConn_){this.onSecondaryMessageReceived_(message);}else{this.log_('message on old connection');}}};}/**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */sendRequest(dataMsg){// wrap in a data message envelope and send it on\nconst msg={t:'d',d:dataMsg};this.sendData_(msg);}tryCleanupConnection(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}}onSecondaryControl_(controlData){if(MESSAGE_TYPE in controlData){const cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}}onSecondaryMessageReceived_(parsedData){const layer=requireKey('t',parsedData);const data=requireKey('d',parsedData);if(layer==='c'){this.onSecondaryControl_(data);}else if(layer==='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}}upgradeIfSecondaryHealthy_(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}}proceedWithUpgrade_(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();}onPrimaryMessageReceived_(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nconst layer=requireKey('t',parsedData);const data=requireKey('d',parsedData);if(layer==='c'){this.onControl_(data);}else if(layer==='d'){this.onDataMessage_(data);}}onDataMessage_(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);}onPrimaryResponse_(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}}onControl_(controlData){const cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){const payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(let i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}}/**\r\n     * @param handshake - The handshake data returned from the server\r\n     */onHandshake_(handshake){const timestamp=handshake.ts;const version=handshake.v;const host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.host=host;// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_===0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}}tryStartUpgrade_(){const conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}}startUpgrade_(conn){this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;const onMessage=this.connReceiver_(this.secondaryConn_);const onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(()=>{if(this.secondaryConn_){this.log_('Timed out trying to upgrade.');this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));}onReset_(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.host=host;// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}}onConnectionEstablished_(conn,timestamp){this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(()=>{this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}}sendPingOnPrimaryIfNecessary_(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}}onSecondaryConnectionLost_(){const conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}}/**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */onConnectionLost_(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();}onConnectionShutdown_(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();}sendData_(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}}/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */close(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}}closeConnections_(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */class ServerActions{put(pathString,data,onComplete,hash){}merge(pathString,data,onComplete,hash){}/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */refreshAuthToken(token){}/**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */refreshAppCheckToken(token){}onDisconnectPut(pathString,data,onComplete){}onDisconnectMerge(pathString,data,onComplete){}onDisconnectCancel(pathString,onComplete){}reportStats(stats){}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */class EventEmitter{constructor(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};(0,_util.assert)(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     */trigger(eventType,...varArgs){if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nconst listeners=[...this.listeners_[eventType]];for(let i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,varArgs);}}}on(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback,context});const eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}}off(eventType,callback,context){this.validateEventType_(eventType);const listeners=this.listeners_[eventType]||[];for(let i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}}validateEventType_(eventType){(0,_util.assert)(this.allowedEvents_.find(et=>{return et===eventType;}),'Unknown event: '+eventType);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */class OnlineMonitor extends EventEmitter{constructor(){super(['online']);this.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!(0,_util.isMobileCordova)()){window.addEventListener('online',()=>{if(!this.online_){this.online_=true;this.trigger('online',true);}},false);window.addEventListener('offline',()=>{if(this.online_){this.online_=false;this.trigger('online',false);}},false);}}static getInstance(){return new OnlineMonitor();}getInitialEvent(eventType){(0,_util.assert)(eventType==='online','Unknown event type: '+eventType);return[this.online_];}currentlyOnline(){return this.online_;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** Maximum key depth. */const MAX_PATH_DEPTH=32;/** Maximum number of (UTF8) bytes in a Firebase path. */const MAX_PATH_LENGTH_BYTES=768;/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */class Path{/**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */constructor(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nlet copyTo=0;for(let i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}toString(){let pathString='';for(let i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+this.pieces_[i];}}return pathString||'/';}}function newEmptyPath(){return new Path('');}function pathGetFront(path){if(path.pieceNum_>=path.pieces_.length){return null;}return path.pieces_[path.pieceNum_];}/**\r\n * @returns The number of segments in this path\r\n */function pathGetLength(path){return path.pieces_.length-path.pieceNum_;}function pathPopFront(path){let pieceNum=path.pieceNum_;if(pieceNum<path.pieces_.length){pieceNum++;}return new Path(path.pieces_,pieceNum);}function pathGetBack(path){if(path.pieceNum_<path.pieces_.length){return path.pieces_[path.pieces_.length-1];}return null;}function pathToUrlEncodedString(path){let pathString='';for(let i=path.pieceNum_;i<path.pieces_.length;i++){if(path.pieces_[i]!==''){pathString+='/'+encodeURIComponent(String(path.pieces_[i]));}}return pathString||'/';}/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */function pathSlice(path,begin=0){return path.pieces_.slice(path.pieceNum_+begin);}function pathParent(path){if(path.pieceNum_>=path.pieces_.length){return null;}const pieces=[];for(let i=path.pieceNum_;i<path.pieces_.length-1;i++){pieces.push(path.pieces_[i]);}return new Path(pieces,0);}function pathChild(path,childPathObj){const pieces=[];for(let i=path.pieceNum_;i<path.pieces_.length;i++){pieces.push(path.pieces_[i]);}if(childPathObj instanceof Path){for(let i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{const childPieces=childPathObj.split('/');for(let i=0;i<childPieces.length;i++){if(childPieces[i].length>0){pieces.push(childPieces[i]);}}}return new Path(pieces,0);}/**\r\n * @returns True if there are no segments in this path\r\n */function pathIsEmpty(path){return path.pieceNum_>=path.pieces_.length;}/**\r\n * @returns The path from outerPath to innerPath\r\n */function newRelativePath(outerPath,innerPath){const outer=pathGetFront(outerPath),inner=pathGetFront(innerPath);if(outer===null){return innerPath;}else if(outer===inner){return newRelativePath(pathPopFront(outerPath),pathPopFront(innerPath));}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}}/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */function pathCompare(left,right){const leftKeys=pathSlice(left,0);const rightKeys=pathSlice(right,0);for(let i=0;i<leftKeys.length&&i<rightKeys.length;i++){const cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0){return cmp;}}if(leftKeys.length===rightKeys.length){return 0;}return leftKeys.length<rightKeys.length?-1:1;}/**\r\n * @returns true if paths are the same.\r\n */function pathEquals(path,other){if(pathGetLength(path)!==pathGetLength(other)){return false;}for(let i=path.pieceNum_,j=other.pieceNum_;i<=path.pieces_.length;i++,j++){if(path.pieces_[i]!==other.pieces_[j]){return false;}}return true;}/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */function pathContains(path,other){let i=path.pieceNum_;let j=other.pieceNum_;if(pathGetLength(path)>pathGetLength(other)){return false;}while(i<path.pieces_.length){if(path.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;}/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */class ValidationPath{/**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */constructor(path,errorPrefix_){this.errorPrefix_=errorPrefix_;this.parts_=pathSlice(path,0);/** Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(let i=0;i<this.parts_.length;i++){this.byteLength_+=(0,_util.stringLength)(this.parts_[i]);}validationPathCheckValid(this);}}function validationPathPush(validationPath,child){// Count the needed '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_+=1;}validationPath.parts_.push(child);validationPath.byteLength_+=(0,_util.stringLength)(child);validationPathCheckValid(validationPath);}function validationPathPop(validationPath){const last=validationPath.parts_.pop();validationPath.byteLength_-=(0,_util.stringLength)(last);// Un-count the previous '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_-=1;}}function validationPathCheckValid(validationPath){if(validationPath.byteLength_>MAX_PATH_LENGTH_BYTES){throw new Error(validationPath.errorPrefix_+'has a key path longer than '+MAX_PATH_LENGTH_BYTES+' bytes ('+validationPath.byteLength_+').');}if(validationPath.parts_.length>MAX_PATH_DEPTH){throw new Error(validationPath.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+MAX_PATH_DEPTH+') or object contains a cycle '+validationPathToErrorString(validationPath));}}/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */function validationPathToErrorString(validationPath){if(validationPath.parts_.length===0){return'';}return\"in property '\"+validationPath.parts_.join('.')+\"'\";}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class VisibilityMonitor extends EventEmitter{constructor(){super(['visible']);let hidden;let visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\nthis.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,()=>{const visible=!document[hidden];if(visible!==this.visible_){this.visible_=visible;this.trigger('visible',visible);}},false);}}static getInstance(){return new VisibilityMonitor();}getInitialEvent(eventType){(0,_util.assert)(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const RECONNECT_MIN_DELAY=1000;const RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT=3*1000;const RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER=1.3;const RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */class PersistentConnection extends ServerActions{/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */constructor(repoInfo_,applicationId_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,appCheckTokenProvider_,authOverride_){super();this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.onDataUpdate_=onDataUpdate_;this.onConnectStatus_=onConnectStatus_;this.onServerInfoUpdate_=onServerInfoUpdate_;this.authTokenProvider_=authTokenProvider_;this.appCheckTokenProvider_=appCheckTokenProvider_;this.authOverride_=authOverride_;// Used for diagnostic logging.\nthis.id=PersistentConnection.nextPersistentConnectionId_++;this.log_=logWrapper('p:'+this.id+':');this.interruptReasons_={};this.listens=new Map();this.outstandingPuts_=[];this.outstandingGets_=[];this.outstandingPutCount_=0;this.outstandingGetCount_=0;this.onDisconnectRequestQueue_=[];this.connected_=false;this.reconnectDelay_=RECONNECT_MIN_DELAY;this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;this.securityDebugCallback_=null;this.lastSessionId=null;this.establishConnectionTimer_=null;this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\nthis.requestCBHash_={};this.requestNumber_=0;this.realtime_=null;this.authToken_=null;this.appCheckToken_=null;this.forceTokenRefresh_=false;this.invalidAuthTokenCount_=0;this.invalidAppCheckTokenCount_=0;this.firstConnection_=true;this.lastConnectionAttemptTime_=null;this.lastConnectionEstablishedTime_=null;if(authOverride_&&!(0,_util.isNodeSdk)()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}VisibilityMonitor.getInstance().on('visible',this.onVisible_,this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',this.onOnline_,this);}}sendRequest(action,body,onResponse){const curReqNum=++this.requestNumber_;const msg={r:curReqNum,a:action,b:body};this.log_((0,_util.stringify)(msg));(0,_util.assert)(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}}get(query){this.initConnection_();const deferred=new _util.Deferred();const request={p:query._path.toString(),q:query._queryObject};const outstandingGet={action:'g',request,onComplete:message=>{const payload=message['d'];if(message['s']==='ok'){this.onDataUpdate_(request['p'],payload,/*isMerge*/false,/*tag*/null);deferred.resolve(payload);}else{deferred.reject(payload);}}};this.outstandingGets_.push(outstandingGet);this.outstandingGetCount_++;const index=this.outstandingGets_.length-1;if(!this.connected_){setTimeout(()=>{const get=this.outstandingGets_[index];if(get===undefined||outstandingGet!==get){return;}delete this.outstandingGets_[index];this.outstandingGetCount_--;if(this.outstandingGetCount_===0){this.outstandingGets_=[];}this.log_('get '+index+' timed out on connection');deferred.reject(new Error('Client is offline.'));},GET_CONNECT_TIMEOUT);}if(this.connected_){this.sendGet_(index);}return deferred.promise;}listen(query,currentHashFn,tag,onComplete){this.initConnection_();const queryId=query._queryIdentifier;const pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}(0,_util.assert)(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'listen() called for non-default but complete query');(0,_util.assert)(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');const listenSpec={onComplete,hashFn:currentHashFn,query,tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}}sendGet_(index){const get=this.outstandingGets_[index];this.sendRequest('g',get.request,message=>{delete this.outstandingGets_[index];this.outstandingGetCount_--;if(this.outstandingGetCount_===0){this.outstandingGets_=[];}if(get.onComplete){get.onComplete(message);}});}sendListen_(listenSpec){const query=listenSpec.query;const pathString=query._path.toString();const queryId=query._queryIdentifier;this.log_('Listen on '+pathString+' for '+queryId);const req={/*path*/p:pathString};const action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query._queryObject;req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,message=>{const payload=message[/*data*/'d'];const status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);const currentListenSpec=this.listens.get(pathString)&&this.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){this.log_('listen response',message);if(status!=='ok'){this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});}static warnOnListenWarnings_(payload,query){if(payload&&typeof payload==='object'&&(0,_util.contains)(payload,'w')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst warnings=(0,_util.safeGet)(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){const indexSpec='\".indexOn\": \"'+query._queryParams.getIndex().toString()+'\"';const indexPath=query._path.toString();warn(`Using an unspecified index. Your data will be downloaded and `+`filtered on the client. Consider adding ${indexSpec} at `+`${indexPath} to your security rules for better performance.`);}}}refreshAuthToken(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},()=>{});}}this.reduceReconnectDelayIfAdminCredential_(token);}reduceReconnectDelayIfAdminCredential_(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nconst isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||(0,_util.isAdmin)(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}}refreshAppCheckToken(token){this.appCheckToken_=token;this.log_('App check token refreshed');if(this.appCheckToken_){this.tryAppCheck();}else{//If we're connected we want to let the server know to unauthenticate us.\n//If we're not connected, simply delete the credential so we dont become\n// authenticated next time we connect.\nif(this.connected_){this.sendRequest('unappeck',{},()=>{});}}}/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */tryAuth(){if(this.connected_&&this.authToken_){const token=this.authToken_;const authMethod=(0,_util.isValidFormat)(token)?'auth':'gauth';const requestData={cred:token};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,res=>{const status=res[/*status*/'s'];const data=res[/*data*/'d']||'error';if(this.authToken_===token){if(status==='ok'){this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\nthis.onAuthRevoked_(status,data);}}});}}/**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */tryAppCheck(){if(this.connected_&&this.appCheckToken_){this.sendRequest('appcheck',{'token':this.appCheckToken_},res=>{const status=res[/*status*/'s'];const data=res[/*data*/'d']||'error';if(status==='ok'){this.invalidAppCheckTokenCount_=0;}else{this.onAppCheckRevoked_(status,data);}});}}/**\r\n     * @inheritDoc\r\n     */unlisten(query,tag){const pathString=query._path.toString();const queryId=query._queryIdentifier;this.log_('Unlisten called for '+pathString+' '+queryId);(0,_util.assert)(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'unlisten() called for non-default but complete query');const listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query._queryObject,tag);}}sendUnlisten_(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);const req={/*path*/p:pathString};const action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);}onDisconnectPut(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString,action:'o',data,onComplete});}}onDisconnectMerge(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString,action:'om',data,onComplete});}}onDisconnectCancel(pathString,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString,action:'oc',data:null,onComplete});}}sendOnDisconnect_(action,pathString,data,onComplete){const request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,response=>{if(onComplete){setTimeout(()=>{onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});}put(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);}merge(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);}putInternal(action,pathString,data,onComplete,hash){this.initConnection_();const request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined){request[/*hash*/'h']=hash;}// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action,request,onComplete});this.outstandingPutCount_++;const index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}}sendPut_(index){const action=this.outstandingPuts_[index].action;const request=this.outstandingPuts_[index].request;const onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,message=>{this.log_(action+' response',message);delete this.outstandingPuts_[index];this.outstandingPutCount_--;// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}if(onComplete){onComplete(message[/*status*/'s'],message[/* data */'d']);}});}reportStats(stats){// If we're not connected, we just drop the stats.\nif(this.connected_){const request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,result=>{const status=result[/*status*/'s'];if(status!=='ok'){const errorReason=result[/* data */'d'];this.log_('reportStats','Error sending stats: '+errorReason);}});}}onDataMessage_(message){if('r'in message){// this is a response\nthis.log_('from server: '+(0,_util.stringify)(message));const reqNum=message['r'];const onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}}onDataPush_(action,body){this.log_('handleServerMessage',action,body);if(action==='d'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);}else if(action==='m'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);}else if(action==='c'){this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);}else if(action==='ac'){this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='apc'){this.onAppCheckRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='sd'){this.onSecurityDebugPacket_(body);}else{error('Unrecognized action received from server: '+(0,_util.stringify)(action)+'\\nAre you using the latest client?');}}onReady_(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);}scheduleConnect_(timeout){(0,_util.assert)(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(()=>{this.establishConnectionTimer_=null;this.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(timeout));}initConnection_(){if(!this.realtime_&&this.firstConnection_){this.scheduleConnect_(0);}}onVisible_(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;}onOnline_(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}}onRealtimeDisconnect_(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nconst timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT){this.reconnectDelay_=RECONNECT_MIN_DELAY;}this.lastConnectionEstablishedTime_=null;}const timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;let reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);}async establishConnection_(){if(this.shouldReconnect_()){this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;const onDataMessage=this.onDataMessage_.bind(this);const onReady=this.onReady_.bind(this);const onDisconnect=this.onRealtimeDisconnect_.bind(this);const connId=this.id+':'+PersistentConnection.nextConnectionId_++;const lastSessionId=this.lastSessionId;let canceled=false;let connection=null;const closeFn=function(){if(connection){connection.close();}else{canceled=true;onDisconnect();}};const sendRequestFn=function(msg){(0,_util.assert)(connection,\"sendRequest call when we're not connected not allowed.\");connection.sendRequest(msg);};this.realtime_={close:closeFn,sendRequest:sendRequestFn};const forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;try{// First fetch auth and app check token, and establish connection after\n// fetching the token was successful\nconst[authToken,appCheckToken]=await Promise.all([this.authTokenProvider_.getToken(forceRefresh),this.appCheckTokenProvider_.getToken(forceRefresh)]);if(!canceled){log('getToken() completed. Creating connection.');this.authToken_=authToken&&authToken.accessToken;this.appCheckToken_=appCheckToken&&appCheckToken.token;connection=new Connection(connId,this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,onDataMessage,onReady,onDisconnect,/* onKill= */reason=>{warn(reason+' ('+this.repoInfo_.toString()+')');this.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId);}else{log('getToken() completed but was canceled');}}catch(error){this.log_('Failed to get token: '+error);if(!canceled){if(this.repoInfo_.nodeAdmin){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(error);}closeFn();}}}}interrupt(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}}resume(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if((0,_util.isEmpty)(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}}handleTimestamp_(timestamp){const delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});}cancelSentTransactions_(){for(let i=0;i<this.outstandingPuts_.length;i++){const put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete){put.onComplete('disconnect');}delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}}onListenRevoked_(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nlet queryId;if(!query){queryId='default';}else{queryId=query.map(q=>ObjectToUniqueKey(q)).join('$');}const listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete){listen.onComplete('permission_denied');}}removeListen_(pathString,queryId){const normalizedPathString=new Path(pathString).toString();// normalize path.\nlet listen;if(this.listens.has(normalizedPathString)){const map=this.listens.get(normalizedPathString);listen=map.get(queryId);map.delete(queryId);if(map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;}onAuthRevoked_(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}}onAppCheckRevoked_(statusCode,explanation){log('App check token revoked: '+statusCode+'/'+explanation);this.appCheckToken_=null;this.forceTokenRefresh_=true;// Note: We don't close the connection as the developer may not have\n// enforcement enabled. The backend closes connections with enforcements.\nif(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAppCheckTokenCount_++;if(this.invalidAppCheckTokenCount_>=INVALID_TOKEN_THRESHOLD){this.appCheckTokenProvider_.notifyForInvalidToken();}}}onSecurityDebugPacket_(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}}restoreState_(){//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();this.tryAppCheck();// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nfor(const queries of this.listens.values()){for(const listenSpec of queries.values()){this.sendListen_(listenSpec);}}for(let i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i]){this.sendPut_(i);}}while(this.onDisconnectRequestQueue_.length){const request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}for(let i=0;i<this.outstandingGets_.length;i++){if(this.outstandingGets_[i]){this.sendGet_(i);}}}/**\r\n     * Sends client stats for first connection\r\n     */sendConnectStats_(){const stats={};let clientName='js';if((0,_util.isNodeSdk)()){if(this.repoInfo_.nodeAdmin){clientName='admin_node';}else{clientName='node';}}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\\./g,'-')]=1;if((0,_util.isMobileCordova)()){stats['framework.cordova']=1;}else if((0,_util.isReactNative)()){stats['framework.reactnative']=1;}this.reportStats(stats);}shouldReconnect_(){const online=OnlineMonitor.getInstance().currentlyOnline();return(0,_util.isEmpty)(this.interruptReasons_)&&online;}}PersistentConnection.nextPersistentConnectionId_=0;/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */PersistentConnection.nextConnectionId_=0;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class NamedNode{constructor(name,node){this.name=name;this.node=node;}static Wrap(name,node){return new NamedNode(name,node);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class Index{/**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */getCompare(){return this.compare.bind(this);}/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */indexedValueChanged(oldNode,newNode){const oldWrapped=new NamedNode(MIN_NAME,oldNode);const newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;}/**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let __EMPTY_NODE;class KeyIndex extends Index{static get __EMPTY_NODE(){return __EMPTY_NODE;}static set __EMPTY_NODE(val){__EMPTY_NODE=val;}compare(a,b){return nameCompare(a.name,b.name);}isDefinedOn(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow(0,_util.assertionError)('KeyIndex.isDefinedOn not expected to be called.');}indexedValueChanged(oldNode,newNode){return false;// The key for a node never changes.\n}minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}maxPost(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);}makePost(indexValue,name){(0,_util.assert)(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */toString(){return'.key';}}const KEY_INDEX=new KeyIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An iterator over an LLRBNode.\r\n */class SortedMapIterator{/**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */constructor(node,startKey,comparator,isReverse_,resultGenerator_=null){this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;this.nodeStack_=[];let cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}getNext(){if(this.nodeStack_.length===0){return null;}let node=this.nodeStack_.pop();let result;if(this.resultGenerator_){result=this.resultGenerator_(node.key,node.value);}else{result={key:node.key,value:node.value};}if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;}hasNext(){return this.nodeStack_.length>0;}peek(){if(this.nodeStack_.length===0){return null;}const node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}}}/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */class LLRBNode{/**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */constructor(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */copy(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);}/**\r\n     * @returns The total number of nodes in the tree.\r\n     */count(){return this.left.count()+1+this.right.count();}/**\r\n     * @returns True if the tree is empty.\r\n     */isEmpty(){return false;}/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */inorderTraversal(action){return this.left.inorderTraversal(action)||!!action(this.key,this.value)||this.right.inorderTraversal(action);}/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */reverseTraversal(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);}/**\r\n     * @returns The minimum node in the tree.\r\n     */min_(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}}/**\r\n     * @returns The maximum key in the tree.\r\n     */minKey(){return this.min_().key;}/**\r\n     * @returns The maximum key in the tree.\r\n     */maxKey(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}}/**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */insert(key,value,comparator){let n=this;const cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();}/**\r\n     * @returns New tree, with the minimum key removed.\r\n     */removeMin_(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}let n=this;if(!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();}/**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */remove(key,comparator){let n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_()){n=n.rotateRight_();}if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();}/**\r\n     * @returns Whether this is a RED node.\r\n     */isRed_(){return this.color;}/**\r\n     * @returns New tree after performing any needed rotations.\r\n     */fixUp_(){let n=this;if(n.right.isRed_()&&!n.left.isRed_()){n=n.rotateLeft_();}if(n.left.isRed_()&&n.left.left.isRed_()){n=n.rotateRight_();}if(n.left.isRed_()&&n.right.isRed_()){n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after moveRedLeft.\r\n     */moveRedLeft_(){let n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after moveRedRight.\r\n     */moveRedRight_(){let n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after rotateLeft.\r\n     */rotateLeft_(){const nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);}/**\r\n     * @returns New tree, after rotateRight.\r\n     */rotateRight_(){const nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);}/**\r\n     * @returns Newt ree, after colorFlip.\r\n     */colorFlip_(){const left=this.left.copy(null,null,!this.left.color,null,null);const right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);}/**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */checkMaxDepth_(){const blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;}check_(){if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}const blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}}}LLRBNode.RED=true;LLRBNode.BLACK=false;/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */class LLRBEmptyNode{/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */copy(key,value,color,left,right){return this;}/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */insert(key,value,comparator){return new LLRBNode(key,value,null);}/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */remove(key,comparator){return this;}/**\r\n     * @returns The total number of nodes in the tree.\r\n     */count(){return 0;}/**\r\n     * @returns True if the tree is empty.\r\n     */isEmpty(){return true;}/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */inorderTraversal(action){return false;}/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */reverseTraversal(action){return false;}minKey(){return null;}maxKey(){return null;}check_(){return 0;}/**\r\n     * @returns Whether this node is red.\r\n     */isRed_(){return false;}}/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */class SortedMap{/**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */constructor(comparator_,root_=SortedMap.EMPTY_NODE){this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */insert(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));}/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */remove(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));}/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */get(key){let cmp;let node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;}/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */getPredecessorKey(key){let cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');}/**\r\n     * @returns True if the map is empty.\r\n     */isEmpty(){return this.root_.isEmpty();}/**\r\n     * @returns The total number of nodes in the map.\r\n     */count(){return this.root_.count();}/**\r\n     * @returns The minimum key in the map.\r\n     */minKey(){return this.root_.minKey();}/**\r\n     * @returns The maximum key in the map.\r\n     */maxKey(){return this.root_.maxKey();}/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */inorderTraversal(action){return this.root_.inorderTraversal(action);}/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */reverseTraversal(action){return this.root_.reverseTraversal(action);}/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */getIterator(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);}getIteratorFrom(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);}getReverseIteratorFrom(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);}getReverseIterator(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);}}/**\r\n * Always use the same empty node, to reduce memory.\r\n */SortedMap.EMPTY_NODE=new LLRBEmptyNode();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let MAX_NODE$2;function setMaxNode$1(val){MAX_NODE$2=val;}const priorityHashText=function(priority){if(typeof priority==='number'){return'number:'+doubleToIEEE754String(priority);}else{return'string:'+priority;}};/**\r\n * Validates that a priority snapshot Node is valid.\r\n */const validatePriorityNode=function(priorityNode){if(priorityNode.isLeafNode()){const val=priorityNode.val();(0,_util.assert)(typeof val==='string'||typeof val==='number'||typeof val==='object'&&(0,_util.contains)(val,'.sv'),'Priority must be a string or number.');}else{(0,_util.assert)(priorityNode===MAX_NODE$2||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n(0,_util.assert)(priorityNode===MAX_NODE$2||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */class LeafNode{/**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */constructor(value_,priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE){this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;(0,_util.assert)(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}static set __childrenNodeConstructor(val){__childrenNodeConstructor=val;}static get __childrenNodeConstructor(){return __childrenNodeConstructor;}/** @inheritDoc */isLeafNode(){return true;}/** @inheritDoc */getPriority(){return this.priorityNode_;}/** @inheritDoc */updatePriority(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);}/** @inheritDoc */getImmediateChild(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}}/** @inheritDoc */getChild(path){if(pathIsEmpty(path)){return this;}else if(pathGetFront(path)==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}}hasChild(){return false;}/** @inheritDoc */getPredecessorChildName(childName,childNode){return null;}/** @inheritDoc */updateImmediateChild(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}}/** @inheritDoc */updateChild(path,newChildNode){const front=pathGetFront(path);if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{(0,_util.assert)(front!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path),newChildNode));}}/** @inheritDoc */isEmpty(){return false;}/** @inheritDoc */numChildren(){return 0;}/** @inheritDoc */forEachChild(index,action){return false;}val(exportFormat){if(exportFormat&&!this.getPriority().isEmpty()){return{'.value':this.getValue(),'.priority':this.getPriority().val()};}else{return this.getValue();}}/** @inheritDoc */hash(){if(this.lazyHash_===null){let toHash='';if(!this.priorityNode_.isEmpty()){toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';}const type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;}/**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */getValue(){return this.value_;}compareTo(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{(0,_util.assert)(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}}/**\r\n     * Comparison specifically for two leaf nodes\r\n     */compareToLeafNode_(otherLeaf){const otherLeafType=typeof otherLeaf.value_;const thisLeafType=typeof this.value_;const otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);const thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);(0,_util.assert)(otherIndex>=0,'Unknown leaf type: '+otherLeafType);(0,_util.assert)(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}}withIndex(){return this;}isIndexed(){return true;}equals(other){if(other===this){return true;}else if(other.isLeafNode()){const otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}}}/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let nodeFromJSON$1;let MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON$1=val;}function setMaxNode(val){MAX_NODE$1=val;}class PriorityIndex extends Index{compare(a,b){const aPriority=a.node.getPriority();const bPriority=b.node.getPriority();const indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}isDefinedOn(node){return!node.getPriority().isEmpty();}indexedValueChanged(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());}minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}maxPost(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));}makePost(indexValue,name){const priorityNode=nodeFromJSON$1(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */toString(){return'.priority';}}const PRIORITY_INDEX=new PriorityIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const LOG_2=Math.log(2);class Base12Num{constructor(length){const logBase2=num=>// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparseInt(Math.log(num)/LOG_2,10);const bitMask=bits=>parseInt(Array(bits+1).join('1'),2);this.count=logBase2(length+1);this.current_=this.count-1;const mask=bitMask(this.count);this.bits_=length+1&mask;}nextBitIsOne(){//noinspection JSBitwiseOperatorUsage\nconst result=!(this.bits_&0x1<<this.current_);this.current_--;return result;}}/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */const buildChildSet=function(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);const buildBalancedTree=function(low,high){const length=high-low;let namedNode;let key;if(length===0){return null;}else if(length===1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst middle=parseInt(length/2,10)+low;const left=buildBalancedTree(low,middle);const right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};const buildFrom12Array=function(base12){let node=null;let root=null;let index=childList.length;const buildPennant=function(chunkSize,color){const low=index-chunkSize;const high=index;index-=chunkSize;const childTree=buildBalancedTree(low+1,high);const namedNode=childList[low];const key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};const attachPennant=function(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(let i=0;i<base12.count;++i){const isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nconst chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};const base12=new Base12Num(childList.length);const root=buildFrom12Array(base12);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn new SortedMap(mapSortFn||cmp,root);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let _defaultIndexMap;const fallbackObject={};class IndexMap{constructor(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}/**\r\n     * The default IndexMap for nodes without a priority\r\n     */static get Default(){(0,_util.assert)(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;}get(indexKey){const sortedMap=(0,_util.safeGet)(this.indexes_,indexKey);if(!sortedMap){throw new Error('No index defined for '+indexKey);}if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}}hasIndex(indexDefinition){return(0,_util.contains)(this.indexSet_,indexDefinition.toString());}addIndex(indexDefinition,existingChildren){(0,_util.assert)(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");const childList=[];let sawIndexedValue=false;const iter=existingChildren.getIterator(NamedNode.Wrap);let next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}let newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}const indexName=indexDefinition.toString();const newIndexSet=Object.assign({},this.indexSet_);newIndexSet[indexName]=indexDefinition;const newIndexes=Object.assign({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);}/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */addToIndexes(namedNode,existingChildren){const newIndexes=(0,_util.map)(this.indexes_,(indexedChildren,indexName)=>{const index=(0,_util.safeGet)(this.indexSet_,indexName);(0,_util.assert)(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nconst childList=[];const iter=existingChildren.getIterator(NamedNode.Wrap);let next=iter.getNext();while(next){if(next.name!==namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{const existingSnap=existingChildren.get(namedNode.name);let newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);}/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */removeFromIndexes(namedNode,existingChildren){const newIndexes=(0,_util.map)(this.indexes_,indexedChildren=>{if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{const existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: For memory savings, don't store priorityNode_ if it's empty.\nlet EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */class ChildrenNode{/**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */constructor(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){(0,_util.assert)(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}static get EMPTY_NODE(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));}/** @inheritDoc */isLeafNode(){return false;}/** @inheritDoc */getPriority(){return this.priorityNode_||EMPTY_NODE;}/** @inheritDoc */updatePriority(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}}/** @inheritDoc */getImmediateChild(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{const child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}}/** @inheritDoc */getChild(path){const front=pathGetFront(path);if(front===null){return this;}return this.getImmediateChild(front).getChild(pathPopFront(path));}/** @inheritDoc */hasChild(childName){return this.children_.get(childName)!==null;}/** @inheritDoc */updateImmediateChild(childName,newChildNode){(0,_util.assert)(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{const namedNode=new NamedNode(childName,newChildNode);let newChildren,newIndexMap;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}const newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}}/** @inheritDoc */updateChild(path,newChildNode){const front=pathGetFront(path);if(front===null){return newChildNode;}else{(0,_util.assert)(pathGetFront(path)!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');const newImmediateChild=this.getImmediateChild(front).updateChild(pathPopFront(path),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}}/** @inheritDoc */isEmpty(){return this.children_.isEmpty();}/** @inheritDoc */numChildren(){return this.children_.count();}/** @inheritDoc */val(exportFormat){if(this.isEmpty()){return null;}const obj={};let numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,(key,childNode)=>{obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nconst array=[];// eslint-disable-next-line guard-for-in\nfor(const key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}}/** @inheritDoc */hash(){if(this.lazyHash_===null){let toHash='';if(!this.getPriority().isEmpty()){toHash+='priority:'+priorityHashText(this.getPriority().val())+':';}this.forEachChild(PRIORITY_INDEX,(key,childNode)=>{const childHash=childNode.hash();if(childHash!==''){toHash+=':'+key+':'+childHash;}});this.lazyHash_=toHash===''?'':sha1(toHash);}return this.lazyHash_;}/** @inheritDoc */getPredecessorChildName(childName,childNode,index){const idx=this.resolveIndex_(index);if(idx){const predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}}getFirstChildName(indexDefinition){const idx=this.resolveIndex_(indexDefinition);if(idx){const minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}}getFirstChild(indexDefinition){const minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}}/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */getLastChildName(indexDefinition){const idx=this.resolveIndex_(indexDefinition);if(idx){const maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}}getLastChild(indexDefinition){const maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}}forEachChild(index,action){const idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(wrappedNode=>{return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}}getIterator(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);}getIteratorFrom(startPost,indexDefinition){const idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,key=>key);}else{const iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);let next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}}getReverseIterator(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);}getReverseIteratorFrom(endPost,indexDefinition){const idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,key=>{return key;});}else{const iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);let next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}}compareTo(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE){return-1;}else{// Must be another node with children.\nreturn 0;}}withIndex(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{const newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}}isIndexed(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);}equals(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{const otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){const thisIter=this.getIterator(PRIORITY_INDEX);const otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);let thisCurrent=thisIter.getNext();let otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}}/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */resolveIndex_(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}}}ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;class MaxNode extends ChildrenNode{constructor(){super(new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default);}compareTo(other){if(other===this){return 0;}else{return 1;}}equals(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;}getPriority(){return this;}getImmediateChild(childName){return ChildrenNode.EMPTY_NODE;}isEmpty(){return false;}}/**\r\n * Marker that will sort higher than any other snapshot.\r\n */const MAX_NODE=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode$1(MAX_NODE);setMaxNode(MAX_NODE);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */function nodeFromJSON(json,priority=null){if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}(0,_util.assert)(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(typeof json!=='object'||'.sv'in json){const jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON(priority));}if(!(json instanceof Array)&&USE_HINZE){const children=[];let childrenHavePriority=false;const hinzeJsonObj=json;each(hinzeJsonObj,(key,child)=>{if(key.substring(0,1)!=='.'){// Ignore metadata nodes\nconst childNode=nodeFromJSON(child);if(!childNode.isEmpty()){childrenHavePriority=childrenHavePriority||!childNode.getPriority().isEmpty();children.push(new NamedNode(key,childNode));}}});if(children.length===0){return ChildrenNode.EMPTY_NODE;}const childSet=buildChildSet(children,NAME_ONLY_COMPARATOR,namedNode=>namedNode.name,NAME_COMPARATOR);if(childrenHavePriority){const sortedChildSet=buildChildSet(children,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON(priority),IndexMap.Default);}}else{let node=ChildrenNode.EMPTY_NODE;each(json,(key,childData)=>{if((0,_util.contains)(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nconst childNode=nodeFromJSON(childData);if(childNode.isLeafNode()||!childNode.isEmpty()){node=node.updateImmediateChild(key,childNode);}}}});return node.updatePriority(nodeFromJSON(priority));}}setNodeFromJSON(nodeFromJSON);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class PathIndex extends Index{constructor(indexPath_){super();this.indexPath_=indexPath_;(0,_util.assert)(!pathIsEmpty(indexPath_)&&pathGetFront(indexPath_)!=='.priority',\"Can't create PathIndex with empty path or .priority key\");}extractChild(snap){return snap.getChild(this.indexPath_);}isDefinedOn(node){return!node.getChild(this.indexPath_).isEmpty();}compare(a,b){const aChild=this.extractChild(a.node);const bChild=this.extractChild(b.node);const indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}makePost(indexValue,name){const valueNode=nodeFromJSON(indexValue);const node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);}maxPost(){const node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE);return new NamedNode(MAX_NAME,node);}toString(){return pathSlice(this.indexPath_,0).join('/');}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class ValueIndex extends Index{compare(a,b){const indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}isDefinedOn(node){return true;}indexedValueChanged(oldNode,newNode){return!oldNode.equals(newNode);}minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}maxPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MAX;}makePost(indexValue,name){const valueNode=nodeFromJSON(indexValue);return new NamedNode(name,valueNode);}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */toString(){return'.value';}}const VALUE_INDEX=new ValueIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';const MIN_PUSH_CHAR='-';const MAX_PUSH_CHAR='z';const MAX_KEY_LEN=786;/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */const nextPushId=function(){// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nlet lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nconst lastRandChars=[];return function(now){const duplicateTime=now===lastPushTime;lastPushTime=now;let i;const timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}(0,_util.assert)(now===0,'Cannot push at time == 0');let id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}(0,_util.assert)(id.length===20,'nextPushId: Length should be 20.');return id;};}();const successor=function(key){if(key===''+INTEGER_32_MAX){// See https://firebase.google.com/docs/database/web/lists-of-data#data-order\nreturn MIN_PUSH_CHAR;}const keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt+1);}const next=new Array(key.length);for(let i=0;i<next.length;i++){next[i]=key.charAt(i);}if(next.length<MAX_KEY_LEN){next.push(MIN_PUSH_CHAR);return next.join('');}let i=next.length-1;while(i>=0&&next[i]===MAX_PUSH_CHAR){i--;}// `successor` was called on the largest possible key, so return the\n// MAX_NAME, which sorts larger than all keys.\nif(i===-1){return MAX_NAME;}const source=next[i];const sourcePlusOne=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source)+1);next[i]=sourcePlusOne;return next.slice(0,i+1).join('');};// `key` is assumed to be non-empty.\nconst predecessor=function(key){if(key===''+INTEGER_32_MIN){return MIN_NAME;}const keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt-1);}const next=new Array(key.length);for(let i=0;i<next.length;i++){next[i]=key.charAt(i);}// If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n// smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n// than that, `predecessor(predecessor(key))`, is\n//\n// `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n//   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n//\n// analogous to increment/decrement for base-10 integers.\n//\n// This works because lexigographic comparison works character-by-character,\n// using length as a tie-breaker if one key is a prefix of the other.\nif(next[next.length-1]===MIN_PUSH_CHAR){if(next.length===1){// See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\nreturn''+INTEGER_32_MAX;}delete next[next.length-1];return next.join('');}// Replace the last character with it's immediate predecessor, and\n// fill the suffix of the key with MAX_PUSH_CHAR. This is the\n// lexicographically largest possible key smaller than `key`.\nnext[next.length-1]=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length-1])-1);return next.join('')+MAX_PUSH_CHAR.repeat(MAX_KEY_LEN-next.length);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function changeValue(snapshotNode){return{type:\"value\"/* VALUE */,snapshotNode};}function changeChildAdded(childName,snapshotNode){return{type:\"child_added\"/* CHILD_ADDED */,snapshotNode,childName};}function changeChildRemoved(childName,snapshotNode){return{type:\"child_removed\"/* CHILD_REMOVED */,snapshotNode,childName};}function changeChildChanged(childName,snapshotNode,oldSnap){return{type:\"child_changed\"/* CHILD_CHANGED */,snapshotNode,childName,oldSnap};}function changeChildMoved(childName,snapshotNode){return{type:\"child_moved\"/* CHILD_MOVED */,snapshotNode,childName};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */class IndexedFilter{constructor(index_){this.index_=index_;}updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){(0,_util.assert)(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');const oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()===newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,oldChild));}else{(0,_util.assert)(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(changeChildAdded(key,newChild));}else{optChangeAccumulator.trackChildChange(changeChildChanged(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}}updateFullNode(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,(key,childNode)=>{if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,(key,childNode)=>{if(oldSnap.hasChild(key)){const oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(changeChildChanged(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(changeChildAdded(key,childNode));}});}}return newSnap.withIndex(this.index_);}updatePriority(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}}filtersNodes(){return false;}getIndexedFilter(){return this;}getIndex(){return this.index_;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */class RangedFilter{constructor(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}getStartPost(){return this.startPost_;}getEndPost(){return this.endPost_;}matches(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;}updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}updateFullNode(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}let filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);const self=this;newSnap.forEachChild(PRIORITY_INDEX,(key,childNode)=>{if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);}updatePriority(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;}filtersNodes(){return true;}getIndexedFilter(){return this.indexedFilter_;}getIndex(){return this.index_;}static getStartPost_(params){if(params.hasStart()){const startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}}static getEndPost_(params){if(params.hasEnd()){const endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */class LimitedFilter{constructor(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}}updateFullNode(oldSnap,newSnap,optChangeAccumulator){let filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nlet iterator;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}let count=0;while(iterator.hasNext()&&count<this.limit_){const next=iterator.getNext();let inRange;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);let startPost;let endPost;let cmp;let iterator;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();const indexCompare=this.index_.getCompare();cmp=(a,b)=>indexCompare(b,a);}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}let count=0;let foundStartPost=false;while(iterator.hasNext()){const next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding\nfoundStartPost=true;}const inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);}updatePriority(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;}filtersNodes(){return true;}getIndexedFilter(){return this.rangedFilter_.getIndexedFilter();}getIndex(){return this.index_;}fullLimitUpdateChild_(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nlet cmp;if(this.reverse_){const indexCmp=this.index_.getCompare();cmp=(a,b)=>indexCmp(b,a);}else{cmp=this.index_.getCompare();}const oldEventCache=snap;(0,_util.assert)(oldEventCache.numChildren()===this.limit_,'');const newChildNamedNode=new NamedNode(childKey,childSnap);const windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);const inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){const oldChildSnap=oldEventCache.getImmediateChild(childKey);let nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name===childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}const compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);const remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildChanged(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(childKey,oldChildSnap));}const newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);const nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildAdded(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(changeChildAdded(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */class QueryParams{constructor(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.startAfterSet_=false;this.endSet_=false;this.endNameSet_=false;this.endBeforeSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}hasStart(){return this.startSet_;}hasStartAfter(){return this.startAfterSet_;}hasEndBefore(){return this.endBeforeSet_;}/**\r\n     * @returns True if it would return from left.\r\n     */isViewFromLeft(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===\"l\"/* VIEW_FROM_LEFT */;}}/**\r\n     * Only valid to call if hasStart() returns true\r\n     */getIndexStartValue(){(0,_util.assert)(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;}/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */getIndexStartName(){(0,_util.assert)(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}}hasEnd(){return this.endSet_;}/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */getIndexEndValue(){(0,_util.assert)(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;}/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */getIndexEndName(){(0,_util.assert)(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}}hasLimit(){return this.limitSet_;}/**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */hasAnchoredLimit(){return this.limitSet_&&this.viewFrom_!=='';}/**\r\n     * Only valid to call if hasLimit() returns true\r\n     */getLimit(){(0,_util.assert)(this.limitSet_,'Only valid if limit has been set');return this.limit_;}getIndex(){return this.index_;}loadsAllData(){return!(this.startSet_||this.endSet_||this.limitSet_);}isDefault(){return this.loadsAllData()&&this.index_===PRIORITY_INDEX;}copy(){const copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;}}exports._QueryParams=QueryParams;function queryParamsGetNodeFilter(queryParams){if(queryParams.loadsAllData()){return new IndexedFilter(queryParams.getIndex());}else if(queryParams.hasLimit()){return new LimitedFilter(queryParams);}else{return new RangedFilter(queryParams);}}function queryParamsLimitToFirst(queryParams,newLimit){const newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"l\"/* VIEW_FROM_LEFT */;return newParams;}function queryParamsLimitToLast(queryParams,newLimit){const newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"r\"/* VIEW_FROM_RIGHT */;return newParams;}function queryParamsStartAt(queryParams,indexValue,key){const newParams=queryParams.copy();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;}function queryParamsStartAfter(queryParams,indexValue,key){let params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=successor(indexValue);}params=queryParamsStartAt(queryParams,indexValue,key);}else{let childKey;if(key==null){childKey=MAX_NAME;}else{childKey=successor(key);}params=queryParamsStartAt(queryParams,indexValue,childKey);}params.startAfterSet_=true;return params;}function queryParamsEndAt(queryParams,indexValue,key){const newParams=queryParams.copy();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;}function queryParamsEndBefore(queryParams,indexValue,key){let childKey;let params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=predecessor(indexValue);}params=queryParamsEndAt(queryParams,indexValue,key);}else{if(key==null){childKey=MIN_NAME;}else{childKey=predecessor(key);}params=queryParamsEndAt(queryParams,indexValue,childKey);}params.endBeforeSet_=true;return params;}function queryParamsOrderBy(queryParams,index){const newParams=queryParams.copy();newParams.index_=index;return newParams;}/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */function queryParamsToRestQueryStringParameters(queryParams){const qs={};if(queryParams.isDefault()){return qs;}let orderBy;if(queryParams.index_===PRIORITY_INDEX){orderBy=\"$priority\"/* PRIORITY_INDEX */;}else if(queryParams.index_===VALUE_INDEX){orderBy=\"$value\"/* VALUE_INDEX */;}else if(queryParams.index_===KEY_INDEX){orderBy=\"$key\"/* KEY_INDEX */;}else{(0,_util.assert)(queryParams.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=queryParams.index_.toString();}qs[\"orderBy\"/* ORDER_BY */]=(0,_util.stringify)(orderBy);if(queryParams.startSet_){qs[\"startAt\"/* START_AT */]=(0,_util.stringify)(queryParams.indexStartValue_);if(queryParams.startNameSet_){qs[\"startAt\"/* START_AT */]+=','+(0,_util.stringify)(queryParams.indexStartName_);}}if(queryParams.endSet_){qs[\"endAt\"/* END_AT */]=(0,_util.stringify)(queryParams.indexEndValue_);if(queryParams.endNameSet_){qs[\"endAt\"/* END_AT */]+=','+(0,_util.stringify)(queryParams.indexEndName_);}}if(queryParams.limitSet_){if(queryParams.isViewFromLeft()){qs[\"limitToFirst\"/* LIMIT_TO_FIRST */]=queryParams.limit_;}else{qs[\"limitToLast\"/* LIMIT_TO_LAST */]=queryParams.limit_;}}return qs;}function queryParamsGetQueryObject(queryParams){const obj={};if(queryParams.startSet_){obj[\"sp\"/* INDEX_START_VALUE */]=queryParams.indexStartValue_;if(queryParams.startNameSet_){obj[\"sn\"/* INDEX_START_NAME */]=queryParams.indexStartName_;}}if(queryParams.endSet_){obj[\"ep\"/* INDEX_END_VALUE */]=queryParams.indexEndValue_;if(queryParams.endNameSet_){obj[\"en\"/* INDEX_END_NAME */]=queryParams.indexEndName_;}}if(queryParams.limitSet_){obj[\"l\"/* LIMIT */]=queryParams.limit_;let viewFrom=queryParams.viewFrom_;if(viewFrom===''){if(queryParams.isViewFromLeft()){viewFrom=\"l\"/* VIEW_FROM_LEFT */;}else{viewFrom=\"r\"/* VIEW_FROM_RIGHT */;}}obj[\"vf\"/* VIEW_FROM */]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(queryParams.index_!==PRIORITY_INDEX){obj[\"i\"/* INDEX */]=queryParams.index_.toString();}return obj;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */class ReadonlyRestClient extends ServerActions{/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */constructor(repoInfo_,onDataUpdate_,authTokenProvider_,appCheckTokenProvider_){super();this.repoInfo_=repoInfo_;this.onDataUpdate_=onDataUpdate_;this.authTokenProvider_=authTokenProvider_;this.appCheckTokenProvider_=appCheckTokenProvider_;/** @private {function(...[*])} */this.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */this.listens_={};}reportStats(stats){throw new Error('Method not implemented.');}static getListenId_(query,tag){if(tag!==undefined){return'tag$'+tag;}else{(0,_util.assert)(query._queryParams.isDefault(),\"should have a tag if it's not a default query.\");return query._path.toString();}}/** @inheritDoc */listen(query,currentHashFn,tag,onComplete){const pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+query._queryIdentifier);// Mark this listener so we can tell if it's removed.\nconst listenId=ReadonlyRestClient.getListenId_(query,tag);const thisListen={};this.listens_[listenId]=thisListen;const queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);this.restRequest_(pathString+'.json',queryStringParameters,(error,result)=>{let data=result;if(error===404){data=null;error=null;}if(error===null){this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if((0,_util.safeGet)(this.listens_,listenId)===thisListen){let status;if(!error){status='ok';}else if(error===401){status='permission_denied';}else{status='rest_error:'+error;}onComplete(status,null);}});}/** @inheritDoc */unlisten(query,tag){const listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];}get(query){const queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);const pathString=query._path.toString();const deferred=new _util.Deferred();this.restRequest_(pathString+'.json',queryStringParameters,(error,result)=>{let data=result;if(error===404){data=null;error=null;}if(error===null){this.onDataUpdate_(pathString,data,/*isMerge=*/false,/*tag=*/null);deferred.resolve(data);}else{deferred.reject(new Error(data));}});return deferred.promise;}/** @inheritDoc */refreshAuthToken(token){// no-op since we just always call getToken.\n}/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */restRequest_(pathString,queryStringParameters={},callback){queryStringParameters['format']='export';return Promise.all([this.authTokenProvider_.getToken(/*forceRefresh=*/false),this.appCheckTokenProvider_.getToken(/*forceRefresh=*/false)]).then(([authToken,appCheckToken])=>{if(authToken&&authToken.accessToken){queryStringParameters['auth']=authToken.accessToken;}if(appCheckToken&&appCheckToken.token){queryStringParameters['ac']=appCheckToken.token;}const url=(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host+pathString+'?'+'ns='+this.repoInfo_.namespace+(0,_util.querystring)(queryStringParameters);this.log_('Sending REST request for '+url);const xhr=new XMLHttpRequest();xhr.onreadystatechange=()=>{if(callback&&xhr.readyState===4){this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);let res=null;if(xhr.status>=200&&xhr.status<300){try{res=(0,_util.jsonEval)(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */class SnapshotHolder{constructor(){this.rootNode_=ChildrenNode.EMPTY_NODE;}getNode(path){return this.rootNode_.getChild(path);}updateSnapshot(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newSparseSnapshotTree(){return{value:null,children:new Map()};}/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */function sparseSnapshotTreeRemember(sparseSnapshotTree,path,data){if(pathIsEmpty(path)){sparseSnapshotTree.value=data;sparseSnapshotTree.children.clear();}else if(sparseSnapshotTree.value!==null){sparseSnapshotTree.value=sparseSnapshotTree.value.updateChild(path,data);}else{const childKey=pathGetFront(path);if(!sparseSnapshotTree.children.has(childKey)){sparseSnapshotTree.children.set(childKey,newSparseSnapshotTree());}const child=sparseSnapshotTree.children.get(childKey);path=pathPopFront(path);sparseSnapshotTreeRemember(child,path,data);}}/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */function sparseSnapshotTreeForget(sparseSnapshotTree,path){if(pathIsEmpty(path)){sparseSnapshotTree.value=null;sparseSnapshotTree.children.clear();return true;}else{if(sparseSnapshotTree.value!==null){if(sparseSnapshotTree.value.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{const value=sparseSnapshotTree.value;sparseSnapshotTree.value=null;value.forEachChild(PRIORITY_INDEX,(key,tree)=>{sparseSnapshotTreeRemember(sparseSnapshotTree,new Path(key),tree);});return sparseSnapshotTreeForget(sparseSnapshotTree,path);}}else if(sparseSnapshotTree.children.size>0){const childKey=pathGetFront(path);path=pathPopFront(path);if(sparseSnapshotTree.children.has(childKey)){const safeToRemove=sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey),path);if(safeToRemove){sparseSnapshotTree.children.delete(childKey);}}return sparseSnapshotTree.children.size===0;}else{return true;}}}/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */function sparseSnapshotTreeForEachTree(sparseSnapshotTree,prefixPath,func){if(sparseSnapshotTree.value!==null){func(prefixPath,sparseSnapshotTree.value);}else{sparseSnapshotTreeForEachChild(sparseSnapshotTree,(key,tree)=>{const path=new Path(prefixPath.toString()+'/'+key);sparseSnapshotTreeForEachTree(tree,path,func);});}}/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */function sparseSnapshotTreeForEachChild(sparseSnapshotTree,func){sparseSnapshotTree.children.forEach((tree,key)=>{func(key,tree);});}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */class StatsListener{constructor(collection_){this.collection_=collection_;this.last_=null;}get(){const newStats=this.collection_.get();const delta=Object.assign({},newStats);if(this.last_){each(this.last_,(stat,value)=>{delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME=10*1000;const FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL=5*60*1000;class StatsReporter{constructor(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);const timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}reportStats_(){const stats=this.statsListener_.get();const reportedStats={};let haveStatsToReport=false;each(stats,(stat,value)=>{if(value>0&&(0,_util.contains)(this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));function newOperationSourceUser(){return{fromUser:true,fromServer:false,queryId:null,tagged:false};}function newOperationSourceServer(){return{fromUser:false,fromServer:true,queryId:null,tagged:false};}function newOperationSourceServerTaggedQuery(queryId){return{fromUser:false,fromServer:true,queryId,tagged:true};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class AckUserWrite{/**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */constructor(/** @inheritDoc */path,/** @inheritDoc */affectedTree,/** @inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=newOperationSourceUser();}operationForChild(childName){if(!pathIsEmpty(this.path)){(0,_util.assert)(pathGetFront(this.path)===childName,'operationForChild called for unrelated child.');return new AckUserWrite(pathPopFront(this.path),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){(0,_util.assert)(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{const childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(newEmptyPath(),childTree,this.revert);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class ListenComplete{constructor(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}operationForChild(childName){if(pathIsEmpty(this.path)){return new ListenComplete(this.source,newEmptyPath());}else{return new ListenComplete(this.source,pathPopFront(this.path));}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class Overwrite{constructor(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}operationForChild(childName){if(pathIsEmpty(this.path)){return new Overwrite(this.source,newEmptyPath(),this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,pathPopFront(this.path),this.snap);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class Merge{constructor(/** @inheritDoc */source,/** @inheritDoc */path,/** @inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}operationForChild(childName){if(pathIsEmpty(this.path)){const childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,newEmptyPath(),childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,newEmptyPath(),childTree);}}else{(0,_util.assert)(pathGetFront(this.path)===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,pathPopFront(this.path),this.children);}}toString(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */class CacheNode{constructor(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */isFullyInitialized(){return this.fullyInitialized_;}/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */isFiltered(){return this.filtered_;}isCompleteForPath(path){if(pathIsEmpty(path)){return this.isFullyInitialized()&&!this.filtered_;}const childKey=pathGetFront(path);return this.isCompleteForChild(childKey);}isCompleteForChild(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);}getNode(){return this.node_;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */class EventGenerator{constructor(query_){this.query_=query_;this.index_=this.query_._queryParams.getIndex();}}/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */function eventGeneratorGenerateEventsForChanges(eventGenerator,changes,eventCache,eventRegistrations){const events=[];const moves=[];changes.forEach(change=>{if(change.type===\"child_changed\"/* CHILD_CHANGED */&&eventGenerator.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(changeChildMoved(change.childName,change.snapshotNode));}});eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_removed\"/* CHILD_REMOVED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_added\"/* CHILD_ADDED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_moved\"/* CHILD_MOVED */,moves,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_changed\"/* CHILD_CHANGED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"value\"/* VALUE */,changes,eventRegistrations,eventCache);return events;}/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */function eventGeneratorGenerateEventsForType(eventGenerator,events,eventType,changes,registrations,eventCache){const filteredChanges=changes.filter(change=>change.type===eventType);filteredChanges.sort((a,b)=>eventGeneratorCompareChanges(eventGenerator,a,b));filteredChanges.forEach(change=>{const materializedChange=eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache);registrations.forEach(registration=>{if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,eventGenerator.query_));}});});}function eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(change.childName,change.snapshotNode,eventGenerator.index_);return change;}}function eventGeneratorCompareChanges(eventGenerator,a,b){if(a.childName==null||b.childName==null){throw(0,_util.assertionError)('Should only compare child_ events.');}const aWrapped=new NamedNode(a.childName,a.snapshotNode);const bWrapped=new NamedNode(b.childName,b.snapshotNode);return eventGenerator.index_.compare(aWrapped,bWrapped);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewCache(eventCache,serverCache){return{eventCache,serverCache};}function viewCacheUpdateEventSnap(viewCache,eventSnap,complete,filtered){return newViewCache(new CacheNode(eventSnap,complete,filtered),viewCache.serverCache);}function viewCacheUpdateServerSnap(viewCache,serverSnap,complete,filtered){return newViewCache(viewCache.eventCache,new CacheNode(serverSnap,complete,filtered));}function viewCacheGetCompleteEventSnap(viewCache){return viewCache.eventCache.isFullyInitialized()?viewCache.eventCache.getNode():null;}function viewCacheGetCompleteServerSnap(viewCache){return viewCache.serverCache.isFullyInitialized()?viewCache.serverCache.getNode():null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n */const EmptyChildren=()=>{if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */class ImmutableTree{constructor(value,children=EmptyChildren()){this.value=value;this.children=children;}static fromObject(obj){let tree=new ImmutableTree(null);each(obj,(childPath,childSnap)=>{tree=tree.set(new Path(childPath),childSnap);});return tree;}/**\r\n     * True if the value is empty and there are no children\r\n     */isEmpty(){return this.value===null&&this.children.isEmpty();}/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */findRootMostMatchingPathAndValue(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:newEmptyPath(),value:this.value};}else{if(pathIsEmpty(relativePath)){return null;}else{const front=pathGetFront(relativePath);const child=this.children.get(front);if(child!==null){const childExistingPathAndValue=child.findRootMostMatchingPathAndValue(pathPopFront(relativePath),predicate);if(childExistingPathAndValue!=null){const fullPath=pathChild(new Path(front),childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}}/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */findRootMostValueAndPath(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,()=>true);}/**\r\n     * @returns The subtree at the given path\r\n     */subtree(relativePath){if(pathIsEmpty(relativePath)){return this;}else{const front=pathGetFront(relativePath);const childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(pathPopFront(relativePath));}else{return new ImmutableTree(null);}}}/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */set(relativePath,toSet){if(pathIsEmpty(relativePath)){return new ImmutableTree(toSet,this.children);}else{const front=pathGetFront(relativePath);const child=this.children.get(front)||new ImmutableTree(null);const newChild=child.set(pathPopFront(relativePath),toSet);const newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}}/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */remove(relativePath){if(pathIsEmpty(relativePath)){if(this.children.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(null,this.children);}}else{const front=pathGetFront(relativePath);const child=this.children.get(front);if(child){const newChild=child.remove(pathPopFront(relativePath));let newChildren;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}}/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */get(relativePath){if(pathIsEmpty(relativePath)){return this.value;}else{const front=pathGetFront(relativePath);const child=this.children.get(front);if(child){return child.get(pathPopFront(relativePath));}else{return null;}}}/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */setTree(relativePath,newTree){if(pathIsEmpty(relativePath)){return newTree;}else{const front=pathGetFront(relativePath);const child=this.children.get(front)||new ImmutableTree(null);const newChild=child.setTree(pathPopFront(relativePath),newTree);let newChildren;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}}/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */fold(fn){return this.fold_(newEmptyPath(),fn);}/**\r\n     * Recursive helper for public-facing fold() method\r\n     */fold_(pathSoFar,fn){const accum={};this.children.inorderTraversal((childKey,childTree)=>{accum[childKey]=childTree.fold_(pathChild(pathSoFar,childKey),fn);});return fn(pathSoFar,this.value,accum);}/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */findOnPath(path,f){return this.findOnPath_(path,newEmptyPath(),f);}findOnPath_(pathToFollow,pathSoFar,f){const result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathIsEmpty(pathToFollow)){return null;}else{const front=pathGetFront(pathToFollow);const nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathPopFront(pathToFollow),pathChild(pathSoFar,front),f);}else{return null;}}}}foreachOnPath(path,f){return this.foreachOnPath_(path,newEmptyPath(),f);}foreachOnPath_(pathToFollow,currentRelativePath,f){if(pathIsEmpty(pathToFollow)){return this;}else{if(this.value){f(currentRelativePath,this.value);}const front=pathGetFront(pathToFollow);const nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathPopFront(pathToFollow),pathChild(currentRelativePath,front),f);}else{return new ImmutableTree(null);}}}/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */foreach(f){this.foreach_(newEmptyPath(),f);}foreach_(currentRelativePath,f){this.children.inorderTraversal((childName,childTree)=>{childTree.foreach_(pathChild(currentRelativePath,childName),f);});if(this.value){f(currentRelativePath,this.value);}}foreachChild(f){this.children.inorderTraversal((childName,childTree)=>{if(childTree.value){f(childName,childTree.value);}});}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */class CompoundWrite{constructor(writeTree_){this.writeTree_=writeTree_;}static empty(){return new CompoundWrite(new ImmutableTree(null));}}function compoundWriteAddWrite(compoundWrite,path,node){if(pathIsEmpty(path)){return new CompoundWrite(new ImmutableTree(node));}else{const rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){const rootMostPath=rootmost.path;let value=rootmost.value;const relativePath=newRelativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath,value));}else{const subtree=new ImmutableTree(node);const newWriteTree=compoundWrite.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}}function compoundWriteAddWrites(compoundWrite,path,updates){let newWrite=compoundWrite;each(updates,(childKey,node)=>{newWrite=compoundWriteAddWrite(newWrite,pathChild(path,childKey),node);});return newWrite;}/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */function compoundWriteRemoveWrite(compoundWrite,path){if(pathIsEmpty(path)){return CompoundWrite.empty();}else{const newWriteTree=compoundWrite.writeTree_.setTree(path,new ImmutableTree(null));return new CompoundWrite(newWriteTree);}}/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */function compoundWriteHasCompleteWrite(compoundWrite,path){return compoundWriteGetCompleteNode(compoundWrite,path)!=null;}/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */function compoundWriteGetCompleteNode(compoundWrite,path){const rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path,path));}else{return null;}}/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */function compoundWriteGetCompleteChildren(compoundWrite){const children=[];const node=compoundWrite.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,(childName,childNode)=>{children.push(new NamedNode(childName,childNode));});}}else{compoundWrite.writeTree_.children.inorderTraversal((childName,childTree)=>{if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;}function compoundWriteChildCompoundWrite(compoundWrite,path){if(pathIsEmpty(path)){return compoundWrite;}else{const shadowingNode=compoundWriteGetCompleteNode(compoundWrite,path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(compoundWrite.writeTree_.subtree(path));}}}/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */function compoundWriteIsEmpty(compoundWrite){return compoundWrite.writeTree_.isEmpty();}/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */function compoundWriteApply(compoundWrite,node){return applySubtreeWrite(newEmptyPath(),compoundWrite.writeTree_,node);}function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{let priorityWrite=null;writeTree.children.inorderTraversal((childKey,childTree)=>{if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\n(0,_util.assert)(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite=childTree.value;}else{node=applySubtreeWrite(pathChild(relativePath,childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite!==null){node=node.updateChild(pathChild(relativePath,'.priority'),priorityWrite);}return node;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */function writeTreeChildWrites(writeTree,path){return newWriteTreeRef(path,writeTree);}/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */function writeTreeAddOverwrite(writeTree,path,snap,writeId,visible){(0,_util.assert)(writeId>writeTree.lastWriteId,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}writeTree.allWrites.push({path,snap,writeId,visible});if(visible){writeTree.visibleWrites=compoundWriteAddWrite(writeTree.visibleWrites,path,snap);}writeTree.lastWriteId=writeId;}/**\r\n * Record a new merge from user code.\r\n */function writeTreeAddMerge(writeTree,path,changedChildren,writeId){(0,_util.assert)(writeId>writeTree.lastWriteId,'Stacking an older merge on top of newer ones');writeTree.allWrites.push({path,children:changedChildren,writeId,visible:true});writeTree.visibleWrites=compoundWriteAddWrites(writeTree.visibleWrites,path,changedChildren);writeTree.lastWriteId=writeId;}function writeTreeGetWrite(writeTree,writeId){for(let i=0;i<writeTree.allWrites.length;i++){const record=writeTree.allWrites[i];if(record.writeId===writeId){return record;}}return null;}/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */function writeTreeRemoveWrite(writeTree,writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nconst idx=writeTree.allWrites.findIndex(s=>{return s.writeId===writeId;});(0,_util.assert)(idx>=0,'removeWrite called with nonexistent writeId.');const writeToRemove=writeTree.allWrites[idx];writeTree.allWrites.splice(idx,1);let removedWriteWasVisible=writeToRemove.visible;let removedWriteOverlapsWithOtherWrites=false;let i=writeTree.allWrites.length-1;while(removedWriteWasVisible&&i>=0){const currentWrite=writeTree.allWrites[i];if(currentWrite.visible){if(i>=idx&&writeTreeRecordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(pathContains(writeToRemove.path,currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nwriteTreeResetTree_(writeTree);return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,writeToRemove.path);}else{const children=writeToRemove.children;each(children,childName=>{writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,pathChild(writeToRemove.path,childName));});}return true;}}function writeTreeRecordContainsPath_(writeRecord,path){if(writeRecord.snap){return pathContains(writeRecord.path,path);}else{for(const childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&pathContains(pathChild(writeRecord.path,childName),path)){return true;}}return false;}}/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */function writeTreeResetTree_(writeTree){writeTree.visibleWrites=writeTreeLayerTree_(writeTree.allWrites,writeTreeDefaultFilter_,newEmptyPath());if(writeTree.allWrites.length>0){writeTree.lastWriteId=writeTree.allWrites[writeTree.allWrites.length-1].writeId;}else{writeTree.lastWriteId=-1;}}/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */function writeTreeDefaultFilter_(write){return write.visible;}/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */function writeTreeLayerTree_(writes,filter,treeRoot){let compoundWrite=CompoundWrite.empty();for(let i=0;i<writes.length;++i){const write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){const writePath=write.path;let relativePath;if(write.snap){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrite(compoundWrite,relativePath,write.snap);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),write.snap.getChild(relativePath));}else;}else if(write.children){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrites(compoundWrite,relativePath,write.children);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);if(pathIsEmpty(relativePath)){compoundWrite=compoundWriteAddWrites(compoundWrite,newEmptyPath(),write.children);}else{const child=(0,_util.safeGet)(write.children,pathGetFront(relativePath));if(child){// There exists a child in this node that matches the root path\nconst deepNode=child.getChild(pathPopFront(relativePath));compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),deepNode);}}}else;}else{throw(0,_util.assertionError)('WriteRecord should have .snap or .children');}}}return compoundWrite;}/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeCalcCompleteEventCache(writeTree,treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){const shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(shadowingNode!=null){return shadowingNode;}else{const subMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(compoundWriteIsEmpty(subMerge)){return completeServerCache;}else if(completeServerCache==null&&!compoundWriteHasCompleteWrite(subMerge,newEmptyPath())){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{const layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(subMerge,layeredCache);}}}else{const merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(!includeHiddenWrites&&compoundWriteIsEmpty(merge)){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!compoundWriteHasCompleteWrite(merge,newEmptyPath())){return null;}else{const filter=function(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(pathContains(write.path,treePath)||pathContains(treePath,write.path));};const mergeAtPath=writeTreeLayerTree_(writeTree.allWrites,filter,treePath);const layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(mergeAtPath,layeredCache);}}}}/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */function writeTreeCalcCompleteEventChildren(writeTree,treePath,completeServerChildren){let completeChildren=ChildrenNode.EMPTY_NODE;const topLevelSet=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,(childName,childSnap)=>{completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nconst merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,(childName,childNode)=>{const node=compoundWriteApply(compoundWriteChildCompoundWrite(merge,new Path(childName)),childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\ncompoundWriteGetCompleteChildren(merge).forEach(namedNode=>{completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nconst merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);compoundWriteGetCompleteChildren(merge).forEach(namedNode=>{completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}}/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */function writeTreeCalcEventCacheAfterServerOverwrite(writeTree,treePath,childPath,existingEventSnap,existingServerSnap){(0,_util.assert)(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');const path=pathChild(treePath,childPath);if(compoundWriteHasCompleteWrite(writeTree.visibleWrites,path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nconst childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);if(compoundWriteIsEmpty(childMerge)){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn compoundWriteApply(childMerge,existingServerSnap.getChild(childPath));}}}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeCalcCompleteChild(writeTree,treePath,childKey,existingServerSnap){const path=pathChild(treePath,childKey);const shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){const childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);return compoundWriteApply(childMerge,existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */function writeTreeShadowingWrite(writeTree,path){return compoundWriteGetCompleteNode(writeTree.visibleWrites,path);}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */function writeTreeCalcIndexedSlice(writeTree,treePath,completeServerData,startPost,count,reverse,index){let toIterate;const merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);const shadowingNode=compoundWriteGetCompleteNode(merge,newEmptyPath());if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=compoundWriteApply(merge,completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){const nodes=[];const cmp=index.getCompare();const iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);let next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}}function newWriteTree(){return{visibleWrites:CompoundWrite.empty(),allWrites:[],lastWriteId:-1};}/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeRefCalcCompleteEventCache(writeTreeRef,completeServerCache,writeIdsToExclude,includeHiddenWrites){return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites);}/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */function writeTreeRefCalcCompleteEventChildren(writeTreeRef,completeServerChildren){return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerChildren);}/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */function writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef,path,existingEventSnap,existingServerSnap){return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree,writeTreeRef.treePath,path,existingEventSnap,existingServerSnap);}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */function writeTreeRefShadowingWrite(writeTreeRef,path){return writeTreeShadowingWrite(writeTreeRef.writeTree,pathChild(writeTreeRef.treePath,path));}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */function writeTreeRefCalcIndexedSlice(writeTreeRef,completeServerData,startPost,count,reverse,index){return writeTreeCalcIndexedSlice(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerData,startPost,count,reverse,index);}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeRefCalcCompleteChild(writeTreeRef,childKey,existingServerCache){return writeTreeCalcCompleteChild(writeTreeRef.writeTree,writeTreeRef.treePath,childKey,existingServerCache);}/**\r\n * Return a WriteTreeRef for a child.\r\n */function writeTreeRefChild(writeTreeRef,childName){return newWriteTreeRef(pathChild(writeTreeRef.treePath,childName),writeTreeRef.writeTree);}function newWriteTreeRef(path,writeTree){return{treePath:path,writeTree};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class ChildChangeAccumulator{constructor(){this.changeMap=new Map();}trackChildChange(change){const type=change.type;const childKey=change.childName;(0,_util.assert)(type===\"child_added\"/* CHILD_ADDED */||type===\"child_changed\"/* CHILD_CHANGED */||type===\"child_removed\"/* CHILD_REMOVED */,'Only child changes supported for tracking');(0,_util.assert)(childKey!=='.priority','Only non-priority child changes can be tracked.');const oldChange=this.changeMap.get(childKey);if(oldChange){const oldType=oldChange.type;if(type===\"child_added\"/* CHILD_ADDED */&&oldType===\"child_removed\"/* CHILD_REMOVED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.delete(childKey);}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildRemoved(childKey,oldChange.oldSnap));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.set(childKey,changeChildAdded(childKey,change.snapshotNode));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw(0,_util.assertionError)('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}}getChanges(){return Array.from(this.changeMap.values());}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nclass NoCompleteChildSource_{getCompleteChild(childKey){return null;}getChildAfterChild(index,child,reverse){return null;}}/**\r\n * Singleton instance.\r\n */const NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */class WriteTreeCompleteChildSource{constructor(writes_,viewCache_,optCompleteServerCache_=null){this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}getCompleteChild(childKey){const node=this.viewCache_.eventCache;if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{const serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.serverCache;return writeTreeRefCalcCompleteChild(this.writes_,childKey,serverNode);}}getChildAfterChild(index,child,reverse){const completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:viewCacheGetCompleteServerSnap(this.viewCache_);const nodes=writeTreeRefCalcIndexedSlice(this.writes_,completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewProcessor(filter){return{filter};}function viewProcessorAssertIndexed(viewProcessor,viewCache){(0,_util.assert)(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Event snap not indexed');(0,_util.assert)(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Server snap not indexed');}function viewProcessorApplyOperation(viewProcessor,oldViewCache,operation,writesCache,completeCache){const accumulator=new ChildChangeAccumulator();let newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){const overwrite=operation;if(overwrite.source.fromUser){newViewCache=viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{(0,_util.assert)(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.serverCache.isFiltered()&&!pathIsEmpty(overwrite.path);newViewCache=viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){const merge=operation;if(merge.source.fromUser){newViewCache=viewProcessorApplyUserMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{(0,_util.assert)(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.serverCache.isFiltered();newViewCache=viewProcessorApplyServerMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){const ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=viewProcessorAckUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=viewProcessorRevertUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=viewProcessorListenComplete(viewProcessor,oldViewCache,operation.path,writesCache,accumulator);}else{throw(0,_util.assertionError)('Unknown operation type: '+operation.type);}const changes=accumulator.getChanges();viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,changes);return{viewCache:newViewCache,changes};}function viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,accumulator){const eventSnap=newViewCache.eventCache;if(eventSnap.isFullyInitialized()){const isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();const oldCompleteSnap=viewCacheGetCompleteEventSnap(oldViewCache);if(accumulator.length>0||!oldViewCache.eventCache.isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));}}}function viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,viewCache,changePath,writesCache,source,accumulator){const oldEventSnap=viewCache.eventCache;if(writeTreeRefShadowingWrite(writesCache,changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{let newEventCache,serverNode;if(pathIsEmpty(changePath)){// TODO: figure out how this plays with \"sliding ack windows\"\n(0,_util.assert)(viewCache.serverCache.isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.serverCache.isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nconst serverCache=viewCacheGetCompleteServerSnap(viewCache);const completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;const completeEventChildren=writeTreeRefCalcCompleteEventChildren(writesCache,completeChildren);newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeEventChildren,accumulator);}else{const completeNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeNode,accumulator);}}else{const childKey=pathGetFront(changePath);if(childKey==='.priority'){(0,_util.assert)(pathGetLength(changePath)===1,\"Can't have a priority with additional path components\");const oldEventNode=oldEventSnap.getNode();serverNode=viewCache.serverCache.getNode();// we might have overwrites for this priority\nconst updatedPriority=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=viewProcessor.filter.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{const childChangePath=pathPopFront(changePath);// update child\nlet newEventChild;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.serverCache.getNode();const eventChildUpdate=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);}if(newEventChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCacheUpdateEventSnap(viewCache,newEventCache,oldEventSnap.isFullyInitialized()||pathIsEmpty(changePath),viewProcessor.filter.filtersNodes());}}function viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){const oldServerSnap=oldViewCache.serverCache;let newServerCache;const serverFilter=filterServerNode?viewProcessor.filter:viewProcessor.filter.getIndexedFilter();if(pathIsEmpty(changePath)){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nconst newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{const childKey=pathGetFront(changePath);if(!oldServerSnap.isCompleteForPath(changePath)&&pathGetLength(changePath)>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}const childChangePath=pathPopFront(changePath);const childNode=oldServerSnap.getNode().getImmediateChild(childKey);const newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey==='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}const newViewCache=viewCacheUpdateServerSnap(oldViewCache,newServerCache,oldServerSnap.isFullyInitialized()||pathIsEmpty(changePath),serverFilter.filtersNodes());const source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,changePath,writesCache,source,accumulator);}function viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){const oldEventSnap=oldViewCache.eventCache;let newViewCache,newEventCache;const source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(pathIsEmpty(changePath)){newEventCache=viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(),changedSnap,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,true,viewProcessor.filter.filtersNodes());}else{const childKey=pathGetFront(changePath);if(childKey==='.priority'){newEventCache=viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(),changedSnap);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{const childChangePath=pathPopFront(changePath);const oldChild=oldEventSnap.getNode().getImmediateChild(childKey);let newChild;if(pathIsEmpty(childChangePath)){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{const childNode=source.getCompleteChild(childKey);if(childNode!=null){if(pathGetBack(childChangePath)==='.priority'&&childNode.getChild(pathParent(childChangePath)).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){const newEventSnap=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventSnap,oldEventSnap.isFullyInitialized(),viewProcessor.filter.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;}function viewProcessorCacheHasChild(viewCache,childKey){return viewCache.eventCache.isCompleteForChild(childKey);}function viewProcessorApplyUserMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,accumulator){// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nlet curViewCache=viewCache;changedChildren.foreach((relativePath,childNode)=>{const writePath=pathChild(path,relativePath);if(viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach((relativePath,childNode)=>{const writePath=pathChild(path,relativePath);if(!viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;}function viewProcessorApplyMerge(viewProcessor,node,merge){merge.foreach((relativePath,childNode)=>{node=node.updateChild(relativePath,childNode);});return node;}function viewProcessorApplyServerMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.serverCache.getNode().isEmpty()&&!viewCache.serverCache.isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nlet curViewCache=viewCache;let viewMergeTree;if(pathIsEmpty(path)){viewMergeTree=changedChildren;}else{viewMergeTree=new ImmutableTree(null).setTree(path,changedChildren);}const serverNode=viewCache.serverCache.getNode();viewMergeTree.children.inorderTraversal((childKey,childTree)=>{if(serverNode.hasChild(childKey)){const serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);const newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal((childKey,childMergeTree)=>{const isUnknownDeepMerge=!viewCache.serverCache.isCompleteForChild(childKey)&&childMergeTree.value===undefined;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){const serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);const newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childMergeTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;}function viewProcessorAckUserWrite(viewProcessor,viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writeTreeRefShadowingWrite(writesCache,ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nconst filterServerNode=viewCache.serverCache.isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nconst serverCache=viewCache.serverCache;if(affectedTree.value!=null){// This is an overwrite.\nif(pathIsEmpty(ackPath)&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return viewProcessorApplyServerOverwrite(viewProcessor,viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(pathIsEmpty(ackPath)){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nlet changedChildren=new ImmutableTree(null);serverCache.getNode().forEachChild(KEY_INDEX,(name,node)=>{changedChildren=changedChildren.set(new Path(name),node);});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nlet changedChildren=new ImmutableTree(null);affectedTree.foreach((mergePath,value)=>{const serverCachePath=pathChild(ackPath,mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren=changedChildren.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren,writesCache,completeCache,filterServerNode,accumulator);}}function viewProcessorListenComplete(viewProcessor,viewCache,path,writesCache,accumulator){const oldServerNode=viewCache.serverCache;const newViewCache=viewCacheUpdateServerSnap(viewCache,oldServerNode.getNode(),oldServerNode.isFullyInitialized()||pathIsEmpty(path),oldServerNode.isFiltered());return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);}function viewProcessorRevertUserWrite(viewProcessor,viewCache,path,writesCache,completeServerCache,accumulator){let complete;if(writeTreeRefShadowingWrite(writesCache,path)!=null){return viewCache;}else{const source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);const oldEventCache=viewCache.eventCache.getNode();let newEventCache;if(pathIsEmpty(path)||pathGetFront(path)==='.priority'){let newNode;if(viewCache.serverCache.isFullyInitialized()){newNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));}else{const serverChildren=viewCache.serverCache.getNode();(0,_util.assert)(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writeTreeRefCalcCompleteEventChildren(writesCache,serverChildren);}newNode=newNode;newEventCache=viewProcessor.filter.updateFullNode(oldEventCache,newNode,accumulator);}else{const childKey=pathGetFront(path);let newChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);if(newChild==null&&viewCache.serverCache.isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,newChild,pathPopFront(path),source,accumulator);}else if(viewCache.eventCache.getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,pathPopFront(path),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.serverCache.isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));if(complete.isLeafNode()){newEventCache=viewProcessor.filter.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.serverCache.isFullyInitialized()||writeTreeRefShadowingWrite(writesCache,newEmptyPath())!=null;return viewCacheUpdateEventSnap(viewCache,newEventCache,complete,viewProcessor.filter.filtersNodes());}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */class View{constructor(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];const params=this.query_._queryParams;const indexFilter=new IndexedFilter(params.getIndex());const filter=queryParamsGetNodeFilter(params);this.processor_=newViewProcessor(filter);const initialServerCache=initialViewCache.serverCache;const initialEventCache=initialViewCache.eventCache;// Don't filter server node with other filter than index, wait for tagged listen\nconst serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);const eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);const newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());const newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());this.viewCache_=newViewCache(newEventCache,newServerCache);this.eventGenerator_=new EventGenerator(this.query_);}get query(){return this.query_;}}function viewGetServerCache(view){return view.viewCache_.serverCache.getNode();}function viewGetCompleteNode(view){return viewCacheGetCompleteEventSnap(view.viewCache_);}function viewGetCompleteServerCache(view,path){const cache=viewCacheGetCompleteServerSnap(view.viewCache_);if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(view.query._queryParams.loadsAllData()||!pathIsEmpty(path)&&!cache.getImmediateChild(pathGetFront(path)).isEmpty()){return cache.getChild(path);}}return null;}function viewIsEmpty(view){return view.eventRegistrations_.length===0;}function viewAddEventRegistration(view,eventRegistration){view.eventRegistrations_.push(eventRegistration);}/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function viewRemoveEventRegistration(view,eventRegistration,cancelError){const cancelEvents=[];if(cancelError){(0,_util.assert)(eventRegistration==null,'A cancel should cancel all event registrations.');const path=view.query._path;view.eventRegistrations_.forEach(registration=>{const maybeEvent=registration.createCancelEvent(cancelError,path);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){let remaining=[];for(let i=0;i<view.eventRegistrations_.length;++i){const existing=view.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(view.eventRegistrations_.slice(i+1));break;}}view.eventRegistrations_=remaining;}else{view.eventRegistrations_=[];}return cancelEvents;}/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */function viewApplyOperation(view,operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){(0,_util.assert)(viewCacheGetCompleteServerSnap(view.viewCache_),'We should always have a full cache before handling merges');(0,_util.assert)(viewCacheGetCompleteEventSnap(view.viewCache_),'Missing event cache, even though we have a server cache');}const oldViewCache=view.viewCache_;const result=viewProcessorApplyOperation(view.processor_,oldViewCache,operation,writesCache,completeServerCache);viewProcessorAssertIndexed(view.processor_,result.viewCache);(0,_util.assert)(result.viewCache.serverCache.isFullyInitialized()||!oldViewCache.serverCache.isFullyInitialized(),'Once a server snap is complete, it should never go back');view.viewCache_=result.viewCache;return viewGenerateEventsForChanges_(view,result.changes,result.viewCache.eventCache.getNode(),null);}function viewGetInitialEvents(view,registration){const eventSnap=view.viewCache_.eventCache;const initialChanges=[];if(!eventSnap.getNode().isLeafNode()){const eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,(key,childNode)=>{initialChanges.push(changeChildAdded(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(changeValue(eventSnap.getNode()));}return viewGenerateEventsForChanges_(view,initialChanges,eventSnap.getNode(),registration);}function viewGenerateEventsForChanges_(view,changes,eventCache,eventRegistration){const registrations=eventRegistration?[eventRegistration]:view.eventRegistrations_;return eventGeneratorGenerateEventsForChanges(view.eventGenerator_,changes,eventCache,registrations);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let referenceConstructor$1;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */class SyncPoint{constructor(){/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */this.views=new Map();}}function syncPointSetReferenceConstructor(val){(0,_util.assert)(!referenceConstructor$1,'__referenceConstructor has already been defined');referenceConstructor$1=val;}function syncPointGetReferenceConstructor(){(0,_util.assert)(referenceConstructor$1,'Reference.ts has not been loaded');return referenceConstructor$1;}function syncPointIsEmpty(syncPoint){return syncPoint.views.size===0;}function syncPointApplyOperation(syncPoint,operation,writesCache,optCompleteServerCache){const queryId=operation.source.queryId;if(queryId!==null){const view=syncPoint.views.get(queryId);(0,_util.assert)(view!=null,'SyncTree gave us an op for an invalid query.');return viewApplyOperation(view,operation,writesCache,optCompleteServerCache);}else{let events=[];for(const view of syncPoint.views.values()){events=events.concat(viewApplyOperation(view,operation,writesCache,optCompleteServerCache));}return events;}}/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete){const queryId=query._queryIdentifier;const view=syncPoint.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node\nlet eventCache=writeTreeRefCalcCompleteEventCache(writesCache,serverCacheComplete?serverCache:null);let eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writeTreeRefCalcCompleteEventChildren(writesCache,serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}const viewCache=newViewCache(new CacheNode(eventCache,eventCacheComplete,false),new CacheNode(serverCache,serverCacheComplete,false));return new View(query,viewCache);}return view;}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete){const view=syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete);if(!syncPoint.views.has(query._queryIdentifier)){syncPoint.views.set(query._queryIdentifier,view);}// This is guaranteed to exist now, we just created anything that was missing\nviewAddEventRegistration(view,eventRegistration);return viewGetInitialEvents(view,eventRegistration);}/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */function syncPointRemoveEventRegistration(syncPoint,query,eventRegistration,cancelError){const queryId=query._queryIdentifier;const removed=[];let cancelEvents=[];const hadCompleteView=syncPointHasCompleteView(syncPoint);if(queryId==='default'){// When you do ref.off(...), we search all views for the registration to remove.\nfor(const[viewQueryId,view]of syncPoint.views.entries()){cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(viewQueryId);// We'll deal with complete views later.\nif(!view.query._queryParams.loadsAllData()){removed.push(view.query);}}}}else{// remove the callback from the specific view.\nconst view=syncPoint.views.get(queryId);if(view){cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(queryId);// We'll deal with complete views later.\nif(!view.query._queryParams.loadsAllData()){removed.push(view.query);}}}}if(hadCompleteView&&!syncPointHasCompleteView(syncPoint)){// We removed our last complete view.\nremoved.push(new(syncPointGetReferenceConstructor())(query._repo,query._path));}return{removed,events:cancelEvents};}function syncPointGetQueryViews(syncPoint){const result=[];for(const view of syncPoint.views.values()){if(!view.query._queryParams.loadsAllData()){result.push(view);}}return result;}/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */function syncPointGetCompleteServerCache(syncPoint,path){let serverCache=null;for(const view of syncPoint.views.values()){serverCache=serverCache||viewGetCompleteServerCache(view,path);}return serverCache;}function syncPointViewForQuery(syncPoint,query){const params=query._queryParams;if(params.loadsAllData()){return syncPointGetCompleteView(syncPoint);}else{const queryId=query._queryIdentifier;return syncPoint.views.get(queryId);}}function syncPointViewExistsForQuery(syncPoint,query){return syncPointViewForQuery(syncPoint,query)!=null;}function syncPointHasCompleteView(syncPoint){return syncPointGetCompleteView(syncPoint)!=null;}function syncPointGetCompleteView(syncPoint){for(const view of syncPoint.views.values()){if(view.query._queryParams.loadsAllData()){return view;}}return null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */let referenceConstructor;function syncTreeSetReferenceConstructor(val){(0,_util.assert)(!referenceConstructor,'__referenceConstructor has already been defined');referenceConstructor=val;}function syncTreeGetReferenceConstructor(){(0,_util.assert)(referenceConstructor,'Reference.ts has not been loaded');return referenceConstructor;}/**\r\n * Static tracker for next query tag.\r\n */let syncTreeNextQueryTag_=1;/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */class SyncTree{/**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */constructor(listenProvider_){this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */this.syncPointTree_=new ImmutableTree(null);/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */this.pendingWriteTree_=newWriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();}}/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserOverwrite(syncTree,path,newData,writeId,visible){// Record pending write.\nwriteTreeAddOverwrite(syncTree.pendingWriteTree_,path,newData,writeId,visible);if(!visible){return[];}else{return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceUser(),path,newData));}}/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserMerge(syncTree,path,changedChildren,writeId){// Record pending merge.\nwriteTreeAddMerge(syncTree.pendingWriteTree_,path,changedChildren,writeId);const changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceUser(),path,changeTree));}/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */function syncTreeAckUserWrite(syncTree,writeId,revert=false){const write=writeTreeGetWrite(syncTree.pendingWriteTree_,writeId);const needToReevaluate=writeTreeRemoveWrite(syncTree.pendingWriteTree_,writeId);if(!needToReevaluate){return[];}else{let affectedTree=new ImmutableTree(null);if(write.snap!=null){// overwrite\naffectedTree=affectedTree.set(newEmptyPath(),true);}else{each(write.children,pathString=>{affectedTree=affectedTree.set(new Path(pathString),true);});}return syncTreeApplyOperationToSyncPoints_(syncTree,new AckUserWrite(write.path,affectedTree,revert));}}/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerOverwrite(syncTree,path,newData){return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceServer(),path,newData));}/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerMerge(syncTree,path,changedChildren){const changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceServer(),path,changeTree));}/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyListenComplete(syncTree,path){return syncTreeApplyOperationToSyncPoints_(syncTree,new ListenComplete(newOperationSourceServer(),path));}/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedListenComplete(syncTree,path,tag){const queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){const r=syncTreeParseQueryKey_(queryKey);const queryPath=r.path,queryId=r.queryId;const relativePath=newRelativePath(queryPath,path);const op=new ListenComplete(newOperationSourceServerTaggedQuery(queryId),relativePath);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function syncTreeRemoveEventRegistration(syncTree,query,eventRegistration,cancelError){// Find the syncPoint first. Then deal with whether or not it has matching listeners\nconst path=query._path;const maybeSyncPoint=syncTree.syncPointTree_.get(path);let cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query._queryIdentifier==='default'||syncPointViewExistsForQuery(maybeSyncPoint,query))){const removedAndEvents=syncPointRemoveEventRegistration(maybeSyncPoint,query,eventRegistration,cancelError);if(syncPointIsEmpty(maybeSyncPoint)){syncTree.syncPointTree_=syncTree.syncPointTree_.remove(path);}const removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nconst removingDefault=-1!==removed.findIndex(query=>{return query._queryParams.loadsAllData();});const covered=syncTree.syncPointTree_.findOnPath(path,(relativePath,parentSyncPoint)=>syncPointHasCompleteView(parentSyncPoint));if(removingDefault&&!covered){const subtree=syncTree.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nconst newViews=syncTreeCollectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(let i=0;i<newViews.length;++i){const view=newViews[i],newQuery=view.query;const listener=syncTreeCreateListenerForView_(syncTree,view);syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery),syncTreeTagForQuery_(syncTree,newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nconst defaultTag=null;syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query),defaultTag);}else{removed.forEach(queryToRemove=>{const tagToRemove=syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nsyncTreeRemoveTags_(syncTree,removed);}return cancelEvents;}/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryOverwrite(syncTree,path,snap,tag){const queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey!=null){const r=syncTreeParseQueryKey_(queryKey);const queryPath=r.path,queryId=r.queryId;const relativePath=newRelativePath(queryPath,path);const op=new Overwrite(newOperationSourceServerTaggedQuery(queryId),relativePath,snap);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// Query must have been removed already\nreturn[];}}/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryMerge(syncTree,path,changedChildren,tag){const queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){const r=syncTreeParseQueryKey_(queryKey);const queryPath=r.path,queryId=r.queryId;const relativePath=newRelativePath(queryPath,path);const changeTree=ImmutableTree.fromObject(changedChildren);const op=new Merge(newOperationSourceServerTaggedQuery(queryId),relativePath,changeTree);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeAddEventRegistration(syncTree,query,eventRegistration){const path=query._path;let serverCache=null;let foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,(pathToSyncPoint,sp)=>{const relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(sp);});let syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(syncPoint);serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}let serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;const subtree=syncTree.syncPointTree_.subtree(path);subtree.foreachChild((childName,childSyncPoint)=>{const completeCache=syncPointGetCompleteServerCache(childSyncPoint,newEmptyPath());if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}const viewAlreadyExists=syncPointViewExistsForQuery(syncPoint,query);if(!viewAlreadyExists&&!query._queryParams.loadsAllData()){// We need to track a tag for this query\nconst queryKey=syncTreeMakeQueryKey_(query);(0,_util.assert)(!syncTree.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');const tag=syncTreeGetNextQueryTag_();syncTree.queryToTagMap.set(queryKey,tag);syncTree.tagToQueryMap.set(tag,queryKey);}const writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,path);let events=syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){const view=syncPointViewForQuery(syncPoint,query);events=events.concat(syncTreeSetupListener_(syncTree,query,view));}return events;}/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */function syncTreeCalcCompleteEventCache(syncTree,path,writeIdsToExclude){const includeHiddenSets=true;const writeTree=syncTree.pendingWriteTree_;const serverCache=syncTree.syncPointTree_.findOnPath(path,(pathSoFar,syncPoint)=>{const relativePath=newRelativePath(pathSoFar,path);const serverCache=syncPointGetCompleteServerCache(syncPoint,relativePath);if(serverCache){return serverCache;}});return writeTreeCalcCompleteEventCache(writeTree,path,serverCache,writeIdsToExclude,includeHiddenSets);}function syncTreeGetServerValue(syncTree,query){const path=query._path;let serverCache=null;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,(pathToSyncPoint,sp)=>{const relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);});let syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}const serverCacheComplete=serverCache!=null;const serverCacheNode=serverCacheComplete?new CacheNode(serverCache,true,false):null;const writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,query._path);const view=syncPointGetView(syncPoint,query,writesCache,serverCacheComplete?serverCacheNode.getNode():ChildrenNode.EMPTY_NODE,serverCacheComplete);return viewGetCompleteNode(view);}/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */function syncTreeApplyOperationToSyncPoints_(syncTree,operation){return syncTreeApplyOperationHelper_(operation,syncTree.syncPointTree_,/*serverCache=*/null,writeTreeChildWrites(syncTree.pendingWriteTree_,newEmptyPath()));}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationHelper_(operation,syncPointTree,serverCache,writesCache){if(pathIsEmpty(operation.path)){return syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{const syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}let events=[];const childName=pathGetFront(operation.path);const childOperation=operation.operationForChild(childName);const childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){const childServerCache=serverCache?serverCache.getImmediateChild(childName):null;const childWritesCache=writeTreeRefChild(writesCache,childName);events=events.concat(syncTreeApplyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache){const syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}let events=[];syncPointTree.children.inorderTraversal((childName,childTree)=>{const childServerCache=serverCache?serverCache.getImmediateChild(childName):null;const childWritesCache=writeTreeRefChild(writesCache,childName);const childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}function syncTreeCreateListenerForView_(syncTree,view){const query=view.query;const tag=syncTreeTagForQuery_(syncTree,query);return{hashFn:()=>{const cache=viewGetServerCache(view)||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:status=>{if(status==='ok'){if(tag){return syncTreeApplyTaggedListenComplete(syncTree,query._path,tag);}else{return syncTreeApplyListenComplete(syncTree,query._path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nconst error=errorForServerCode(status,query);return syncTreeRemoveEventRegistration(syncTree,query,/*eventRegistration*/null,error);}}};}/**\r\n * Return the tag associated with the given query.\r\n */function syncTreeTagForQuery_(syncTree,query){const queryKey=syncTreeMakeQueryKey_(query);return syncTree.queryToTagMap.get(queryKey);}/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */function syncTreeMakeQueryKey_(query){return query._path.toString()+'$'+query._queryIdentifier;}/**\r\n * Return the query associated with the given tag, if we have one\r\n */function syncTreeQueryKeyForTag_(syncTree,tag){return syncTree.tagToQueryMap.get(tag);}/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */function syncTreeParseQueryKey_(queryKey){const splitIndex=queryKey.indexOf('$');(0,_util.assert)(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};}/**\r\n * A helper method to apply tagged operations\r\n */function syncTreeApplyTaggedOperation_(syncTree,queryPath,operation){const syncPoint=syncTree.syncPointTree_.get(queryPath);(0,_util.assert)(syncPoint,\"Missing sync point for query tag that we're tracking\");const writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,queryPath);return syncPointApplyOperation(syncPoint,operation,writesCache,null);}/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */function syncTreeCollectDistinctViewsForSubTree_(subtree){return subtree.fold((relativePath,maybeChildSyncPoint,childMap)=>{if(maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){const completeView=syncPointGetCompleteView(maybeChildSyncPoint);return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nlet views=[];if(maybeChildSyncPoint){views=syncPointGetQueryViews(maybeChildSyncPoint);}each(childMap,(_key,childViews)=>{views=views.concat(childViews);});return views;}});}/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */function syncTreeQueryForListening_(query){if(query._queryParams.loadsAllData()&&!query._queryParams.isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn new(syncTreeGetReferenceConstructor())(query._repo,query._path);}else{return query;}}function syncTreeRemoveTags_(syncTree,queries){for(let j=0;j<queries.length;++j){const removedQuery=queries[j];if(!removedQuery._queryParams.loadsAllData()){// We should have a tag for this\nconst removedQueryKey=syncTreeMakeQueryKey_(removedQuery);const removedQueryTag=syncTree.queryToTagMap.get(removedQueryKey);syncTree.queryToTagMap.delete(removedQueryKey);syncTree.tagToQueryMap.delete(removedQueryTag);}}}/**\r\n * Static accessor for query tags.\r\n */function syncTreeGetNextQueryTag_(){return syncTreeNextQueryTag_++;}/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */function syncTreeSetupListener_(syncTree,query,view){const path=query._path;const tag=syncTreeTagForQuery_(syncTree,query);const listener=syncTreeCreateListenerForView_(syncTree,view);const events=syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query),tag,listener.hashFn,listener.onComplete);const subtree=syncTree.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){(0,_util.assert)(!syncPointHasCompleteView(subtree.value),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nconst queriesToStop=subtree.fold((relativePath,maybeChildSyncPoint,childMap)=>{if(!pathIsEmpty(relativePath)&&maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){return[syncPointGetCompleteView(maybeChildSyncPoint).query];}else{// No default listener here, flatten any deeper queries into an array\nlet queries=[];if(maybeChildSyncPoint){queries=queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view=>view.query));}each(childMap,(_key,childQueries)=>{queries=queries.concat(childQueries);});return queries;}});for(let i=0;i<queriesToStop.length;++i){const queryToStop=queriesToStop[i];syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop),syncTreeTagForQuery_(syncTree,queryToStop));}}return events;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class ExistingValueProvider{constructor(node_){this.node_=node_;}getImmediateChild(childName){const child=this.node_.getImmediateChild(childName);return new ExistingValueProvider(child);}node(){return this.node_;}}class DeferredValueProvider{constructor(syncTree,path){this.syncTree_=syncTree;this.path_=path;}getImmediateChild(childName){const childPath=pathChild(this.path_,childName);return new DeferredValueProvider(this.syncTree_,childPath);}node(){return syncTreeCalcCompleteEventCache(this.syncTree_,this.path_);}}/**\r\n * Generate placeholders for deferred values.\r\n */const generateWithValues=function(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */const resolveDeferredLeafValue=function(value,existingVal,serverValues){if(!value||typeof value!=='object'){return value;}(0,_util.assert)('.sv'in value,'Unexpected leaf node or priority contents');if(typeof value['.sv']==='string'){return resolveScalarDeferredValue(value['.sv'],existingVal,serverValues);}else if(typeof value['.sv']==='object'){return resolveComplexDeferredValue(value['.sv'],existingVal);}else{(0,_util.assert)(false,'Unexpected server value: '+JSON.stringify(value,null,2));}};const resolveScalarDeferredValue=function(op,existing,serverValues){switch(op){case'timestamp':return serverValues['timestamp'];default:(0,_util.assert)(false,'Unexpected server value: '+op);}};const resolveComplexDeferredValue=function(op,existing,unused){if(!op.hasOwnProperty('increment')){(0,_util.assert)(false,'Unexpected server value: '+JSON.stringify(op,null,2));}const delta=op['increment'];if(typeof delta!=='number'){(0,_util.assert)(false,'Unexpected increment value: '+delta);}const existingNode=existing.node();(0,_util.assert)(existingNode!==null&&typeof existingNode!=='undefined','Expected ChildrenNode.EMPTY_NODE for nulls');// Incrementing a non-number sets the value to the incremented amount\nif(!existingNode.isLeafNode()){return delta;}const leaf=existingNode;const existingVal=leaf.getValue();if(typeof existingVal!=='number'){return delta;}// No need to do over/underflow arithmetic here because JS only handles floats under the covers\nreturn existingVal+delta;};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */const resolveDeferredValueTree=function(path,node,syncTree,serverValues){return resolveDeferredValue(node,new DeferredValueProvider(syncTree,path),serverValues);};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */const resolveDeferredValueSnapshot=function(node,existing,serverValues){return resolveDeferredValue(node,new ExistingValueProvider(existing),serverValues);};function resolveDeferredValue(node,existingVal,serverValues){const rawPri=node.getPriority().val();const priority=resolveDeferredLeafValue(rawPri,existingVal.getImmediateChild('.priority'),serverValues);let newNode;if(node.isLeafNode()){const leafNode=node;const value=resolveDeferredLeafValue(leafNode.getValue(),existingVal,serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON(priority));}else{return node;}}else{const childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,(childName,childNode)=>{const newChildNode=resolveDeferredValue(childNode,existingVal.getImmediateChild(childName),serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */class Tree{/**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */constructor(name='',parent=null,node={children:{},childCount:0}){this.name=name;this.parent=parent;this.node=node;}}/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */function treeSubTree(tree,pathObj){// TODO: Require pathObj to be Path?\nlet path=pathObj instanceof Path?pathObj:new Path(pathObj);let child=tree,next=pathGetFront(path);while(next!==null){const childNode=(0,_util.safeGet)(child.node.children,next)||{children:{},childCount:0};child=new Tree(next,child,childNode);path=pathPopFront(path);next=pathGetFront(path);}return child;}/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */function treeGetValue(tree){return tree.node.value;}/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */function treeSetValue(tree,value){tree.node.value=value;treeUpdateParents(tree);}/**\r\n * @returns Whether the tree has any children.\r\n */function treeHasChildren(tree){return tree.node.childCount>0;}/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */function treeIsEmpty(tree){return treeGetValue(tree)===undefined&&!treeHasChildren(tree);}/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */function treeForEachChild(tree,action){each(tree.node.children,(child,childTree)=>{action(new Tree(child,tree,childTree));});}/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */function treeForEachDescendant(tree,action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst){action(tree);}treeForEachChild(tree,child=>{treeForEachDescendant(child,action,true,childrenFirst);});if(includeSelf&&childrenFirst){action(tree);}}/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */function treeForEachAncestor(tree,action,includeSelf){let node=includeSelf?tree:tree.parent;while(node!==null){if(action(node)){return true;}node=node.parent;}return false;}/**\r\n * @returns The path of this tree node, as a Path.\r\n */function treeGetPath(tree){return new Path(tree.parent===null?tree.name:treeGetPath(tree.parent)+'/'+tree.name);}/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */function treeUpdateParents(tree){if(tree.parent!==null){treeUpdateChild(tree.parent,tree.name,tree);}}/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */function treeUpdateChild(tree,childName,child){const childEmpty=treeIsEmpty(child);const childExists=(0,_util.contains)(tree.node.children,childName);if(childEmpty&&childExists){delete tree.node.children[childName];tree.node.childCount--;treeUpdateParents(tree);}else if(!childEmpty&&!childExists){tree.node.children[childName]=child.node;tree.node.childCount++;treeUpdateParents(tree);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * True for invalid Firebase keys\r\n */const INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */const INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n */const MAX_LEAF_SIZE_=10*1024*1024;const isValidKey=function(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};const isValidPathString=function(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};const isValidRootPathString=function(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};const isValidPriority=function(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(0,_util.contains)(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */const validateFirebaseDataArg=function(fnName,value,path,optional){if(optional&&value===undefined){return;}validateFirebaseData((0,_util.errorPrefix)(fnName,'value'),value,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n */const validateFirebaseData=function(errorPrefix,data,path_){const path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+validationPathToErrorString(path));}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+validationPathToErrorString(path)+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+validationPathToErrorString(path));}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&(0,_util.stringLength)(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+validationPathToErrorString(path)+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&typeof data==='object'){let hasDotValue=false;let hasActualChild=false;each(data,(key,value)=>{if(key==='.value'){hasDotValue=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+validationPathToErrorString(path)+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}validationPathPush(path,key);validateFirebaseData(errorPrefix,value,path);validationPathPop(path);});if(hasDotValue&&hasActualChild){throw new Error(errorPrefix+' contains \".value\" child '+validationPathToErrorString(path)+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n */const validateFirebaseMergePaths=function(errorPrefix,mergePaths){let i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];const keys=pathSlice(curPath);for(let j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(pathCompare);let prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&pathContains(prevPath,curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */const validateFirebaseMergeDataArg=function(fnName,data,path,optional){if(optional&&data===undefined){return;}const errorPrefix$1=(0,_util.errorPrefix)(fnName,'values');if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}const mergePaths=[];each(data,(key,value)=>{const curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,pathChild(path,curPath));if(pathGetBack(curPath)==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};const validatePriority=function(fnName,priority,optional){if(optional&&priority===undefined){return;}if(isInvalidJSONNumber(priority)){throw new Error((0,_util.errorPrefix)(fnName,'priority')+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');}// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority)){throw new Error((0,_util.errorPrefix)(fnName,'priority')+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');}};const validateKey=function(fnName,argumentName,key,optional){if(optional&&key===undefined){return;}if(!isValidKey(key)){throw new Error((0,_util.errorPrefix)(fnName,argumentName)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');}};/**\r\n * @internal\r\n */const validatePathString=function(fnName,argumentName,pathString,optional){if(optional&&pathString===undefined){return;}if(!isValidPathString(pathString)){throw new Error((0,_util.errorPrefix)(fnName,argumentName)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');}};exports._validatePathString=validatePathString;const validateRootPathString=function(fnName,argumentName,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentName,pathString,optional);};/**\r\n * @internal\r\n */const validateWritablePath=function(fnName,path){if(pathGetFront(path)==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};exports._validateWritablePath=validateWritablePath;const validateUrl=function(fnName,parsedUrl){// TODO = Validate server better.\nconst pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error((0,_util.errorPrefix)(fnName,'url')+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */class EventQueue{constructor(){this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */this.recursionDepth_=0;}}/**\r\n * @param eventDataList - The new events to queue.\r\n */function eventQueueQueueEvents(eventQueue,eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nlet currList=null;for(let i=0;i<eventDataList.length;i++){const data=eventDataList[i];const path=data.getPath();if(currList!==null&&!pathEquals(path,currList.path)){eventQueue.eventLists_.push(currList);currList=null;}if(currList===null){currList={events:[],path};}currList.events.push(data);}if(currList){eventQueue.eventLists_.push(currList);}}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */function eventQueueRaiseEventsAtPath(eventQueue,path,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,eventPath=>pathEquals(eventPath,path));}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */function eventQueueRaiseEventsForChangedPath(eventQueue,changedPath,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,eventPath=>pathContains(eventPath,changedPath)||pathContains(changedPath,eventPath));}function eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,predicate){eventQueue.recursionDepth_++;let sentAll=true;for(let i=0;i<eventQueue.eventLists_.length;i++){const eventList=eventQueue.eventLists_[i];if(eventList){const eventPath=eventList.path;if(predicate(eventPath)){eventListRaise(eventQueue.eventLists_[i]);eventQueue.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){eventQueue.eventLists_=[];}eventQueue.recursionDepth_--;}/**\r\n * Iterates through the list and raises each event\r\n */function eventListRaise(eventList){for(let i=0;i<eventList.events.length;i++){const eventData=eventList.events[i];if(eventData!==null){eventList.events[i]=null;const eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const INTERRUPT_REASON='repo_interrupt';/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */const MAX_TRANSACTION_RETRIES=25;/**\r\n * A connection to a single data repository.\r\n */class Repo{constructor(repoInfo_,forceRestClient_,authTokenProvider_,appCheckProvider_){this.repoInfo_=repoInfo_;this.forceRestClient_=forceRestClient_;this.authTokenProvider_=authTokenProvider_;this.appCheckProvider_=appCheckProvider_;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=newSparseSnapshotTree();/** Stores queues of outstanding transactions for Firebase locations. */this.transactionQueueTree_=new Tree();// TODO: This should be @private but it's used by test_access.js and internal.js\nthis.persistentConnection_=null;// This key is intentionally not updated if RepoInfo is later changed or replaced\nthis.key=this.repoInfo_.toURLString();}/**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */toString(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;}}function repoStart(repo,appId,authOverride){repo.stats_=statsManagerGetCollection(repo.repoInfo_);if(repo.forceRestClient_||beingCrawled()){repo.server_=new ReadonlyRestClient(repo.repoInfo_,(pathString,data,isMerge,tag)=>{repoOnDataUpdate(repo,pathString,data,isMerge,tag);},repo.authTokenProvider_,repo.appCheckProvider_);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(()=>repoOnConnectStatus(repo,/* connectStatus= */true),0);}else{// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{(0,_util.stringify)(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}repo.persistentConnection_=new PersistentConnection(repo.repoInfo_,appId,(pathString,data,isMerge,tag)=>{repoOnDataUpdate(repo,pathString,data,isMerge,tag);},connectStatus=>{repoOnConnectStatus(repo,connectStatus);},updates=>{repoOnServerInfoUpdate(repo,updates);},repo.authTokenProvider_,repo.appCheckProvider_,authOverride);repo.server_=repo.persistentConnection_;}repo.authTokenProvider_.addTokenChangeListener(token=>{repo.server_.refreshAuthToken(token);});repo.appCheckProvider_.addTokenChangeListener(result=>{repo.server_.refreshAppCheckToken(result.token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nrepo.statsReporter_=statsManagerGetOrCreateReporter(repo.repoInfo_,()=>new StatsReporter(repo.stats_,repo.server_));// Used for .info.\nrepo.infoData_=new SnapshotHolder();repo.infoSyncTree_=new SyncTree({startListening:(query,tag,currentHashFn,onComplete)=>{let infoEvents=[];const node=repo.infoData_.getNode(query._path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=syncTreeApplyServerOverwrite(repo.infoSyncTree_,query._path,node);setTimeout(()=>{onComplete('ok');},0);}return infoEvents;},stopListening:()=>{}});repoUpdateInfo(repo,'connected',false);repo.serverSyncTree_=new SyncTree({startListening:(query,tag,currentHashFn,onComplete)=>{repo.server_.listen(query,currentHashFn,tag,(status,data)=>{const events=onComplete(status,data);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,query._path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:(query,tag)=>{repo.server_.unlisten(query,tag);}});}/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */function repoServerTime(repo){const offsetNode=repo.infoData_.getNode(new Path('.info/serverTimeOffset'));const offset=offsetNode.val()||0;return new Date().getTime()+offset;}/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */function repoGenerateServerValues(repo){return generateWithValues({timestamp:repoServerTime(repo)});}/**\r\n * Called by realtime when we get new messages from the server.\r\n */function repoOnDataUpdate(repo,pathString,data,isMerge,tag){// For testing.\nrepo.dataUpdateCount++;const path=new Path(pathString);data=repo.interceptServerDataCallback_?repo.interceptServerDataCallback_(pathString,data):data;let events=[];if(tag){if(isMerge){const taggedChildren=(0,_util.map)(data,raw=>nodeFromJSON(raw));events=syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_,path,taggedChildren,tag);}else{const taggedSnap=nodeFromJSON(data);events=syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_,path,taggedSnap,tag);}}else if(isMerge){const changedChildren=(0,_util.map)(data,raw=>nodeFromJSON(raw));events=syncTreeApplyServerMerge(repo.serverSyncTree_,path,changedChildren);}else{const snap=nodeFromJSON(data);events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap);}let affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=repoRerunTransactions(repo,path);}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,events);}function repoOnConnectStatus(repo,connectStatus){repoUpdateInfo(repo,'connected',connectStatus);if(connectStatus===false){repoRunOnDisconnectEvents(repo);}}function repoOnServerInfoUpdate(repo,updates){each(updates,(key,value)=>{repoUpdateInfo(repo,key,value);});}function repoUpdateInfo(repo,pathString,value){const path=new Path('/.info/'+pathString);const newNode=nodeFromJSON(value);repo.infoData_.updateSnapshot(path,newNode);const events=syncTreeApplyServerOverwrite(repo.infoSyncTree_,path,newNode);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);}function repoGetNextWriteId(repo){return repo.nextWriteId_++;}/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */function repoGetValue(repo,query){// Only active queries are cached. There is no persisted cache.\nconst cached=syncTreeGetServerValue(repo.serverSyncTree_,query);if(cached!=null){return Promise.resolve(cached);}return repo.server_.get(query).then(payload=>{const node=nodeFromJSON(payload).withIndex(query._queryParams.getIndex());const events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,query._path,node);eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);return Promise.resolve(node);},err=>{repoLog(repo,'get for query '+(0,_util.stringify)(query)+' failed: '+err);return Promise.reject(new Error(err));});}function repoSetWithPriority(repo,path,newVal,newPriority,onComplete){repoLog(repo,'set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nconst serverValues=repoGenerateServerValues(repo);const newNodeUnresolved=nodeFromJSON(newVal,newPriority);const existing=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path);const newNode=resolveDeferredValueSnapshot(newNodeUnresolved,existing,serverValues);const writeId=repoGetNextWriteId(repo);const events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,writeId,true);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),(status,errorReason)=>{const success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}const clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});const affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,[]);}function repoUpdate(repo,path,childrenToMerge,onComplete){repoLog(repo,'update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nlet empty=true;const serverValues=repoGenerateServerValues(repo);const changedChildren={};each(childrenToMerge,(changedKey,changedValue)=>{empty=false;changedChildren[changedKey]=resolveDeferredValueTree(pathChild(path,changedKey),nodeFromJSON(changedValue),repo.serverSyncTree_,serverValues);});if(!empty){const writeId=repoGetNextWriteId(repo);const events=syncTreeApplyUserMerge(repo.serverSyncTree_,path,changedChildren,writeId);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.merge(path.toString(),childrenToMerge,(status,errorReason)=>{const success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}const clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);const affectedPath=clearEvents.length>0?repoRerunTransactions(repo,path):path;eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});each(childrenToMerge,changedPath=>{const affectedPath=repoAbortTransactions(repo,pathChild(path,changedPath));repoRerunTransactions(repo,affectedPath);});// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);}}/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */function repoRunOnDisconnectEvents(repo){repoLog(repo,'onDisconnectEvents');const serverValues=repoGenerateServerValues(repo);const resolvedOnDisconnectTree=newSparseSnapshotTree();sparseSnapshotTreeForEachTree(repo.onDisconnect_,newEmptyPath(),(path,node)=>{const resolved=resolveDeferredValueTree(path,node,repo.serverSyncTree_,serverValues);sparseSnapshotTreeRemember(resolvedOnDisconnectTree,path,resolved);});let events=[];sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree,newEmptyPath(),(path,snap)=>{events=events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap));const affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);});repo.onDisconnect_=newSparseSnapshotTree();eventQueueRaiseEventsForChangedPath(repo.eventQueue_,newEmptyPath(),events);}function repoOnDisconnectCancel(repo,path,onComplete){repo.server_.onDisconnectCancel(path.toString(),(status,errorReason)=>{if(status==='ok'){sparseSnapshotTreeForget(repo.onDisconnect_,path);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSet(repo,path,value,onComplete){const newNode=nodeFromJSON(value);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),(status,errorReason)=>{if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSetWithPriority(repo,path,value,priority,onComplete){const newNode=nodeFromJSON(value,priority);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),(status,errorReason)=>{if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectUpdate(repo,path,childrenToMerge,onComplete){if((0,_util.isEmpty)(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);return;}repo.server_.onDisconnectMerge(path.toString(),childrenToMerge,(status,errorReason)=>{if(status==='ok'){each(childrenToMerge,(childName,childNode)=>{const newChildNode=nodeFromJSON(childNode);sparseSnapshotTreeRemember(repo.onDisconnect_,pathChild(path,childName),newChildNode);});}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoAddEventCallbackForQuery(repo,query,eventRegistration){let events;if(pathGetFront(query._path)==='.info'){events=syncTreeAddEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeAddEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoRemoveEventCallbackForQuery(repo,query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nlet events;if(pathGetFront(query._path)==='.info'){events=syncTreeRemoveEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeRemoveEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoInterrupt(repo){if(repo.persistentConnection_){repo.persistentConnection_.interrupt(INTERRUPT_REASON);}}function repoResume(repo){if(repo.persistentConnection_){repo.persistentConnection_.resume(INTERRUPT_REASON);}}function repoLog(repo,...varArgs){let prefix='';if(repo.persistentConnection_){prefix=repo.persistentConnection_.id+':';}log(prefix,...varArgs);}function repoCallOnCompleteCallback(repo,callback,status,errorReason){if(callback){exceptionGuard(()=>{if(status==='ok'){callback(null);}else{const code=(status||'error').toUpperCase();let message=code;if(errorReason){message+=': '+errorReason;}const error=new Error(message);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code;callback(error);}});}}/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */function repoStartTransaction(repo,path,transactionUpdate,onComplete,unwatcher,applyLocally){repoLog(repo,'transaction on '+path);// Initialize transaction.\nconst transaction={path,update:transactionUpdate,onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out\n// which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nconst currentState=repoGetLatestState(repo,path,undefined);transaction.currentInputSnapshot=currentState;const newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){transaction.onComplete(null,false,transaction.currentInputSnapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=0/* RUN */;const queueNode=treeSubTree(repo.transactionQueueTree_,path);const nodeQueue=treeGetValue(queueNode)||[];nodeQueue.push(transaction);treeSetValue(queueNode,nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our\n// transaction state, since the user could start new transactions from the\n// event callbacks.\nlet priorityForNode;if(typeof newVal==='object'&&newVal!==null&&(0,_util.contains)(newVal,'.priority')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\npriorityForNode=(0,_util.safeGet)(newVal,'.priority');(0,_util.assert)(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{const currentNode=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}const serverValues=repoGenerateServerValues(repo);const newNodeUnresolved=nodeFromJSON(newVal,priorityForNode);const newNode=resolveDeferredValueSnapshot(newNodeUnresolved,currentState,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=repoGetNextWriteId(repo);const events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,transaction.currentWriteId,transaction.applyLocally);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);repoSendReadyTransactions(repo,repo.transactionQueueTree_);}}/**\r\n * @param excludeSets - A specific set to exclude\r\n */function repoGetLatestState(repo,path,excludeSets){return syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path,excludeSets)||ChildrenNode.EMPTY_NODE;}/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */function repoSendReadyTransactions(repo,node=repo.transactionQueueTree_){// Before recursing, make sure any completed transactions are removed.\nif(!node){repoPruneCompletedTransactionsBelowNode(repo,node);}if(treeGetValue(node)){const queue=repoBuildTransactionQueue(repo,node);(0,_util.assert)(queue.length>0,'Sending zero length transaction queue');const allRun=queue.every(transaction=>transaction.status===0/* RUN */);// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){repoSendTransactionQueue(repo,treeGetPath(node),queue);}}else if(treeHasChildren(node)){treeForEachChild(node,childNode=>{repoSendReadyTransactions(repo,childNode);});}}/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */function repoSendTransactionQueue(repo,path,queue){// Mark transactions as sent and increment retry count!\nconst setsToIgnore=queue.map(txn=>{return txn.currentWriteId;});const latestState=repoGetLatestState(repo,path,setsToIgnore);let snapToSend=latestState;const latestHash=latestState.hash();for(let i=0;i<queue.length;i++){const txn=queue[i];(0,_util.assert)(txn.status===0/* RUN */,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=1/* SENT */;txn.retryCount++;const relativePath=newRelativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/** @type {!Node} */,txn.currentOutputSnapshotRaw);}const dataToSend=snapToSend.val(true);const pathToSend=path;// Send the put.\nrepo.server_.put(pathToSend.toString(),dataToSend,status=>{repoLog(repo,'transaction put response',{path:pathToSend.toString(),status});let events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more\n// transactions or sets.\nconst callbacks=[];for(let i=0;i<queue.length;i++){queue[i].status=2/* COMPLETED */;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this\n// transaction is complete, it should be set\ncallbacks.push(()=>queue[i].onComplete(null,true,queue[i].currentOutputSnapshotResolved));}queue[i].unwatcher();}// Now remove the completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,treeSubTree(repo.transactionQueueTree_,path));// There may be pending transactions that we can now send.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);// Finally, trigger onComplete callbacks.\nfor(let i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(let i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */){queue[i].status=4/* NEEDS_ABORT */;}else{queue[i].status=0/* RUN */;}}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(let i=0;i<queue.length;i++){queue[i].status=4/* NEEDS_ABORT */;queue[i].abortReason=status;}}repoRerunTransactions(repo,path);}},latestHash);}/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */function repoRerunTransactions(repo,changedPath){const rootMostTransactionNode=repoGetAncestorTransactionNode(repo,changedPath);const path=treeGetPath(rootMostTransactionNode);const queue=repoBuildTransactionQueue(repo,rootMostTransactionNode);repoRerunTransactionQueue(repo,queue,path);return path;}/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */function repoRerunTransactionQueue(repo,queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions or\n// sets.\nconst callbacks=[];let events=[];// Ignore all of the sets we're going to re-run.\nconst txnsToRerun=queue.filter(q=>{return q.status===0/* RUN */;});const setsToIgnore=txnsToRerun.map(q=>{return q.currentWriteId;});for(let i=0;i<queue.length;i++){const transaction=queue[i];const relativePath=newRelativePath(path,transaction.path);let abortTransaction=false,abortReason;(0,_util.assert)(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===4/* NEEDS_ABORT */){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else if(transaction.status===0/* RUN */){if(transaction.retryCount>=MAX_TRANSACTION_RETRIES){abortTransaction=true;abortReason='maxretry';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else{// This code reruns a transaction\nconst currentNode=repoGetLatestState(repo,transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;const newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);let newDataNode=nodeFromJSON(newData);const hasExplicitPriority=typeof newData==='object'&&newData!=null&&(0,_util.contains)(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}const oldWriteId=transaction.currentWriteId;const serverValues=repoGenerateServerValues(repo);const newNodeResolved=resolveDeferredValueSnapshot(newDataNode,currentNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=repoGetNextWriteId(repo);// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_,transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}}}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=2/* COMPLETED */;// Removing a listener can trigger pruning which can muck with\n// mergedData/visibleData (as it prunes data). So defer the unwatcher\n// until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){callbacks.push(()=>queue[i].onComplete(null,false,queue[i].currentInputSnapshot));}else{callbacks.push(()=>queue[i].onComplete(new Error(abortReason),false,null));}}}}// Clean up completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,repo.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(let i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);}/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */function repoGetAncestorTransactionNode(repo,path){let front;// Start at the root and walk deeper into the tree towards path until we\n// find a node with pending transactions.\nlet transactionNode=repo.transactionQueueTree_;front=pathGetFront(path);while(front!==null&&treeGetValue(transactionNode)===undefined){transactionNode=treeSubTree(transactionNode,front);path=pathPopFront(path);front=pathGetFront(path);}return transactionNode;}/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */function repoBuildTransactionQueue(repo,transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nconst transactionQueue=[];repoAggregateTransactionQueuesForNode(repo,transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort((a,b)=>a.order-b.order);return transactionQueue;}function repoAggregateTransactionQueuesForNode(repo,node,queue){const nodeQueue=treeGetValue(node);if(nodeQueue){for(let i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}treeForEachChild(node,child=>{repoAggregateTransactionQueuesForNode(repo,child,queue);});}/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */function repoPruneCompletedTransactionsBelowNode(repo,node){const queue=treeGetValue(node);if(queue){let to=0;for(let from=0;from<queue.length;from++){if(queue[from].status!==2/* COMPLETED */){queue[to]=queue[from];to++;}}queue.length=to;treeSetValue(node,queue.length>0?queue:undefined);}treeForEachChild(node,childNode=>{repoPruneCompletedTransactionsBelowNode(repo,childNode);});}/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */function repoAbortTransactions(repo,path){const affectedPath=treeGetPath(repoGetAncestorTransactionNode(repo,path));const transactionNode=treeSubTree(repo.transactionQueueTree_,path);treeForEachAncestor(transactionNode,node=>{repoAbortTransactionsOnNode(repo,node);});repoAbortTransactionsOnNode(repo,transactionNode);treeForEachDescendant(transactionNode,node=>{repoAbortTransactionsOnNode(repo,node);});return affectedPath;}/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */function repoAbortTransactionsOnNode(repo,node){const queue=treeGetValue(node);if(queue){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions\n// or sets.\nconst callbacks=[];// Go through queue.  Any already-sent transactions must be marked for\n// abort, while the unsent ones can be immediately aborted and removed.\nlet events=[];let lastSent=-1;for(let i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */);else if(queue[i].status===1/* SENT */){(0,_util.assert)(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=3/* SENT_NEEDS_ABORT */;queue[i].abortReason='set';}else{(0,_util.assert)(queue[i].status===0/* RUN */,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId,true));if(queue[i].onComplete){callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,null));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\ntreeSetValue(node,undefined);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,treeGetPath(node),events);for(let i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function decodePath(pathString){let pathStringDecoded='';const pieces=pathString.split('/');for(let i=0;i<pieces.length;i++){if(pieces[i].length>0){let piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @returns key value hash\r\n */function decodeQuery(queryString){const results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}for(const segment of queryString.split('&')){if(segment.length===0){continue;}const kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(`Invalid query segment '${segment}' in query '${queryString}'`);}}return results;}const parseRepoInfo=function(dataURL,nodeAdmin){const parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase.com'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace==='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}const webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,webSocketOnly,nodeAdmin,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!==parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};const parseDatabaseURL=function(dataURL){// Default to empty strings in the event of a malformed string.\nlet host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.\nlet secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nlet colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nlet slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}let questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}const queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=host.length;}const hostWithoutPort=host.slice(0,colonInd);if(hostWithoutPort.toLowerCase()==='localhost'){domain='localhost';}else if(hostWithoutPort.split('.').length<=2){domain=hostWithoutPort;}else{// Interpret the subdomain of a 3 or more component URL as the namespace name.\nconst dotInd=host.indexOf('.');subdomain=host.substring(0,dotInd).toLowerCase();domain=host.substring(dotInd+1);// Normalize namespaces to lowercase to share storage / connection.\nnamespace=subdomain;}// Always treat the value of the `ns` as the namespace name if it is present.\nif('ns'in queryParams){namespace=queryParams['ns'];}}return{host,port,domain,subdomain,secure,scheme,pathString,namespace};};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Encapsulates the data needed to raise an event\r\n */class DataEvent{/**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */constructor(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}getPath(){const ref=this.snapshot.ref;if(this.eventType==='value'){return ref._path;}else{return ref.parent._path;}}getEventType(){return this.eventType;}getEventRunner(){return this.eventRegistration.getEventRunner(this);}toString(){return this.getPath().toString()+':'+this.eventType+':'+(0,_util.stringify)(this.snapshot.exportVal());}}class CancelEvent{constructor(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}getPath(){return this.path;}getEventType(){return'cancel';}getEventRunner(){return this.eventRegistration.getEventRunner(this);}toString(){return this.path.toString()+':cancel';}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */class CallbackContext{constructor(snapshotCallback,cancelCallback){this.snapshotCallback=snapshotCallback;this.cancelCallback=cancelCallback;}onValue(expDataSnapshot,previousChildName){this.snapshotCallback.call(null,expDataSnapshot,previousChildName);}onCancel(error){(0,_util.assert)(this.hasCancelCallback,'Raising a cancel event on a listener with no cancel callback');return this.cancelCallback.call(null,error);}get hasCancelCallback(){return!!this.cancelCallback;}matches(other){return this.snapshotCallback===other.snapshotCallback||this.snapshotCallback.userCallback!==undefined&&this.snapshotCallback.userCallback===other.snapshotCallback.userCallback&&this.snapshotCallback.context===other.snapshotCallback.context;}}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */class OnDisconnect{/** @hideconstructor */constructor(_repo,_path){this._repo=_repo;this._path=_path;}/**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */cancel(){const deferred=new _util.Deferred();repoOnDisconnectCancel(this._repo,this._path,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */remove(){validateWritablePath('OnDisconnect.remove',this._path);const deferred=new _util.Deferred();repoOnDisconnectSet(this._repo,this._path,null,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */set(value){validateWritablePath('OnDisconnect.set',this._path);validateFirebaseDataArg('OnDisconnect.set',value,this._path,false);const deferred=new _util.Deferred();repoOnDisconnectSet(this._repo,this._path,value,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */setWithPriority(value,priority){validateWritablePath('OnDisconnect.setWithPriority',this._path);validateFirebaseDataArg('OnDisconnect.setWithPriority',value,this._path,false);validatePriority('OnDisconnect.setWithPriority',priority,false);const deferred=new _util.Deferred();repoOnDisconnectSetWithPriority(this._repo,this._path,value,priority,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */update(values){validateWritablePath('OnDisconnect.update',this._path);validateFirebaseMergeDataArg('OnDisconnect.update',values,this._path,false);const deferred=new _util.Deferred();repoOnDisconnectUpdate(this._repo,this._path,values,deferred.wrapCallback(()=>{}));return deferred.promise;}}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */exports.OnDisconnect=OnDisconnect;class QueryImpl{/**\r\n     * @hideconstructor\r\n     */constructor(_repo,_path,_queryParams,_orderByCalled){this._repo=_repo;this._path=_path;this._queryParams=_queryParams;this._orderByCalled=_orderByCalled;}get key(){if(pathIsEmpty(this._path)){return null;}else{return pathGetBack(this._path);}}get ref(){return new ReferenceImpl(this._repo,this._path);}get _queryIdentifier(){const obj=queryParamsGetQueryObject(this._queryParams);const id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;}/**\r\n     * An object representation of the query parameters used by this Query.\r\n     */get _queryObject(){return queryParamsGetQueryObject(this._queryParams);}isEqual(other){other=(0,_util.getModularInstance)(other);if(!(other instanceof QueryImpl)){return false;}const sameRepo=this._repo===other._repo;const samePath=pathEquals(this._path,other._path);const sameQueryIdentifier=this._queryIdentifier===other._queryIdentifier;return sameRepo&&samePath&&sameQueryIdentifier;}toJSON(){return this.toString();}toString(){return this._repo.toString()+pathToUrlEncodedString(this._path);}}/**\r\n * Validates that no other order by call has been made\r\n */exports._QueryImpl=QueryImpl;function validateNoPreviousOrderByCall(query,fnName){if(query._orderByCalled===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}}/**\r\n * Validates start/end values for queries.\r\n */function validateQueryEndpoints(params){let startNode=null;let endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){const tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';const wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), startAfter(), '+'endAt(), endBefore(), or equalTo() must be a string.';if(params.hasStart()){const startName=params.getIndexStartName();if(startName!==MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){const endName=params.getIndexEndName();if(endName!==MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value '+'(null, a number, or a string).');}}else{(0,_util.assert)(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or '+'equalTo() cannot be an object.');}}}/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */function validateLimit(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \"+'limitToFirst() or limitToLast() instead.');}}/**\r\n * @internal\r\n */class ReferenceImpl extends QueryImpl{/** @hideconstructor */constructor(repo,path){super(repo,path,new QueryParams(),false);}get parent(){const parentPath=pathParent(this._path);return parentPath===null?null:new ReferenceImpl(this._repo,parentPath);}get root(){let ref=this;while(ref.parent!==null){ref=ref.parent;}return ref;}}/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */exports._ReferenceImpl=ReferenceImpl;class DataSnapshot{/**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */constructor(_node,/**\r\n     * The location of this DataSnapshot.\r\n     */ref,_index){this._node=_node;this.ref=ref;this._index=_index;}/**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */get priority(){// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this._node.getPriority().val();}/**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */get key(){return this.ref.key;}/** Returns the number of child properties of this `DataSnapshot`. */get size(){return this._node.numChildren();}/**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */child(path){const childPath=new Path(path);const childRef=child(this.ref,path);return new DataSnapshot(this._node.getChild(childPath),childRef,PRIORITY_INDEX);}/**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */exists(){return!this._node.isEmpty();}/**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nexportVal(){return this._node.val(true);}/**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */forEach(action){if(this._node.isLeafNode()){return false;}const childrenNode=this._node;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this._index,(key,node)=>{return action(new DataSnapshot(node,child(this.ref,key),PRIORITY_INDEX));});}/**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */hasChild(path){const childPath=new Path(path);return!this._node.getChild(childPath).isEmpty();}/**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */hasChildren(){if(this._node.isLeafNode()){return false;}else{return!this._node.isEmpty();}}/**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */toJSON(){return this.exportVal();}/**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nval(){return this._node.val();}}/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */exports.DataSnapshot=DataSnapshot;function ref(db,path){db=(0,_util.getModularInstance)(db);db._checkNotDeleted('ref');return path!==undefined?child(db._root,path):db._root;}/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */function refFromURL(db,url){db=(0,_util.getModularInstance)(db);db._checkNotDeleted('refFromURL');const parsedURL=parseRepoInfo(url,db._repo.repoInfo_.nodeAdmin);validateUrl('refFromURL',parsedURL);const repoInfo=parsedURL.repoInfo;if(!db._repo.repoInfo_.isCustomHost()&&repoInfo.host!==db._repo.repoInfo_.host){fatal('refFromURL'+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+db._repo.repoInfo_.host+')');}return ref(db,parsedURL.path.toString());}/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */function child(parent,path){parent=(0,_util.getModularInstance)(parent);if(pathGetFront(parent._path)===null){validateRootPathString('child','path',path,false);}else{validatePathString('child','path',path,false);}return new ReferenceImpl(parent._repo,pathChild(parent._path,path));}/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */function onDisconnect(ref){ref=(0,_util.getModularInstance)(ref);return new OnDisconnect(ref._repo,ref._path);}/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */function push(parent,value){parent=(0,_util.getModularInstance)(parent);validateWritablePath('push',parent._path);validateFirebaseDataArg('push',value,parent._path,true);const now=repoServerTime(parent._repo);const name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a\n// regular Reference. We use child() to create handles to two different\n// references. The first is turned into a ThennableReference below by adding\n// then() and catch() methods and is used as the return value of push(). The\n// second remains a regular Reference and is used as the fulfilled value of\n// the first ThennableReference.\nconst thennablePushRef=child(parent,name);const pushRef=child(parent,name);let promise;if(value!=null){promise=set(pushRef,value).then(()=>pushRef);}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);return thennablePushRef;}/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */function remove(ref){validateWritablePath('remove',ref._path);return set(ref,null);}/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function set(ref,value){ref=(0,_util.getModularInstance)(ref);validateWritablePath('set',ref._path);validateFirebaseDataArg('set',value,ref._path,false);const deferred=new _util.Deferred();repoSetWithPriority(ref._repo,ref._path,value,/*priority=*/null,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setPriority(ref,priority){ref=(0,_util.getModularInstance)(ref);validateWritablePath('setPriority',ref._path);validatePriority('setPriority',priority,false);const deferred=new _util.Deferred();repoSetWithPriority(ref._repo,pathChild(ref._path,'.priority'),priority,null,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setWithPriority(ref,value,priority){validateWritablePath('setWithPriority',ref._path);validateFirebaseDataArg('setWithPriority',value,ref._path,false);validatePriority('setWithPriority',priority,false);if(ref.key==='.length'||ref.key==='.keys'){throw'setWithPriority failed: '+ref.key+' is a read-only object.';}const deferred=new _util.Deferred();repoSetWithPriority(ref._repo,ref._path,value,priority,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */function update(ref,values){validateFirebaseMergeDataArg('update',values,ref._path,false);const deferred=new _util.Deferred();repoUpdate(ref._repo,ref._path,values,deferred.wrapCallback(()=>{}));return deferred.promise;}/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */function get(query){query=(0,_util.getModularInstance)(query);return repoGetValue(query._repo,query).then(node=>{return new DataSnapshot(node,new ReferenceImpl(query._repo,query._path),query._queryParams.getIndex());});}/**\r\n * Represents registration for 'value' events.\r\n */class ValueEventRegistration{constructor(callbackContext){this.callbackContext=callbackContext;}respondsTo(eventType){return eventType==='value';}createEvent(change,query){const index=query._queryParams.getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,new ReferenceImpl(query._repo,query._path),index));}getEventRunner(eventData){if(eventData.getEventType()==='cancel'){return()=>this.callbackContext.onCancel(eventData.error);}else{return()=>this.callbackContext.onValue(eventData.snapshot,null);}}createCancelEvent(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}}matches(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callbackContext||!this.callbackContext){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callbackContext.matches(this.callbackContext);}}hasAnyCallback(){return this.callbackContext!==null;}}/**\r\n * Represents the registration of a child_x event.\r\n */class ChildEventRegistration{constructor(eventType,callbackContext){this.eventType=eventType;this.callbackContext=callbackContext;}respondsTo(eventType){let eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return this.eventType===eventToCheck;}createCancelEvent(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}}createEvent(change,query){(0,_util.assert)(change.childName!=null,'Child events should have a childName.');const childRef=child(new ReferenceImpl(query._repo,query._path),change.childName);const index=query._queryParams.getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,childRef,index),change.prevName);}getEventRunner(eventData){if(eventData.getEventType()==='cancel'){return()=>this.callbackContext.onCancel(eventData.error);}else{return()=>this.callbackContext.onValue(eventData.snapshot,eventData.prevName);}}matches(other){if(other instanceof ChildEventRegistration){return this.eventType===other.eventType&&(!this.callbackContext||!other.callbackContext||this.callbackContext.matches(other.callbackContext));}return false;}hasAnyCallback(){return!!this.callbackContext;}}function addEventListener(query,eventType,callback,cancelCallbackOrListenOptions,options){let cancelCallback;if(typeof cancelCallbackOrListenOptions==='object'){cancelCallback=undefined;options=cancelCallbackOrListenOptions;}if(typeof cancelCallbackOrListenOptions==='function'){cancelCallback=cancelCallbackOrListenOptions;}if(options&&options.onlyOnce){const userCallback=callback;const onceCallback=(dataSnapshot,previousChildName)=>{repoRemoveEventCallbackForQuery(query._repo,query,container);userCallback(dataSnapshot,previousChildName);};onceCallback.userCallback=callback.userCallback;onceCallback.context=callback.context;callback=onceCallback;}const callbackContext=new CallbackContext(callback,cancelCallback||undefined);const container=eventType==='value'?new ValueEventRegistration(callbackContext):new ChildEventRegistration(eventType,callbackContext);repoAddEventCallbackForQuery(query._repo,query,container);return()=>repoRemoveEventCallbackForQuery(query._repo,query,container);}function onValue(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'value',callback,cancelCallbackOrListenOptions,options);}function onChildAdded(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_added',callback,cancelCallbackOrListenOptions,options);}function onChildChanged(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_changed',callback,cancelCallbackOrListenOptions,options);}function onChildMoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_moved',callback,cancelCallbackOrListenOptions,options);}function onChildRemoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_removed',callback,cancelCallbackOrListenOptions,options);}/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */function off(query,eventType,callback){let container=null;const expCallback=callback?new CallbackContext(callback):null;if(eventType==='value'){container=new ValueEventRegistration(expCallback);}else if(eventType){container=new ChildEventRegistration(eventType,expCallback);}repoRemoveEventCallbackForQuery(query._repo,query,container);}/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */class QueryConstraint{}exports.QueryConstraint=QueryConstraint;class QueryEndAtConstraint extends QueryConstraint{constructor(_value,_key){super();this._value=_value;this._key=_key;}_apply(query){validateFirebaseDataArg('endAt',this._value,query._path,true);const newParams=queryParamsEndAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endAt: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */function endAt(value,key){validateKey('endAt','key',key,true);return new QueryEndAtConstraint(value,key);}class QueryEndBeforeConstraint extends QueryConstraint{constructor(_value,_key){super();this._value=_value;this._key=_key;}_apply(query){validateFirebaseDataArg('endBefore',this._value,query._path,false);const newParams=queryParamsEndBefore(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endBefore: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function endBefore(value,key){validateKey('endBefore','key',key,true);return new QueryEndBeforeConstraint(value,key);}class QueryStartAtConstraint extends QueryConstraint{constructor(_value,_key){super();this._value=_value;this._key=_key;}_apply(query){validateFirebaseDataArg('startAt',this._value,query._path,true);const newParams=queryParamsStartAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAt: Starting point was already set (by another call to startAt, '+'startBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAt(value=null,key){validateKey('startAt','key',key,true);return new QueryStartAtConstraint(value,key);}class QueryStartAfterConstraint extends QueryConstraint{constructor(_value,_key){super();this._value=_value;this._key=_key;}_apply(query){validateFirebaseDataArg('startAfter',this._value,query._path,false);const newParams=queryParamsStartAfter(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAfter: Starting point was already set (by another call to startAt, '+'startAfter, or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAfter(value,key){validateKey('startAfter','key',key,true);return new QueryStartAfterConstraint(value,key);}class QueryLimitToFirstConstraint extends QueryConstraint{constructor(_limit){super();this._limit=_limit;}_apply(query){if(query._queryParams.hasLimit()){throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToFirst(query._queryParams,this._limit),query._orderByCalled);}}/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToFirst(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToFirst: First argument must be a positive integer.');}return new QueryLimitToFirstConstraint(limit);}class QueryLimitToLastConstraint extends QueryConstraint{constructor(_limit){super();this._limit=_limit;}_apply(query){if(query._queryParams.hasLimit()){throw new Error('limitToLast: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToLast(query._queryParams,this._limit),query._orderByCalled);}}/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToLast(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToLast: First argument must be a positive integer.');}return new QueryLimitToLastConstraint(limit);}class QueryOrderByChildConstraint extends QueryConstraint{constructor(_path){super();this._path=_path;}_apply(query){validateNoPreviousOrderByCall(query,'orderByChild');const parsedPath=new Path(this._path);if(pathIsEmpty(parsedPath)){throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');}const index=new PathIndex(parsedPath);const newParams=queryParamsOrderBy(query._queryParams,index);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */function orderByChild(path){if(path==='$key'){throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');}else if(path==='$priority'){throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');}else if(path==='$value'){throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');}validatePathString('orderByChild','path',path,false);return new QueryOrderByChildConstraint(path);}class QueryOrderByKeyConstraint extends QueryConstraint{_apply(query){validateNoPreviousOrderByCall(query,'orderByKey');const newParams=queryParamsOrderBy(query._queryParams,KEY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByKey(){return new QueryOrderByKeyConstraint();}class QueryOrderByPriorityConstraint extends QueryConstraint{_apply(query){validateNoPreviousOrderByCall(query,'orderByPriority');const newParams=queryParamsOrderBy(query._queryParams,PRIORITY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */function orderByPriority(){return new QueryOrderByPriorityConstraint();}class QueryOrderByValueConstraint extends QueryConstraint{_apply(query){validateNoPreviousOrderByCall(query,'orderByValue');const newParams=queryParamsOrderBy(query._queryParams,VALUE_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByValue(){return new QueryOrderByValueConstraint();}class QueryEqualToValueConstraint extends QueryConstraint{constructor(_value,_key){super();this._value=_value;this._key=_key;}_apply(query){validateFirebaseDataArg('equalTo',this._value,query._path,false);if(query._queryParams.hasStart()){throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or '+'equalTo).');}if(query._queryParams.hasEnd()){throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or '+'equalTo).');}return new QueryEndAtConstraint(this._value,this._key)._apply(new QueryStartAtConstraint(this._value,this._key)._apply(query));}}/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function equalTo(value,key){validateKey('equalTo','key',key,true);return new QueryEqualToValueConstraint(value,key);}/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */function query(query,...queryConstraints){let queryImpl=(0,_util.getModularInstance)(query);for(const constraint of queryConstraints){queryImpl=constraint._apply(queryImpl);}return queryImpl;}/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */syncPointSetReferenceConstructor(ReferenceImpl);syncTreeSetReferenceConstructor(ReferenceImpl);/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */const FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';/**\r\n * Creates and caches `Repo` instances.\r\n */const repos={};/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */let useRestClient=false;/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */function repoManagerApplyEmulatorSettings(repo,host,port,tokenProvider){repo.repoInfo_=new RepoInfo(`${host}:${port}`,/* secure= */false,repo.repoInfo_.namespace,repo.repoInfo_.webSocketOnly,repo.repoInfo_.nodeAdmin,repo.repoInfo_.persistenceKey,repo.repoInfo_.includeNamespaceInQueryParams);if(tokenProvider){repo.authTokenProvider_=tokenProvider;}}/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */function repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url,nodeAdmin){let dbUrl=url||app.options.databaseURL;if(dbUrl===undefined){if(!app.options.projectId){fatal(\"Can't determine Firebase Database URL. Be sure to include \"+' a Project ID when calling firebase.initializeApp().');}log('Using default host for project ',app.options.projectId);dbUrl=`${app.options.projectId}-default-rtdb.firebaseio.com`;}let parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);let repoInfo=parsedUrl.repoInfo;let isEmulator;let dbEmulatorHost=undefined;if(typeof process!=='undefined'&&process.env){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){isEmulator=true;dbUrl=`http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);repoInfo=parsedUrl.repoInfo;}else{isEmulator=!parsedUrl.repoInfo.secure;}const authTokenProvider=nodeAdmin&&isEmulator?new EmulatorTokenProvider(EmulatorTokenProvider.OWNER):new FirebaseAuthTokenProvider(app.name,app.options,authProvider);validateUrl('Invalid Firebase Database URL',parsedUrl);if(!pathIsEmpty(parsedUrl.path)){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}const repo=repoManagerCreateRepo(repoInfo,app,authTokenProvider,new AppCheckTokenProvider(app.name,appCheckProvider));return new Database(repo,app);}/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */function repoManagerDeleteRepo(repo,appName){const appRepos=repos[appName];// This should never happen...\nif(!appRepos||appRepos[repo.key]!==repo){fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);}repoInterrupt(repo);delete appRepos[repo.key];}/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */function repoManagerCreateRepo(repoInfo,app,authTokenProvider,appCheckProvider){let appRepos=repos[app.name];if(!appRepos){appRepos={};repos[app.name]=appRepos;}let repo=appRepos[repoInfo.toURLString()];if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,useRestClient,authTokenProvider,appCheckProvider);appRepos[repoInfo.toURLString()]=repo;return repo;}/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */function repoManagerForceRestClient(forceRestClient){useRestClient=forceRestClient;}/**\r\n * Class representing a Firebase Realtime Database.\r\n */class Database{/** @hideconstructor */constructor(_repoInternal,/** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */app){this._repoInternal=_repoInternal;this.app=app;/** Represents a `Database` instance. */this['type']='database';/** Track if the instance has been used (root or repo accessed) */this._instanceStarted=false;}get _repo(){if(!this._instanceStarted){repoStart(this._repoInternal,this.app.options.appId,this.app.options['databaseAuthVariableOverride']);this._instanceStarted=true;}return this._repoInternal;}get _root(){if(!this._rootInternal){this._rootInternal=new ReferenceImpl(this._repo,newEmptyPath());}return this._rootInternal;}_delete(){if(this._rootInternal!==null){repoManagerDeleteRepo(this._repo,this.app.name);this._repoInternal=null;this._rootInternal=null;}return Promise.resolve();}_checkNotDeleted(apiName){if(this._rootInternal===null){fatal('Cannot call '+apiName+' on a deleted database.');}}}/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */exports.Database=Database;function getDatabase(app=(0,_app.getApp)(),url){return(0,_app._getProvider)(app,'database').getImmediate({identifier:url});}/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */function connectDatabaseEmulator(db,host,port,options={}){db=(0,_util.getModularInstance)(db);db._checkNotDeleted('useEmulator');if(db._instanceStarted){fatal('Cannot call useEmulator() after instance has already been initialized.');}const repo=db._repoInternal;let tokenProvider=undefined;if(repo.repoInfo_.nodeAdmin){if(options.mockUserToken){fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');}tokenProvider=new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);}else if(options.mockUserToken){const token=typeof options.mockUserToken==='string'?options.mockUserToken:(0,_util.createMockUserToken)(options.mockUserToken,db.app.options.projectId);tokenProvider=new EmulatorTokenProvider(token);}// Modify the repo to apply emulator settings\nrepoManagerApplyEmulatorSettings(repo,host,port,tokenProvider);}/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */function goOffline(db){db=(0,_util.getModularInstance)(db);db._checkNotDeleted('goOffline');repoInterrupt(db._repo);}/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */function goOnline(db){db=(0,_util.getModularInstance)(db);db._checkNotDeleted('goOnline');repoResume(db._repo);}function enableLogging(logger,persistent){enableLogging$1(logger,persistent);}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function registerDatabase(variant){setSDKVersion(_app.SDK_VERSION);(0,_app._registerComponent)(new _component.Component('database',(container,{instanceIdentifier:url})=>{const app=container.getProvider('app').getImmediate();const authProvider=container.getProvider('auth-internal');const appCheckProvider=container.getProvider('app-check-internal');return repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url);},\"PUBLIC\"/* PUBLIC */).setMultipleInstances(true));(0,_app.registerVersion)(name,version,variant);// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n(0,_app.registerVersion)(name,version,'esm2017');}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const SERVER_TIMESTAMP={'.sv':'timestamp'};/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */function serverTimestamp(){return SERVER_TIMESTAMP;}/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */function increment(delta){return{'.sv':{'increment':delta}};}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */class TransactionResult{/** @hideconstructor */constructor(/** Whether the transaction was successfully committed. */committed,/** The resulting data snapshot. */snapshot){this.committed=committed;this.snapshot=snapshot;}/** Returns a JSON-serializable representation of this object. */toJSON(){return{committed:this.committed,snapshot:this.snapshot.toJSON()};}}/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */exports.TransactionResult=TransactionResult;function runTransaction(ref,// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate,options){var _a;ref=(0,_util.getModularInstance)(ref);validateWritablePath('Reference.transaction',ref._path);if(ref.key==='.length'||ref.key==='.keys'){throw'Reference.transaction failed: '+ref.key+' is a read-only object.';}const applyLocally=(_a=options===null||options===void 0?void 0:options.applyLocally)!==null&&_a!==void 0?_a:true;const deferred=new _util.Deferred();const promiseComplete=(error,committed,node)=>{let dataSnapshot=null;if(error){deferred.reject(error);}else{dataSnapshot=new DataSnapshot(node,new ReferenceImpl(ref._repo,ref._path),PRIORITY_INDEX);deferred.resolve(new TransactionResult(committed,dataSnapshot));}};// Add a watch to make sure we get server updates.\nconst unwatcher=onValue(ref,()=>{});repoStartTransaction(ref._repo,ref._path,transactionUpdate,promiseComplete,unwatcher,applyLocally);return deferred.promise;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */PersistentConnection;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nConnection;/**\r\n * @internal\r\n */const hijackHash=function(newHash){const oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){if(hash!==undefined){hash=newHash();}oldPut.call(this,pathString,data,onComplete,hash);};return function(){PersistentConnection.prototype.put=oldPut;};};exports._TEST_ACCESS_hijackHash=hijackHash;RepoInfo;/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */const forceRestClient=function(forceRestClient){repoManagerForceRestClient(forceRestClient);};/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */exports._TEST_ACCESS_forceRestClient=forceRestClient;registerDatabase();\n};"],
"names":["shadow$provide","global","require","module","exports","each","obj","fn","key","hasOwnProperty","repoInfoNeedsQueryParam","repoInfo","host","internalHost","isCustomHost","includeNamespaceInQueryParams","repoInfoConnectionURL","type","params","_util","assert","WEBSOCKET","connURL","secure","LONG_POLLING","Error","namespace","pairs","value","push","join","statsManagerGetCollection","hashString","toString","collections","StatsCollection","statsManagerGetOrCreateReporter","creatorFunction","reporters","newEmptyPath","Path","pathGetFront","path","pieceNum_","pieces_","length","pathGetLength","pathPopFront","pieceNum","pathGetBack","pathSlice","begin","slice","pathParent","pieces","i","pathChild","childPathObj","childPieces","split","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","nameCompare","pathEquals","other","j","pathContains","validationPathCheckValid","validationPath","MAX_PATH_LENGTH_BYTES","byteLength_","errorPrefix_","MAX_PATH_DEPTH","parts_","validationPathToErrorString","NAME_ONLY_COMPARATOR","name","NAME_COMPARATOR","nodeFromJSON","json","priority","ChildrenNode","EMPTY_NODE","LeafNode","Array","node","childData","contains","substring","childNode","isLeafNode","isEmpty","updateImmediateChild","updatePriority","children","childrenHavePriority","child","getPriority","NamedNode","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap","Default","changeChildAdded","childName","snapshotNode","changeChildRemoved","changeChildChanged","oldSnap","queryParamsStartAt","queryParams","indexValue","newParams","copy","startSet_","undefined","indexStartValue_","startNameSet_","indexStartName_","queryParamsEndAt","endSet_","indexEndValue_","endNameSet_","indexEndName_","queryParamsOrderBy","index","index_","queryParamsToRestQueryStringParameters","qs","isDefault","orderBy","VALUE_INDEX","KEY_INDEX","PathIndex","stringify","limitSet_","isViewFromLeft","limit_","queryParamsGetQueryObject","viewFrom","viewFrom_","newSparseSnapshotTree","Map","sparseSnapshotTreeRemember","sparseSnapshotTree","data","clear","updateChild","childKey","has","set","get","sparseSnapshotTreeForget","forEachChild","tree","size","safeToRemove","delete","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","newOperationSourceUser","fromUser","fromServer","queryId","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","indexedValueChanged","eventGeneratorGenerateEventsForType","eventType","registrations","filteredChanges","filter","sort","a","b","assertionError","aWrapped","bWrapped","compare","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","query_","prevName","getPredecessorChildName","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","filtered","CacheNode","viewCacheGetCompleteEventSnap","isFullyInitialized","getNode","viewCacheGetCompleteServerSnap","compoundWriteAddWrite","compoundWrite","CompoundWrite","ImmutableTree","rootmost","writeTree_","findRootMostValueAndPath","rootMostPath","relativePath","subtree","newWriteTree","setTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","getChild","compoundWriteGetCompleteChildren","inorderTraversal","childTree","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeGetWrite","writeId","allWrites","record","writeTreeRemoveWrite","idx","findIndex","s","writeToRemove","splice","removedWriteWasVisible","visible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","snap","visibleWrites","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","write","writes","treeRoot","writePath","safeGet","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","mergeAtPath","indexOf","subMerge","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","childSnap","writeTreeCalcEventCacheAfterServerOverwrite","childPath","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","isCompleteForChild","getImmediateChild","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefShadowingWrite","writeTreeRefChild","newWriteTreeRef","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessor","changePath","writesCache","source","accumulator","oldEventSnap","serverNode","isFiltered","completeEventChildren","newEventCache","updateFullNode","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","viewProcessorApplyServerOverwrite","oldViewCache","changedSnap","completeCache","filterServerNode","oldServerSnap","serverFilter","getIndexedFilter","newServerCache","newServerNode","isCompleteForPath","newChildNode","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","viewProcessorApplyUserOverwrite","oldChild","getCompleteChild","newChild","equals","newEventSnap","viewProcessorApplyUserMerge","changedChildren","curViewCache","foreach","viewProcessorApplyMerge","viewProcessorApplyServerMerge","viewMergeTree","hasChild","serverChild","childMergeTree","isUnknownDeepMerge","viewProcessorAckUserWrite","ackPath","affectedTree","mergePath","serverCachePath","viewRemoveEventRegistration","view","eventRegistration","cancelError","cancelEvents","query","_path","eventRegistrations_","maybeEvent","createCancelEvent","remaining","existing","matches","hasAnyCallback","concat","viewApplyOperation","operation","OperationType","MERGE","viewCache_","processor_","ChildChangeAccumulator","OVERWRITE","ACK_USER_WRITE","revert","oldEventCache","newNode","serverChildren","LISTEN_COMPLETE","oldServerNode","serverSnap","getChanges","isLeafOrEmpty","oldCompleteSnap","isIndexed","getIndex","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","eventGenerator_","syncPointApplyOperation","syncPoint","optCompleteServerCache","views","values","syncPointGetView","serverCacheComplete","_queryIdentifier","eventCacheComplete","View","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointGetCompleteView","viewQueryId","entries","_queryParams","loadsAllData","referenceConstructor$1","_repo","syncPointGetQueryViews","result","syncPointGetCompleteServerCache","cache","syncPointViewForQuery","syncTreeApplyUserOverwrite","syncTree","newData","pendingWriteTree_","syncTreeApplyOperationToSyncPoints_","Overwrite","syncTreeApplyUserMerge","changeTree","fromObject","Merge","syncTreeAckUserWrite","needToReevaluate","pathString","AckUserWrite","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeRemoveEventRegistration","maybeSyncPoint","syncPointTree_","removedAndEvents","remove","removingDefault","covered","findOnPath","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","listener","syncTreeCreateListenerForView_","listenProvider_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","hashFn","onComplete","stopListening","defaultTag","queryToRemove","tagToRemove","queryToTagMap","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","tag","queryKey","tagToQueryMap","r","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","SyncPoint","foreachChild","childSyncPoint","viewAlreadyExists","syncTreeNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","pathSoFar","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","hash","status","ListenComplete","reason","error","code","toUpperCase","splitIndex","substr","fold","maybeChildSyncPoint","childMap","completeView","_key","childViews","referenceConstructor","queries","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","map","childQueries","queryToStop","resolveDeferredValue","existingVal","serverValues","rawPri","val","resolveDeferredLeafValue","getValue","treeSubTree","pathObj","next","childCount","Tree","treeSetValue","treeUpdateParents","treeForEachChild","action","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","parent","treeGetPath","childExists","childEmpty","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventLists_","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","predicate","recursionDepth_","sentAll","eventList","eventData","eventFn","getEventRunner","logger","log","exceptionGuard","repoStart","repo","appId","authOverride","stats_","repoInfo_","forceRestClient_","search","window","server_","ReadonlyRestClient","isMerge","repoOnDataUpdate","authTokenProvider_","appCheckProvider_","setTimeout","repoUpdateInfo","connectStatus","e","persistentConnection_","PersistentConnection","repoRunOnDisconnectEvents","repoOnServerInfoUpdate","addTokenChangeListener","token","refreshAuthToken","refreshAppCheckToken","statsReporter_","StatsReporter","infoData_","SnapshotHolder","infoSyncTree_","SyncTree","currentHashFn","infoEvents","serverSyncTree_","listen","eventQueue_","unlisten","repoServerTime","offset","offsetNode","getTime","Date","repoGenerateServerValues","timestamp","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","taggedSnap","affectedPath","repoRerunTransactions","updateSnapshot","repoGetValue","cached","Promise","resolve","then","payload","withIndex","err","repoLog","reject","repoSetWithPriority","newVal","newPriority","newNodeUnresolved","resolveDeferredValueSnapshot","nextWriteId_","put","errorReason","success","warn","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","DeferredValueProvider","resolvedOnDisconnectTree","onDisconnect_","resolved","repoOnDisconnectCancel","onDisconnectCancel","repoOnDisconnectSet","onDisconnectPut","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","onDisconnectMerge","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","interrupt","INTERRUPT_REASON","varArgs","prefix","id","callback","message","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","update","order","LUIDGenerator","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","validateFirebaseData","queueNode","transactionQueueTree_","nodeQueue","priorityForNode","isValidPriority","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","allRun","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","q","abortTransaction","MAX_TRANSACTION_RETRIES","currentNode","newDataNode","oldWriteId","newNodeResolved","transactionNode","front","transactionQueue","repoAggregateTransactionQueuesForNode","to","from","repoAbortTransactionsOnNode","lastSent","bind","validateNoPreviousOrderByCall","fnName","_orderByCalled","validateQueryEndpoints","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","MIN_NAME","getIndexStartName","startName","tooManyArgsError","wrongArgTypeError","MAX_NAME","getIndexEndName","endName","validateLimit","hasLimit","hasAnchoredLimit","ref","db","getModularInstance","_checkNotDeleted","_root","replace","validatePathString","argumentName","optional","ReferenceImpl","validateWritablePath","validateFirebaseDataArg","deferred","Deferred","wrapCallback","promise","addEventListener","cancelCallbackOrListenOptions","options","cancelCallback","onlyOnce","userCallback","onceCallback","dataSnapshot","previousChildName","container","context","callbackContext","CallbackContext","ValueEventRegistration","ChildEventRegistration","onValue","repoManagerDatabaseFromApp","app","authProvider","appCheckProvider","url","nodeAdmin","dbUrl","databaseURL","projectId","fatal","parsedUrl","parseRepoInfo","isEmulator","dbEmulatorHost","process","env","authTokenProvider","EmulatorTokenProvider","OWNER","FirebaseAuthTokenProvider","validateUrl","AppCheckTokenProvider","appRepos","repos","toURLString","Repo","useRestClient","Database","Object","defineProperty","_repoManagerDatabaseFromApp","_setSDKVersion","setSDKVersion","version","SDK_VERSION","connectDatabaseEmulator","port","_instanceStarted","_repoInternal","tokenProvider","mockUserToken","createMockUserToken","RepoInfo","webSocketOnly","persistenceKey","enableLogging","persistent","enableLogging$1","endAt","validateKey","QueryEndAtConstraint","endBefore","QueryEndBeforeConstraint","equalTo","QueryEqualToValueConstraint","DataSnapshot","getDatabase","_app","getApp","_getProvider","getImmediate","identifier","goOffline","goOnline","resume","increment","delta","limitToFirst","limit","Math","floor","QueryLimitToFirstConstraint","limitToLast","QueryLimitToLastConstraint","off","expCallback","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","onDisconnect","OnDisconnect","orderByChild","QueryOrderByChildConstraint","orderByKey","QueryOrderByKeyConstraint","orderByPriority","QueryOrderByPriorityConstraint","orderByValue","QueryOrderByValueConstraint","now","nextPushId","thennablePushRef","pushRef","catch","queryConstraints","queryImpl","constraint","_apply","refFromURL","parsedURL","runTransaction","_a","committed","promiseComplete","TransactionResult","serverTimestamp","SERVER_TIMESTAMP","setPriority","validatePriority","setWithPriority","startAfter","QueryStartAfterConstraint","startAt","QueryStartAtConstraint","validateFirebaseMergeDataArg","_validateWritablePath","_validatePathString","_TEST_ACCESS_hijackHash","_TEST_ACCESS_forceRestClient","_ReferenceImpl","_QueryParams","_QueryImpl","QueryConstraint","_component","_logger","DOMStorageWrapper","constructor","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","jsonEval","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","sha1","str","utf8Bytes","stringToByteArray","Sha1","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","arg","isArray","apply","firstLog_","logger_","logLevel","LogLevel","VERBOSE","logWrapper","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","isNodeSdk","document","readyState","called","wrappedFn","body","attachEvent","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","keys","k","splitStringBySize","segsize","len","dataSegs","c","doubleToIEEE754String","v","f","Infinity","abs","pow","ln","min","LN2","bias","round","fbits","bits","ebits","reverse","hexByteString","hexByte","parseInt","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","INTEGER_32_MIN","INTEGER_32_MAX","stack","setTimeoutNonBlocking","time","timeout","appName_","appCheck","getToken","forceRefresh","addTokenListener","notifyForInvalidToken","firebaseOptions_","authProvider_","auth_","onInit","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","accessToken","FORGE_DOMAIN_RE","_host","_domain","isCacheableHost","newHost","protocol","counters_","incrementCounter","amount","deepCopy","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesReceived","bytesSent","everConnected_","log_","urlFn","this.urlFn","open","onMessage","curSegmentNum","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","FIREBASE_LONGPOLL_START_PARAM","password","FIREBASE_LONGPOLL_CLOSE_COMMAND","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","PROTOCOL_VERSION","location","hostname","FORGE_REF","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_PAYLOAD_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","myIFrame","createIFrame_","script","domain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","MAX_URL_DATA_SIZE","nextSeg","d","SEG_HEADER_SIZE","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","serial","add","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","newScript.onreadystatechange","rstate","parentNode","onerror","newScript.onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","frames","keepaliveTimer","totalFrames","connectionURL_","headers","platform","device","proxy","origin","mySock","onopen","this.mySock.onopen","onclose","this.mySock.onclose","onmessage","m","this.mySock.onmessage","handleIncomingFrame","this.mySock.onerror","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","oldAndroidRegex","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","WEBSOCKET_MAX_FRAME_SIZE","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","transport","ALL_TRANSPORTS","initialTransport","upgradeTransport","Connection","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","rx_","tx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","BYTES_RECEIVED_HEALTHY_OVERRIDE","BYTES_SENT_HEALTHY_OVERRIDE","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","msg","t","tryCleanupConnection","onSecondaryControl_","controlData","MESSAGE_TYPE","cmd","SWITCH_ACK","upgradeIfSecondaryHealthy_","CONTROL_RESET","CONTROL_PONG","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","PING","END_TRANSMISSION","onControl_","onDataMessage_","onPrimaryResponse_","MESSAGE_DATA","SERVER_HELLO","onHandshake_","CONTROL_SHUTDOWN","onConnectionShutdown_","onReset_","CONTROL_ERROR","sendPingOnPrimaryIfNecessary_","handshake","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","listeners","on","validateEventType_","getInitialEvent","find","et","OnlineMonitor","online_","isMobileCordova","getInstance","currentlyOnline","pathOrString","copyTo","ValidationPath","max","stringLength","VisibilityMonitor","hidden","visibilityChange","visible_","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingGetCount_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","RECONNECT_MIN_DELAY","maxReconnectDelay_","RECONNECT_MAX_DELAY_DEFAULT","establishConnectionTimer_","securityDebugCallback_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAppCheckTokenCount_","invalidAuthTokenCount_","firstConnection_","lastConnectionEstablishedTime_","lastConnectionAttemptTime_","onVisible_","onOnline_","onResponse","curReqNum","initConnection_","request","p","_queryObject","outstandingGet","GET_CONNECT_TIMEOUT","sendGet_","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","RECONNECT_MAX_DELAY_FOR_ADMINS","tryAppCheck","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","RECONNECT_DELAY_RESET_TIMEOUT","timeSinceLastConnectAttempt","reconnectDelay","RECONNECT_DELAY_MULTIPLIER","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","all","SERVER_KILL_INTERRUPT_REASON","serverTimeOffset","normalizedPathString","statusCode","explanation","INVALID_TOKEN_THRESHOLD","console","clientName","isReactNative","Wrap","Index","oldNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","isDefinedOn","maxPost","makePost","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","count","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","MAX_NODE$2","priorityHashText","validatePriorityNode","priorityNode","__childrenNodeConstructor","value_","priorityNode_","lazyHash_","newPriorityNode","numChildren","exportFormat","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","nodeFromJSON$1","MAX_NODE$1","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","high","middle","root","buildFrom12Array","base12","buildPennant","chunkSize","pennant","isOne","_defaultIndexMap","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","children_","indexMap_","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","array","childHash","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","indexPath_","extractChild","aChild","bChild","valueNode","ValueIndex","lastPushTime","lastRandChars","duplicateTime","timeStampChars","PUSH_CHARS","charAt","successor","MIN_PUSH_CHAR","keyAsInt","MAX_KEY_LEN","MAX_PUSH_CHAR","sourcePlusOne","repeat","IndexedFilter","optChangeAccumulator","trackChildChange","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","getLimit","reverse_","fullLimitUpdateChild_","inRange","indexCompare","foundStartPost","changeAccumulator","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","QueryParams","endBeforeSet_","startAfterSet_","hasStartAfter","hasEndBefore","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","xhr.onreadystatechange","responseText","rootNode_","newSnapshotNode","StatsListener","collection_","last_","newStats","stat","collection","statsToReport_","statsListener_","FIRST_STATS_MIN_TIME","reportStats_","reportedStats","haveStatsToReport","REPORT_STATS_INTERVAL","node_","fullyInitialized_","filtered_","EventGenerator","emptyChildrenSingleton","EmptyChildren","findRootMostMatchingPathAndValue","childExistingPathAndValue","fullPath","toSet","newTree","fold_","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","changeMap","oldChange","oldType","NoCompleteChildSource_","writes_","optCompleteServerCache_","completeServerData","toIterate","nodes","initialViewCache","indexFilter","initialServerCache","initialEventCache","ExistingValueProvider","syncTree_","path_","JSON","existingNode","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","errorPrefix","MAX_LEAF_SIZE_","hasDotValue","hasActualChild","last","validateFirebaseMergePaths","mergePaths","curPath","prevPath","errorPrefix$1","EventQueue","dataURL","subdomain","scheme","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","results","queryString","segment","kv","hostWithoutPort","dotInd","DataEvent","snapshot","getEventType","exportVal","CancelEvent","snapshotCallback","expDataSnapshot","call","onCancel","hasCancelCallback","cancel","QueryImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","parentPath","_node","_index","childRef","exists","hasChildren","eventToCheck","_value","_limit","newLimit","parsedPath","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","_rootInternal","_delete","appName","apiName","prototype","simpleListen","PersistentConnection.prototype.simpleListen","echo","PersistentConnection.prototype.echo","onEcho","hijackHash","newHash","oldPut","PersistentConnection.prototype.put","forceRestClient","registerDatabase","variant","_registerComponent","setMultipleInstances","Component","getProvider","registerVersion"]
}
