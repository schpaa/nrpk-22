{"version":3,"sources":["cljc/java_time/local_time.cljs"],"mappings":"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","names":["cljc.java-time.local-time/max","cljc.java_time.local_time.goog$module$goog$object.get","java.time/LocalTime","cljc.java-time.local-time/noon","cljc.java-time.local-time/midnight","cljc.java-time.local-time/min","cljc.java-time.local-time/minus-minutes","this14288","long14289","cljc.java-time.local-time/truncated-to","this14290","java-time-temporal-TemporalUnit14291","cljc.java-time.local-time/range","this14292","java-time-temporal-TemporalField14293","cljc.java-time.local-time/get-hour","this14294","cljc.java-time.local-time/at-offset","this14295","java-time-ZoneOffset14296","cljc.java-time.local-time/minus-hours","this14297","long14298","var_args","G__74201","cljc.java-time.local-time/of","js/Error","int14299","int14300","int14301","cljs.core.js_invoke","int14302","int14303","int14304","int14305","int14306","int14307","cljc.java-time.local-time/get-nano","this14308","cljc.java-time.local-time/minus-seconds","this14309","long14310","cljc.java-time.local-time/get-second","this14311","cljc.java-time.local-time/plus-nanos","this14312","long14313","G__74207","cljc.java-time.local-time/plus","this14314","java-time-temporal-TemporalAmount14315","this14316","long14317","java-time-temporal-TemporalUnit14318","cljc.java-time.local-time/with-hour","this14319","int14320","cljc.java-time.local-time/with-minute","this14321","int14322","cljc.java-time.local-time/plus-minutes","this14323","long14324","cljc.java-time.local-time/query","this14325","java-time-temporal-TemporalQuery14326","cljc.java-time.local-time/at-date","this14327","java-time-LocalDate14328","cljc.java-time.local-time/to-string","this14329","cljc.java-time.local-time/is-before","this14330","java-time-LocalTime14331","G__74222","cljc.java-time.local-time/minus","this14332","long14333","java-time-temporal-TemporalUnit14334","this14335","java-time-temporal-TemporalAmount14336","cljc.java-time.local-time/plus-hours","this14337","long14338","cljc.java-time.local-time/to-second-of-day","this14339","cljc.java-time.local-time/get-long","this14340","java-time-temporal-TemporalField14341","cljc.java-time.local-time/with-nano","this14342","int14343","cljc.java-time.local-time/until","this14344","java-time-temporal-Temporal14345","java-time-temporal-TemporalUnit14346","cljc.java-time.local-time/of-nano-of-day","long14347","cljc.java-time.local-time/from","java-time-temporal-TemporalAccessor14348","cljc.java-time.local-time/is-after","this14349","java-time-LocalTime14350","cljc.java-time.local-time/minus-nanos","this14351","long14352","cljc.java-time.local-time/is-supported","this14353","G__14354","G__74233","cljc.java-time.local-time/parse","java-lang-CharSequence14355","java-lang-CharSequence14356","java-time-format-DateTimeFormatter14357","cljc.java-time.local-time/with-second","this14358","int14359","cljc.java-time.local-time/get-minute","this14360","cljc.java-time.local-time/hash-code","this14361","cljc.java-time.local-time/adjust-into","this14362","java-time-temporal-Temporal14363","G__74241","cljc.java-time.local-time/with","this14364","java-time-temporal-TemporalAdjuster14365","this14366","java-time-temporal-TemporalField14367","long14368","G__74245","cljc.java-time.local-time/now","cljs.core/js-invoke","G__14370","cljc.java-time.local-time/compare-to","this14371","java-time-LocalTime14372","cljc.java-time.local-time/to-nano-of-day","this14373","cljc.java-time.local-time/plus-seconds","this14374","long14375","cljc.java-time.local-time/get","this14376","java-time-temporal-TemporalField14377","cljc.java-time.local-time/of-second-of-day","long14378","cljc.java-time.local-time/equals","this14379","java-lang-Object14380","cljc.java-time.local-time/format","this14381","java-time-format-DateTimeFormatter14382"],"sourcesContent":["(ns cljc.java-time.local-time (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [LocalTime]]))\n(def max (goog.object/get java.time.LocalTime \"MAX\"))\n(def noon (goog.object/get java.time.LocalTime \"NOON\"))\n(def midnight (goog.object/get java.time.LocalTime \"MIDNIGHT\"))\n(def min (goog.object/get java.time.LocalTime \"MIN\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14288 ^long long14289] (.minusMinutes this14288 long14289)))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14290 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14291] (.truncatedTo this14290 java-time-temporal-TemporalUnit14291)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.LocalTime this14292 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14293] (.range this14292 java-time-temporal-TemporalField14293)))\n(clojure.core/defn get-hour {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14294] (.hour this14294)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.LocalTime\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetTime [^js/JSJoda.LocalTime this14295 ^js/JSJoda.ZoneOffset java-time-ZoneOffset14296] (.atOffset this14295 java-time-ZoneOffset14296)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14297 ^long long14298] (.minusHours this14297 long14298)))\n(clojure.core/defn of {:arglists (quote ([\"int\" \"int\" \"int\"] [\"int\" \"int\" \"int\" \"int\"] [\"int\" \"int\"]))} (^js/JSJoda.LocalTime [^int int14299 ^int int14300 ^int int14301] (js-invoke java.time.LocalTime \"of\" int14299 int14300 int14301)) (^js/JSJoda.LocalTime [^int int14302 ^int int14303 ^int int14304 ^int int14305] (js-invoke java.time.LocalTime \"of\" int14302 int14303 int14304 int14305)) (^js/JSJoda.LocalTime [^int int14306 ^int int14307] (js-invoke java.time.LocalTime \"of\" int14306 int14307)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14308] (.nano this14308)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14309 ^long long14310] (.minusSeconds this14309 long14310)))\n(clojure.core/defn get-second {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14311] (.second this14311)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14312 ^long long14313] (.plusNanos this14312 long14313)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"] [\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14314 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14315] (.plus this14314 java-time-temporal-TemporalAmount14315)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14316 ^long long14317 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14318] (.plus this14316 long14317 java-time-temporal-TemporalUnit14318)))\n(clojure.core/defn with-hour {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14319 ^int int14320] (.withHour this14319 int14320)))\n(clojure.core/defn with-minute {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14321 ^int int14322] (.withMinute this14321 int14322)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14323 ^long long14324] (.plusMinutes this14323 long14324)))\n(clojure.core/defn query {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.LocalTime this14325 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery14326] (.query this14325 java-time-temporal-TemporalQuery14326)))\n(clojure.core/defn at-date {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalDate\"]))} (^js/JSJoda.LocalDateTime [^js/JSJoda.LocalTime this14327 ^js/JSJoda.LocalDate java-time-LocalDate14328] (.atDate this14327 java-time-LocalDate14328)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.LocalTime\"]))} (^java.lang.String [^js/JSJoda.LocalTime this14329] (.toString this14329)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this14330 ^js/JSJoda.LocalTime java-time-LocalTime14331] (.isBefore this14330 java-time-LocalTime14331)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14332 ^long long14333 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14334] (.minus this14332 long14333 java-time-temporal-TemporalUnit14334)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14335 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14336] (.minus this14335 java-time-temporal-TemporalAmount14336)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14337 ^long long14338] (.plusHours this14337 long14338)))\n(clojure.core/defn to-second-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14339] (.toSecondOfDay this14339)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.LocalTime this14340 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14341] (.getLong this14340 java-time-temporal-TemporalField14341)))\n(clojure.core/defn with-nano {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14342 ^int int14343] (.withNano this14342 int14343)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.LocalTime this14344 ^js/JSJoda.Temporal java-time-temporal-Temporal14345 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14346] (.until this14344 java-time-temporal-Temporal14345 java-time-temporal-TemporalUnit14346)))\n(clojure.core/defn of-nano-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long14347] (js-invoke java.time.LocalTime \"ofNanoOfDay\" long14347)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor14348] (js-invoke java.time.LocalTime \"from\" java-time-temporal-TemporalAccessor14348)))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this14349 ^js/JSJoda.LocalTime java-time-LocalTime14350] (.isAfter this14349 java-time-LocalTime14350)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14351 ^long long14352] (.minusNanos this14351 long14352)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^boolean [this14353 G__14354] (.isSupported ^js/JSJoda.LocalTime this14353 G__14354)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"] [\"java.lang.CharSequence\" \"java.time.format.DateTimeFormatter\"]))} (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence14355] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence14355)) (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence14356 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter14357] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence14356 java-time-format-DateTimeFormatter14357)))\n(clojure.core/defn with-second {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14358 ^int int14359] (.withSecond this14358 int14359)))\n(clojure.core/defn get-minute {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14360] (.minute this14360)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14361] (.hashCode this14361)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.LocalTime this14362 ^js/JSJoda.Temporal java-time-temporal-Temporal14363] (.adjustInto this14362 java-time-temporal-Temporal14363)))\n(clojure.core/defn with {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalAdjuster\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalField\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14364 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster14365] (.with this14364 java-time-temporal-TemporalAdjuster14365)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14366 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14367 ^long long14368] (.with this14366 java-time-temporal-TemporalField14367 long14368)))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.ZoneId\"] [\"java.time.Clock\"]))} (^js/JSJoda.LocalTime [] (js-invoke java.time.LocalTime \"now\")) (^js/JSJoda.LocalTime [G__14370] (js-invoke java.time.LocalTime \"now\" G__14370)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14371 ^js/JSJoda.LocalTime java-time-LocalTime14372] (.compareTo this14371 java-time-LocalTime14372)))\n(clojure.core/defn to-nano-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^long [^js/JSJoda.LocalTime this14373] (.toNanoOfDay this14373)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14374 ^long long14375] (.plusSeconds this14374 long14375)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.LocalTime this14376 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14377] (.get this14376 java-time-temporal-TemporalField14377)))\n(clojure.core/defn of-second-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long14378] (js-invoke java.time.LocalTime \"ofSecondOfDay\" long14378)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.LocalTime\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.LocalTime this14379 ^java.lang.Object java-lang-Object14380] (.equals this14379 java-lang-Object14380)))\n(clojure.core/defn format {:arglists (quote ([\"java.time.LocalTime\" \"java.time.format.DateTimeFormatter\"]))} (^java.lang.String [^js/JSJoda.LocalTime this14381 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter14382] (.format this14381 java-time-format-DateTimeFormatter14382)))\n"]}