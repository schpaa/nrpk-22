{"version":3,"sources":["cljc/java_time/duration.cljs"],"mappings":";;;;AACA,AAAKA,+BAAK,uEAAA,vEAACC,oDAAgBC;AAC3B,wCAAA,xCAAmBC,wFAA4GC,UAAgBC;AAA/I,AAA0J,OAAeD,uBAAUC;;AACnL,mCAAA,nCAAmBC,8EAAkFC;AAArG,AAAgH,OAAUA;;AAC1H,uCAAA,vCAAmBC,sFAA2GC,UAAgBC;AAA9I,AAAyJ,OAAcD,sBAAUC;;AACjL,sCAAA,tCAAmBC,oFAA0GC,UAAgBC;AAA7I,AAAwJ,OAAaD,qBAAUC;;AAC/K,kCAAA,lCAAmBC,4EAAmEC;AAAtF,AAAiG,mFAAA,5EAACC,yDAAUd,8EAA4Ba;;AACxI,sCAAA,tCAAmBE,oFAAwFC;AAA3G,AAAsH,OAAaA;;AACnI,6BAAA,7BAAmBC,kEAAgGC,UAAkCC;AAArJ,AAA2L,mFAAA,5EAACL,yDAAUd,0EAAwBkB,UAAUC;;AACxO,kCAAA,lCAAmBC,4EAAoFC;AAAvG,AAAkH,OAASA;;AAC3H,wCAAA,xCAAmBC,wFAA4GC,UAAgBC;AAA/I,AAA0J,OAAeD,uBAAUC;;AACnL,qCAAA,rCAAmBC,kFAAwGC,UAAeC;AAA1I,AAAoJ,OAAYD,oBAAUC;;AAC1K,oCAAA,pCAAmBC,gFAA6FC;AAAhH,AAA2H,OAAQA;;AACnI,mCAAA,nCAAmBC,8EAAiFC;AAApG,AAA+G,OAAOA;;AACtH,sCAAA,tCAAmBC,oFAA0GC,UAAgBC;AAA7I,AAAwJ,OAAaD,qBAAUC;;AAC/K,qCAAA,rCAAmBC,kFAAoFC;AAAvG,AAAkH,OAAYA;;AAC9H,wCAAA,xCAAmBC,wFAA4GC,UAAgBC;AAA/I,AAA0J,OAAeD,uBAAUC;;AACnL,qCAAA,rCAAmBC,kFAAyGC,UAAgBC;AAA5I,AAAuJ,OAAYD,oBAAUC;;AAC7K,AAAA,+BAAA,uCAAAC,tEAAmBE;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,6DAAA,7DAAmBD,wEAAiLE,UAAgBC,UAAkCC;AAAtP,AAA4R,OAAOF,eAAUC,UAAUC;;;AAAvT,CAAA,6DAAA,7DAAmBJ,wEAAqXK,UAA8BC;AAAta,AAA+b,OAAOD,eAAUC;;;AAAhd,CAAA,uDAAA,vDAAmBN;;AAAnB,AACA,qCAAA,rCAAmBO,kFAAyGC,UAAgBC;AAA5I,AAAuJ,OAAYD,oBAAUC;;AAC7K,uCAAA,vCAAmBC,sFAA2GC,UAAgBC;AAA9I,AAAyJ,OAAcD,sBAAUC;;AACjL,oCAAA,pCAAmBC,gFAA+FC;AAAlH,AAA6H,OAAWA;;AACxI,AAAA,gCAAA,wCAAAhB,xEAAmBkB;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,4DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,4DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAf,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,8DAAA,9DAAmBe,yEAAkLC,UAAgBC,UAAkCC;AAAvP,AAA6R,OAAQF,gBAAUC,UAAUC;;;AAAzT,CAAA,8DAAA,9DAAmBH,yEAAuXI,UAA8BC;AAAxa,AAAic,OAAQD,gBAAUC;;;AAAnd,CAAA,wDAAA,xDAAmBL;;AAAnB,AACA,iCAAA,jCAAmBM,0EAA4HC,UAA8BC;AAA7K,AAA+M,OAAQD,gBAAUC;;AACjO,qCAAA,rCAAmBC,kFAAyGC,UAAgBC;AAA5I,AAAuJ,OAAYD,oBAAUC;;AAC7K,oCAAA,pCAAmBC,gFAAwGC,UAAgBC;AAA3I,AAAsJ,OAAWD,mBAAUC;;AAC3K,mCAAA,nCAAmBC,8EAAoEC;AAAvF,AAAkG,mFAAA,5EAAC/D,yDAAUd,+EAA6B6E;;AAC1I,oCAAA,pCAAmBC,gFAAmFC;AAAtG,AAAiH,OAAWA;;AAC5H,mCAAA,nCAAmBC,8EAAkFC;AAArG,AAAgH,OAAUA;;AAC1H,mCAAA,nCAAmBC,8EAAoEC;AAAvF,AAAkG,mFAAA,5EAACrE,yDAAUd,+EAA6BmF;;AAC1I,oCAAA,pCAAmBC,gFAAqEC;AAAxF,AAAmG,mFAAA,5EAACvE,yDAAUd,gFAA8BqF;;AAC5I,kCAAA,lCAAmBC,4EAA+FC;AAAlH,AAA6H,OAAUA;;AACvI,8BAAA,9BAAmBC,oEAA2FC;AAA9G,AAAyH,OAAMA;;AAC/H,kCAAA,lCAAmBC,4EAAsIC,iCAAqDC;AAA9M,AAAgP,mFAAA,5EAAC9E,yDAAUd,+EAA6B2F,iCAAiCC;;AACzT,sCAAA,tCAAmBC,oFAAqFC;AAAxG,AAAmH,OAAUA;;AAC7H,+BAAA,/BAAmBC,sEAAiHC;AAApI,AAA4K,mFAAA,5EAAClF,yDAAUd,4EAA0BgG;;AACjN,sCAAA,tCAAmBC,oFAA0GC,UAAgBC;AAA7I,AAAwJ,OAAaD,qBAAUC;;AAC/K,gCAAA,hCAAmBC,wEAAqGC;AAAxH,AAAqJ,mFAAA,5EAACvF,yDAAUd,6EAA2BqG;;AAC3L,oCAAA,pCAAmBC,gFAAkFC;AAArG,AAAgH,OAAWA;;AAC3H,uCAAA,vCAAmBC,sFAA2GC,UAAgBC;AAA9I,AAAyJ,OAAcD,sBAAUC;;AACjL,qCAAA,rCAAmBC,kFAAsEC;AAAzF,AAAoG,mFAAA,5EAAC9F,yDAAUd,iFAA+B4G;;AAC9I,wCAAA,xCAAmBC,wFAAmIC,UAA8BC;AAApL,AAAsN,OAAeD,uBAAUC;;AAC/O,qCAAA,rCAAmBC,kFAAwGC,UAA8BC;AAAzJ,AAAkL,OAAYD,oBAAUC;;AACxM,uCAAA,vCAAmBC,sFAA2GC,UAAgBC;AAA9I,AAAyJ,OAAcD,sBAAUC;;AACjL,8BAAA,9BAAmBC,oEAA+GC,UAAkCC;AAApK,AAA0M,OAAMD,cAAUC;;AAC1N,iCAAA,jCAAmBC,0EAAsGC,UAA4BC;AAArJ,AAA4K,OAASD,iBAAUC;;AAC/L,AAAA,qCAAA,6CAAAhF,lFAAmBkF;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAA/E,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mEAAA,nEAAmB+E,8EAAsFC,UAAgBC;AAAzH,AAAoI,mFAAA,5EAACjH,yDAAUd,iFAA+B8H,UAAUC;;;AAAxL,CAAA,mEAAA,nEAAmBF,8EAA6MG;AAAhO,AAA2O,mFAAA,5EAAClH,yDAAUd,iFAA+BgI;;;AAArR,CAAA,6DAAA,7DAAmBH;;AAAnB,AACA,qCAAA,rCAAmBI,kFAAyGC,UAAgBC;AAA5I,AAAuJ,OAAYD,oBAAUC;;AAC7K,kCAAA,lCAAmBC,4EAAiFC;AAApG,AAA+G,OAASA","names":["cljc.java-time.duration/zero","cljc.java_time.duration.goog$module$goog$object.get","java.time/Duration","cljc.java-time.duration/minus-minutes","this14637","long14638","cljc.java-time.duration/to-nanos","this14639","cljc.java-time.duration/minus-millis","this14640","long14641","cljc.java-time.duration/minus-hours","this14642","long14643","cljc.java-time.duration/of-days","long14644","cljs.core.js_invoke","cljc.java-time.duration/is-negative","this14645","cljc.java-time.duration/of","long14646","java-time-temporal-TemporalUnit14647","cljc.java-time.duration/is-zero","this14648","cljc.java-time.duration/multiplied-by","this14649","long14650","cljc.java-time.duration/with-nanos","this14651","int14652","cljc.java-time.duration/get-units","this14653","cljc.java-time.duration/get-nano","this14654","cljc.java-time.duration/plus-millis","this14655","long14656","cljc.java-time.duration/to-minutes","this14657","cljc.java-time.duration/minus-seconds","this14658","long14659","cljc.java-time.duration/plus-nanos","this14660","long14661","var_args","G__74370","cljc.java-time.duration/plus","js/Error","this14662","long14663","java-time-temporal-TemporalUnit14664","this14665","java-time-Duration14666","cljc.java-time.duration/divided-by","this14667","long14668","cljc.java-time.duration/plus-minutes","this14669","long14670","cljc.java-time.duration/to-string","this14671","G__74372","cljc.java-time.duration/minus","this14672","long14673","java-time-temporal-TemporalUnit14674","this14675","java-time-Duration14676","cljc.java-time.duration/add-to","this14677","java-time-temporal-Temporal14678","cljc.java-time.duration/plus-hours","this14679","long14680","cljc.java-time.duration/plus-days","this14681","long14682","cljc.java-time.duration/of-hours","long14683","cljc.java-time.duration/to-millis","this14684","cljc.java-time.duration/to-hours","this14685","cljc.java-time.duration/of-nanos","long14686","cljc.java-time.duration/of-millis","long14687","cljc.java-time.duration/negated","this14688","cljc.java-time.duration/abs","this14689","cljc.java-time.duration/between","java-time-temporal-Temporal14690","java-time-temporal-Temporal14691","cljc.java-time.duration/get-seconds","this14692","cljc.java-time.duration/from","java-time-temporal-TemporalAmount14693","cljc.java-time.duration/minus-nanos","this14694","long14695","cljc.java-time.duration/parse","java-lang-CharSequence14696","cljc.java-time.duration/hash-code","this14697","cljc.java-time.duration/with-seconds","this14698","long14699","cljc.java-time.duration/of-minutes","long14700","cljc.java-time.duration/subtract-from","this14701","java-time-temporal-Temporal14702","cljc.java-time.duration/compare-to","this14703","java-time-Duration14704","cljc.java-time.duration/plus-seconds","this14705","long14706","cljc.java-time.duration/get","this14707","java-time-temporal-TemporalUnit14708","cljc.java-time.duration/equals","this14709","java-lang-Object14710","G__74383","cljc.java-time.duration/of-seconds","long14711","long14712","long14713","cljc.java-time.duration/minus-days","this14714","long14715","cljc.java-time.duration/to-days","this14716"],"sourcesContent":["(ns cljc.java-time.duration (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [Duration]]))\n(def zero (goog.object/get java.time.Duration \"ZERO\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14637 ^long long14638] (.minusMinutes this14637 long14638)))\n(clojure.core/defn to-nanos {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14639] (.toNanos this14639)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14640 ^long long14641] (.minusMillis this14640 long14641)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14642 ^long long14643] (.minusHours this14642 long14643)))\n(clojure.core/defn of-days {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long14644] (js-invoke java.time.Duration \"ofDays\" long14644)))\n(clojure.core/defn is-negative {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this14645] (.isNegative this14645)))\n(clojure.core/defn of {:arglists (quote ([\"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^long long14646 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14647] (js-invoke java.time.Duration \"of\" long14646 java-time-temporal-TemporalUnit14647)))\n(clojure.core/defn is-zero {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this14648] (.isZero this14648)))\n(clojure.core/defn multiplied-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14649 ^long long14650] (.multipliedBy this14649 long14650)))\n(clojure.core/defn with-nanos {:arglists (quote ([\"java.time.Duration\" \"int\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14651 ^int int14652] (.withNanos this14651 int14652)))\n(clojure.core/defn get-units {:arglists (quote ([\"java.time.Duration\"]))} (^java.util.List [^js/JSJoda.Duration this14653] (.units this14653)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this14654] (.nano this14654)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14655 ^long long14656] (.plusMillis this14655 long14656)))\n(clojure.core/defn to-minutes {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14657] (.toMinutes this14657)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14658 ^long long14659] (.minusSeconds this14658 long14659)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14660 ^long long14661] (.plusNanos this14660 long14661)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.Duration\" \"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14662 ^long long14663 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14664] (.plus this14662 long14663 java-time-temporal-TemporalUnit14664)) (^js/JSJoda.Duration [^js/JSJoda.Duration this14665 ^js/JSJoda.Duration java-time-Duration14666] (.plus this14665 java-time-Duration14666)))\n(clojure.core/defn divided-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14667 ^long long14668] (.dividedBy this14667 long14668)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14669 ^long long14670] (.plusMinutes this14669 long14670)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Duration\"]))} (^java.lang.String [^js/JSJoda.Duration this14671] (.toString this14671)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.Duration\" \"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14672 ^long long14673 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14674] (.minus this14672 long14673 java-time-temporal-TemporalUnit14674)) (^js/JSJoda.Duration [^js/JSJoda.Duration this14675 ^js/JSJoda.Duration java-time-Duration14676] (.minus this14675 java-time-Duration14676)))\n(clojure.core/defn add-to {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this14677 ^js/JSJoda.Temporal java-time-temporal-Temporal14678] (.addTo this14677 java-time-temporal-Temporal14678)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14679 ^long long14680] (.plusHours this14679 long14680)))\n(clojure.core/defn plus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14681 ^long long14682] (.plusDays this14681 long14682)))\n(clojure.core/defn of-hours {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long14683] (js-invoke java.time.Duration \"ofHours\" long14683)))\n(clojure.core/defn to-millis {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14684] (.toMillis this14684)))\n(clojure.core/defn to-hours {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14685] (.toHours this14685)))\n(clojure.core/defn of-nanos {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long14686] (js-invoke java.time.Duration \"ofNanos\" long14686)))\n(clojure.core/defn of-millis {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long14687] (js-invoke java.time.Duration \"ofMillis\" long14687)))\n(clojure.core/defn negated {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14688] (.negated this14688)))\n(clojure.core/defn abs {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14689] (.abs this14689)))\n(clojure.core/defn between {:arglists (quote ([\"java.time.temporal.Temporal\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Duration [^js/JSJoda.Temporal java-time-temporal-Temporal14690 ^js/JSJoda.Temporal java-time-temporal-Temporal14691] (js-invoke java.time.Duration \"between\" java-time-temporal-Temporal14690 java-time-temporal-Temporal14691)))\n(clojure.core/defn get-seconds {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14692] (.seconds this14692)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.Duration [^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14693] (js-invoke java.time.Duration \"from\" java-time-temporal-TemporalAmount14693)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14694 ^long long14695] (.minusNanos this14694 long14695)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Duration [^java.lang.CharSequence java-lang-CharSequence14696] (js-invoke java.time.Duration \"parse\" java-lang-CharSequence14696)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this14697] (.hashCode this14697)))\n(clojure.core/defn with-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14698 ^long long14699] (.withSeconds this14698 long14699)))\n(clojure.core/defn of-minutes {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long14700] (js-invoke java.time.Duration \"ofMinutes\" long14700)))\n(clojure.core/defn subtract-from {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this14701 ^js/JSJoda.Temporal java-time-temporal-Temporal14702] (.subtractFrom this14701 java-time-temporal-Temporal14702)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this14703 ^js/JSJoda.Duration java-time-Duration14704] (.compareTo this14703 java-time-Duration14704)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14705 ^long long14706] (.plusSeconds this14705 long14706)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Duration this14707 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14708] (.get this14707 java-time-temporal-TemporalUnit14708)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Duration\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Duration this14709 ^java.lang.Object java-lang-Object14710] (.equals this14709 java-lang-Object14710)))\n(clojure.core/defn of-seconds {:arglists (quote ([\"long\" \"long\"] [\"long\"]))} (^js/JSJoda.Duration [^long long14711 ^long long14712] (js-invoke java.time.Duration \"ofSeconds\" long14711 long14712)) (^js/JSJoda.Duration [^long long14713] (js-invoke java.time.Duration \"ofSeconds\" long14713)))\n(clojure.core/defn minus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this14714 ^long long14715] (.minusDays this14714 long14715)))\n(clojure.core/defn to-days {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this14716] (.toDays this14716)))\n"]}