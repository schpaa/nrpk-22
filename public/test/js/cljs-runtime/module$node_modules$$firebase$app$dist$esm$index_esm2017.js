shadow$provide.module$node_modules$$firebase$app$dist$esm$index_esm2017=function(global,require,module,exports){function _addComponent(app,component){try{app.container.addComponent(component)}catch(e){logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`,e)}}function _registerComponent(component){const componentName=component.name;if(_components.has(componentName))return logger.debug(`There were multiple attempts to register component ${componentName}.`),!1;_components.set(componentName,
component);for(const app of _apps.values())_addComponent(app,component);return!0}function _getProvider(app,name){const heartbeatController=app.container.getProvider("heartbeat").getImmediate({optional:!0});heartbeatController&&void heartbeatController.triggerHeartbeat();return app.container.getProvider(name)}function registerVersion(libraryKeyOrName,version,variant){var _a;let library=null!==(_a=PLATFORM_LOG_STRING[libraryKeyOrName])&&void 0!==_a?_a:libraryKeyOrName;variant&&(library+=`-${variant}`);
libraryKeyOrName=library.match(/\s|\//);variant=version.match(/\s|\//);libraryKeyOrName||variant?(_a=[`Unable to register library "${library}" with version "${version}":`],libraryKeyOrName&&_a.push(`library name "${library}" contains illegal characters (whitespace or "/")`),libraryKeyOrName&&variant&&_a.push("and"),variant&&_a.push(`version name "${version}" contains illegal characters (whitespace or "/")`),logger.warn(_a.join(" "))):_registerComponent(new _component.Component(`${library}-version`,
()=>({library,version}),"VERSION"))}function getDbPromise(){dbPromise||(dbPromise=(0,_util.openDB)("firebase-heartbeat-database",1,(db,oldVersion)=>{switch(oldVersion){case 0:db.createObjectStore("firebase-heartbeat-store")}}).catch(e=>{throw ERROR_FACTORY.create("storage-open",{originalErrorMessage:e.message});}));return dbPromise}function readHeartbeatsFromIndexedDB(app){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{return(yield getDbPromise()).transaction("firebase-heartbeat-store").objectStore("firebase-heartbeat-store").get(`${app.name}!${app.options.appId}`)}catch(e){throw ERROR_FACTORY.create("storage-get",
{originalErrorMessage:e.message});}})}function writeHeartbeatsToIndexedDB(app,heartbeatObject){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){try{const tx=(yield getDbPromise()).transaction("firebase-heartbeat-store","readwrite");yield tx.objectStore("firebase-heartbeat-store").put(heartbeatObject,`${app.name}!${app.options.appId}`);return tx.complete}catch(e){throw ERROR_FACTORY.create("storage-set",{originalErrorMessage:e.message});}})}function extractHeartbeatsForHeader(heartbeatsCache,
maxSize=1024){const heartbeatsToSend=[];let unsentEntries=heartbeatsCache.slice();for(const singleDateHeartbeat of heartbeatsCache){if(heartbeatsCache=heartbeatsToSend.find(hb=>hb.agent===singleDateHeartbeat.agent)){if(heartbeatsCache.dates.push(singleDateHeartbeat.date),countBytes(heartbeatsToSend)>maxSize){heartbeatsCache.dates.pop();break}}else if(heartbeatsToSend.push({agent:singleDateHeartbeat.agent,dates:[singleDateHeartbeat.date]}),countBytes(heartbeatsToSend)>maxSize){heartbeatsToSend.pop();
break}unsentEntries=unsentEntries.slice(1)}return{heartbeatsToSend,unsentEntries}}function countBytes(heartbeatsCache){return(0,_util.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:heartbeatsCache})).length}Object.defineProperty(exports,"__esModule",{value:!0});exports._addComponent=_addComponent;exports._addOrOverwriteComponent=function(app,component){app.container.addOrOverwriteComponent(component)};exports._clearComponents=function(){_components.clear()};exports._getProvider=
_getProvider;exports._registerComponent=_registerComponent;exports._removeServiceInstance=function(app,name,instanceIdentifier="[DEFAULT]"){_getProvider(app,name).clearInstance(instanceIdentifier)};exports.deleteApp=function(app){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const name=app.name;_apps.has(name)&&(_apps.delete(name),yield Promise.all(app.container.getProviders().map(provider=>provider.delete())),app.isDeleted=!0)})};exports.getApp=function(name="[DEFAULT]"){const app=
_apps.get(name);if(!app)throw ERROR_FACTORY.create("no-app",{appName:name});return app};exports.getApps=function(){return Array.from(_apps.values())};exports.initializeApp=function(options,rawConfig={}){"object"!==typeof rawConfig&&(rawConfig={name:rawConfig});const config=Object.assign({name:"[DEFAULT]",automaticDataCollectionEnabled:!1},rawConfig);rawConfig=config.name;if("string"!==typeof rawConfig||!rawConfig)throw ERROR_FACTORY.create("bad-app-name",{appName:String(rawConfig)});var existingApp=
_apps.get(rawConfig);if(existingApp){if((0,_util.deepEqual)(options,existingApp.options)&&(0,_util.deepEqual)(config,existingApp.config))return existingApp;throw ERROR_FACTORY.create("duplicate-app",{appName:rawConfig});}existingApp=new _component.ComponentContainer(rawConfig);for(const component of _components.values())existingApp.addComponent(component);options=new FirebaseAppImpl(options,config,existingApp);_apps.set(rawConfig,options);return options};exports.onLog=function(logCallback,options){if(null!==
logCallback&&"function"!==typeof logCallback)throw ERROR_FACTORY.create("invalid-log-argument");(0,_logger.setUserLogHandler)(logCallback,options)};exports.registerVersion=registerVersion;exports.setLogLevel=function(logLevel){(0,_logger.setLogLevel)(logLevel)};Object.defineProperty(exports,"FirebaseError",{enumerable:!0,get:function(){return _util.FirebaseError}});exports._components=exports._apps=exports._DEFAULT_ENTRY_NAME=exports.SDK_VERSION=void 0;var _component=require("module$node_modules$$firebase$component$dist$esm$index_esm2017"),
_logger=require("module$node_modules$$firebase$logger$dist$index_cjs"),_util=require("module$node_modules$$firebase$util$dist$index_esm2017");class PlatformLoggerServiceImpl{constructor(container){this.container=container}getPlatformInfoString(){return this.container.getProviders().map(provider=>{const component=provider.getComponent();return"VERSION"===(null===component||void 0===component?void 0:component.type)?(provider=provider.getImmediate(),`${provider.library}/${provider.version}`):null}).filter(logString=>
logString).join(" ")}}const logger=new _logger.Logger("@firebase/app");exports._DEFAULT_ENTRY_NAME="[DEFAULT]";const PLATFORM_LOG_STRING={["@firebase/app"]:"fire-core",["@firebase/app-compat"]:"fire-core-compat",["@firebase/analytics"]:"fire-analytics",["@firebase/analytics-compat"]:"fire-analytics-compat",["@firebase/app-check"]:"fire-app-check",["@firebase/app-check-compat"]:"fire-app-check-compat",["@firebase/auth"]:"fire-auth",["@firebase/auth-compat"]:"fire-auth-compat",["@firebase/database"]:"fire-rtdb",
["@firebase/database-compat"]:"fire-rtdb-compat",["@firebase/functions"]:"fire-fn",["@firebase/functions-compat"]:"fire-fn-compat",["@firebase/installations"]:"fire-iid",["@firebase/installations-compat"]:"fire-iid-compat",["@firebase/messaging"]:"fire-fcm",["@firebase/messaging-compat"]:"fire-fcm-compat",["@firebase/performance"]:"fire-perf",["@firebase/performance-compat"]:"fire-perf-compat",["@firebase/remote-config"]:"fire-rc",["@firebase/remote-config-compat"]:"fire-rc-compat",["@firebase/storage"]:"fire-gcs",
["@firebase/storage-compat"]:"fire-gcs-compat",["@firebase/firestore"]:"fire-fst",["@firebase/firestore-compat"]:"fire-fst-compat","fire-js":"fire-js",firebase:"fire-js-all"},_apps=new Map;exports._apps=_apps;const _components=new Map;exports._components=_components;const ERROR_FACTORY=new _util.ErrorFactory("app","Firebase",{["no-app"]:"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",["bad-app-name"]:"Illegal App name: '{$appName}",["duplicate-app"]:"Firebase App named '{$appName}' already exists with different options or config",
["app-deleted"]:"Firebase App named '{$appName}' already deleted",["invalid-app-argument"]:"firebase.{$appName}() takes either no argument or a Firebase App instance.",["invalid-log-argument"]:"First argument to `onLog` must be null or a function.",["storage-open"]:"Error thrown when opening storage. Original error: {$originalErrorMessage}.",["storage-get"]:"Error thrown when reading from storage. Original error: {$originalErrorMessage}.",["storage-set"]:"Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
["storage-delete"]:"Error thrown when deleting from storage. Original error: {$originalErrorMessage}."});class FirebaseAppImpl{constructor(options,config,container){this._isDeleted=!1;this._options=Object.assign({},options);this._config=Object.assign({},config);this._name=config.name;this._automaticDataCollectionEnabled=config.automaticDataCollectionEnabled;this._container=container;this.container.addComponent(new _component.Component("app",()=>this,"PUBLIC"))}get automaticDataCollectionEnabled(){this.checkDestroyed();
return this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(val){this.checkDestroyed();this._automaticDataCollectionEnabled=val}get name(){this.checkDestroyed();return this._name}get options(){this.checkDestroyed();return this._options}get config(){this.checkDestroyed();return this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(val){this._isDeleted=val}checkDestroyed(){if(this.isDeleted)throw ERROR_FACTORY.create("app-deleted",
{appName:this._name});}}exports.SDK_VERSION="9.6.11";let dbPromise=null;class HeartbeatServiceImpl{constructor(container){this.container=container;this._heartbeatsCache=null;container=this.container.getProvider("app").getImmediate();this._storage=new HeartbeatStorageImpl(container);this._heartbeatsCachePromise=this._storage.read().then(result=>this._heartbeatsCache=result)}triggerHeartbeat(){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const agent=
$jscomp$async$this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),date=(new Date).toISOString().substring(0,10);null===$jscomp$async$this._heartbeatsCache&&($jscomp$async$this._heartbeatsCache=yield $jscomp$async$this._heartbeatsCachePromise);if($jscomp$async$this._heartbeatsCache.lastSentHeartbeatDate!==date&&!$jscomp$async$this._heartbeatsCache.heartbeats.some(singleDateHeartbeat=>singleDateHeartbeat.date===date))return $jscomp$async$this._heartbeatsCache.heartbeats.push({date,
agent}),$jscomp$async$this._heartbeatsCache.heartbeats=$jscomp$async$this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat=>{singleDateHeartbeat=(new Date(singleDateHeartbeat.date)).valueOf();return 2592E6>=Date.now()-singleDateHeartbeat}),$jscomp$async$this._storage.overwrite($jscomp$async$this._heartbeatsCache)})}getHeartbeatsHeader(){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){null===$jscomp$async$this._heartbeatsCache&&(yield $jscomp$async$this._heartbeatsCachePromise);
if(null===$jscomp$async$this._heartbeatsCache||0===$jscomp$async$this._heartbeatsCache.heartbeats.length)return"";const date=(new Date).toISOString().substring(0,10),{heartbeatsToSend,unsentEntries}=extractHeartbeatsForHeader($jscomp$async$this._heartbeatsCache.heartbeats),headerString=(0,_util.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:heartbeatsToSend}));$jscomp$async$this._heartbeatsCache.lastSentHeartbeatDate=date;0<unsentEntries.length?($jscomp$async$this._heartbeatsCache.heartbeats=
unsentEntries,yield $jscomp$async$this._storage.overwrite($jscomp$async$this._heartbeatsCache)):($jscomp$async$this._heartbeatsCache.heartbeats=[],void $jscomp$async$this._storage.overwrite($jscomp$async$this._heartbeatsCache));return headerString})}}class HeartbeatStorageImpl{constructor(app){this.app=app;this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}runIndexedDBEnvironmentCheck(){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){return(0,_util.isIndexedDBAvailable)()?
(0,_util.validateIndexedDBOpenable)().then(()=>!0).catch(()=>!1):!1})}read(){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){return(yield $jscomp$async$this._canUseIndexedDBPromise)?(yield readHeartbeatsFromIndexedDB($jscomp$async$this.app))||{heartbeats:[]}:{heartbeats:[]}})}overwrite(heartbeatsObject){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){var _a;if(yield $jscomp$async$this._canUseIndexedDBPromise){const existingHeartbeatsObject=
yield $jscomp$async$this.read();return writeHeartbeatsToIndexedDB($jscomp$async$this.app,{lastSentHeartbeatDate:null!==(_a=heartbeatsObject.lastSentHeartbeatDate)&&void 0!==_a?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:heartbeatsObject.heartbeats})}})}add(heartbeatsObject){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){var _a;if(yield $jscomp$async$this._canUseIndexedDBPromise){const existingHeartbeatsObject=yield $jscomp$async$this.read();
return writeHeartbeatsToIndexedDB($jscomp$async$this.app,{lastSentHeartbeatDate:null!==(_a=heartbeatsObject.lastSentHeartbeatDate)&&void 0!==_a?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:[...existingHeartbeatsObject.heartbeats,...heartbeatsObject.heartbeats]})}})}}(function(variant){_registerComponent(new _component.Component("platform-logger",container=>new PlatformLoggerServiceImpl(container),"PRIVATE"));_registerComponent(new _component.Component("heartbeat",container=>new HeartbeatServiceImpl(container),
"PRIVATE"));registerVersion("@firebase/app","0.7.21",variant);registerVersion("@firebase/app","0.7.21","esm2017");registerVersion("fire-js","")})("")}
//# sourceMappingURL=module$node_modules$$firebase$app$dist$esm$index_esm2017.js.map
