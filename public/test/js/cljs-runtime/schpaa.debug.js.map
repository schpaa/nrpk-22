{"version":3,"sources":["schpaa/debug.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","db","_","cljs.core.assoc","re_frame.core.reg_sub","schpaa.debug/ppr","x","*print-pprint-dispatch*-orig-val__354610","cljs.pprint/*print-pprint-dispatch*","*print-pprint-dispatch*-temp-val__354613","cljs.pprint/code-dispatch","sb__5687__auto__","goog.string/StringBuffer","*print-newline*-orig-val__354614","cljs.core/*print-newline*","*print-fn*-orig-val__354615","cljs.core/*print-fn*","*print-newline*-temp-val__354616","*print-fn*-temp-val__354617","x__5688__auto__","cljs.pprint.pprint","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","schpaa.debug/pre","seq354618","self__5752__auto__","cljs.core/seq","p","iter__5520__auto__","s__354620","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__5518__auto__","size__5519__auto__","cljs.core/count","b__354622","cljs.core/chunk-buffer","i__354621","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__354619","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","e","*print-newline*-orig-val__354623","*print-fn*-orig-val__354624","*print-newline*-temp-val__354625","*print-fn*-temp-val__354626","*print-newline*-orig-val__354641","*print-fn*-orig-val__354642","*print-newline*-temp-val__354643","*print-fn*-temp-val__354644","*print-newline*-orig-val__354646","*print-fn*-orig-val__354647","*print-newline*-temp-val__354648","*print-fn*-temp-val__354649","schpaa.debug/ppre","schpaa.debug/strp","seq354650","s","*print-newline*-orig-val__354652","*print-fn*-orig-val__354653","*print-newline*-temp-val__354654","*print-fn*-temp-val__354655","cljs.core.apply","cljs.core/print","cljs.core/chunk-first"],"sourcesContent":["(ns schpaa.debug\n  (:require [clojure.pprint :as p  #_#_:refer [with-out-str]]\n            [re-frame.core :as rf]))\n\n(rf/reg-event-db :debug/in-debug-cancel (fn [db _]\n                                          (assoc db :in-debug false)))\n\n(rf/reg-sub :debug/in-debug? (fn [db] (:in-debug db false)))\n\n(defn ppr [x]\n  (p/with-pprint-dispatch\n    p/code-dispatch\n    (-> x p/pprint with-out-str)))\n\n(defn pre [& p]\n  [:div {:class [\"bg-black/90\" :text-amber-300  :p-1]}\n   (if (seq p)\n     (for [e p]\n       [:pre {:style {:white-space :pre-wrap}}\n        (with-out-str (p/pprint e))])\n     [:div\n      {:style {:white-space :pre-wrap}}\n      (with-out-str (p/pprint p))])])\n\n(def ppre pre)\n\n(defn strp\n  \"Leverage the fact that printing will put a space between each entry.\n  This is useful for things that accepts arguments as strings, like\n\n  (defn pathData [{:keys [startX startY largeArcFlag endX endY]}]\n    (strp \\\"M\\\" startX startY \\\"A\\\" 1 1 0 largeArcFlag 1 endX endY \\\"L\\\" 0 0)\"\n  [& s]\n  (with-out-str (apply print s)))"]}