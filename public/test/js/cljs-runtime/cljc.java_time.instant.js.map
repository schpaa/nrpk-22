{"version":3,"sources":["cljc/java_time/instant.cljs"],"mappings":"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","names":["cljc.java-time.instant/min","cljc.java_time.instant.goog$module$goog$object.get","java.time/Instant","cljc.java-time.instant/epoch","cljc.java-time.instant/max","cljc.java-time.instant/truncated-to","this13743","java-time-temporal-TemporalUnit13744","cljc.java-time.instant/range","this13745","java-time-temporal-TemporalField13746","e74203","js/Error","e__42539__auto__","var_args","G__74205","cljc.java-time.instant/of-epoch-second","long13747","cljs.core.js_invoke","long13748","long13749","cljc.java-time.instant/at-offset","this13750","java-time-ZoneOffset13751","cljc.java-time.instant/minus-millis","this13752","long13753","cljc.java-time.instant/get-nano","this13754","cljc.java-time.instant/plus-millis","this13755","long13756","cljc.java-time.instant/minus-seconds","this13757","long13758","cljc.java-time.instant/plus-nanos","this13759","long13760","G__74214","cljc.java-time.instant/plus","this13761","java-time-temporal-TemporalAmount13762","e74215","this13763","long13764","java-time-temporal-TemporalUnit13765","e74216","cljc.java-time.instant/query","this13766","java-time-temporal-TemporalQuery13767","cljc.java-time.instant/to-string","this13768","cljc.java-time.instant/is-before","this13769","java-time-Instant13770","G__74221","cljc.java-time.instant/minus","this13771","java-time-temporal-TemporalAmount13772","e74224","this13773","long13774","java-time-temporal-TemporalUnit13775","e74225","cljc.java-time.instant/at-zone","this13776","java-time-ZoneId13777","cljc.java-time.instant/of-epoch-milli","long13778","cljc.java-time.instant/get-long","this13779","java-time-temporal-TemporalField13780","cljc.java-time.instant/until","this13781","java-time-temporal-Temporal13782","java-time-temporal-TemporalUnit13783","e74228","cljc.java-time.instant/from","java-time-temporal-TemporalAccessor13784","e74229","cljc.java-time.instant/is-after","this13785","java-time-Instant13786","cljc.java-time.instant/minus-nanos","this13787","long13788","cljc.java-time.instant/is-supported","this13789","G__13790","cljc.java-time.instant/parse","java-lang-CharSequence13791","cljc.java-time.instant/hash-code","this13792","cljc.java-time.instant/adjust-into","this13793","java-time-temporal-Temporal13794","e74235","G__74247","cljc.java-time.instant/with","this13795","java-time-temporal-TemporalAdjuster13796","e74250","this13797","java-time-temporal-TemporalField13798","long13799","e74251","G__74254","cljc.java-time.instant/now","cljs.core/js-invoke","java-time-Clock13800","cljc.java-time.instant/to-epoch-milli","this13801","cljc.java-time.instant/get-epoch-second","this13802","cljc.java-time.instant/compare-to","this13803","java-time-Instant13804","cljc.java-time.instant/plus-seconds","this13805","long13806","cljc.java-time.instant/get","this13807","java-time-temporal-TemporalField13808","e74259","cljc.java-time.instant/equals","this13809","java-lang-Object13810"],"sourcesContent":["(ns cljc.java-time.instant (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [Instant]]))\n(def min (goog.object/get java.time.Instant \"MIN\"))\n(def epoch (goog.object/get java.time.Instant \"EPOCH\"))\n(def max (goog.object/get java.time.Instant \"MAX\"))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13743 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit13744] (.truncatedTo this13743 java-time-temporal-TemporalUnit13744)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Instant this13745 ^js/JSJoda.TemporalField java-time-temporal-TemporalField13746] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.range this13745 java-time-temporal-TemporalField13746))))\n(clojure.core/defn of-epoch-second {:arglists (quote ([\"long\"] [\"long\" \"long\"]))} (^js/JSJoda.Instant [^long long13747] (js-invoke java.time.Instant \"ofEpochSecond\" long13747)) (^js/JSJoda.Instant [^long long13748 ^long long13749] (js-invoke java.time.Instant \"ofEpochSecond\" long13748 long13749)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetDateTime [^js/JSJoda.Instant this13750 ^js/JSJoda.ZoneOffset java-time-ZoneOffset13751] (.atOffset this13750 java-time-ZoneOffset13751)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13752 ^long long13753] (.minusMillis this13752 long13753)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this13754] (.nano this13754)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13755 ^long long13756] (.plusMillis this13755 long13756)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13757 ^long long13758] (.minusSeconds this13757 long13758)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13759 ^long long13760] (.plusNanos this13759 long13760)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13761 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount13762] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this13761 java-time-temporal-TemporalAmount13762))) (^js/JSJoda.Instant [^js/JSJoda.Instant this13763 ^long long13764 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit13765] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this13763 long13764 java-time-temporal-TemporalUnit13765))))\n(clojure.core/defn query {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.Instant this13766 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery13767] (.query this13766 java-time-temporal-TemporalQuery13767)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Instant\"]))} (^java.lang.String [^js/JSJoda.Instant this13768] (.toString this13768)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this13769 ^js/JSJoda.Instant java-time-Instant13770] (.isBefore this13769 java-time-Instant13770)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13771 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount13772] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this13771 java-time-temporal-TemporalAmount13772))) (^js/JSJoda.Instant [^js/JSJoda.Instant this13773 ^long long13774 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit13775] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this13773 long13774 java-time-temporal-TemporalUnit13775))))\n(clojure.core/defn at-zone {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneId\"]))} (^js/JSJoda.ZonedDateTime [^js/JSJoda.Instant this13776 ^js/JSJoda.ZoneId java-time-ZoneId13777] (.atZone this13776 java-time-ZoneId13777)))\n(clojure.core/defn of-epoch-milli {:arglists (quote ([\"long\"]))} (^js/JSJoda.Instant [^long long13778] (js-invoke java.time.Instant \"ofEpochMilli\" long13778)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.Instant this13779 ^js/JSJoda.TemporalField java-time-temporal-TemporalField13780] (.getLong this13779 java-time-temporal-TemporalField13780)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Instant this13781 ^js/JSJoda.Temporal java-time-temporal-Temporal13782 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit13783] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.until this13781 java-time-temporal-Temporal13782 java-time-temporal-TemporalUnit13783))))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.Instant [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor13784] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (js-invoke java.time.Instant \"from\" java-time-temporal-TemporalAccessor13784))))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this13785 ^js/JSJoda.Instant java-time-Instant13786] (.isAfter this13785 java-time-Instant13786)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13787 ^long long13788] (.minusNanos this13787 long13788)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"] [\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^boolean [this13789 G__13790] (.isSupported ^js/JSJoda.Instant this13789 G__13790)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Instant [^java.lang.CharSequence java-lang-CharSequence13791] (js-invoke java.time.Instant \"parse\" java-lang-CharSequence13791)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this13792] (.hashCode this13792)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Instant this13793 ^js/JSJoda.Temporal java-time-temporal-Temporal13794] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.adjustInto this13793 java-time-temporal-Temporal13794))))\n(clojure.core/defn with {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAdjuster\"] [\"java.time.Instant\" \"java.time.temporal.TemporalField\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13795 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster13796] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this13795 java-time-temporal-TemporalAdjuster13796))) (^js/JSJoda.Instant [^js/JSJoda.Instant this13797 ^js/JSJoda.TemporalField java-time-temporal-TemporalField13798 ^long long13799] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this13797 java-time-temporal-TemporalField13798 long13799))))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.Clock\"]))} (^js/JSJoda.Instant [] (js-invoke java.time.Instant \"now\")) (^js/JSJoda.Instant [^js/JSJoda.Clock java-time-Clock13800] (js-invoke java.time.Instant \"now\" java-time-Clock13800)))\n(clojure.core/defn to-epoch-milli {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this13801] (.toEpochMilli this13801)))\n(clojure.core/defn get-epoch-second {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this13802] (.epochSecond this13802)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this13803 ^js/JSJoda.Instant java-time-Instant13804] (.compareTo this13803 java-time-Instant13804)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this13805 ^long long13806] (.plusSeconds this13805 long13806)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.Instant this13807 ^js/JSJoda.TemporalField java-time-temporal-TemporalField13808] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.get this13807 java-time-temporal-TemporalField13808))))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Instant\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Instant this13809 ^java.lang.Object java-lang-Object13810] (.equals this13809 java-lang-Object13810)))\n"]}