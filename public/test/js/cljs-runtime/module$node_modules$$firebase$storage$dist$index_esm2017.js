shadow$provide.module$node_modules$$firebase$storage$dist$index_esm2017=function(global,require,module,exports){function unknown(){return new StorageError("unknown","An unknown error occurred, please check the error payload for server response.")}function canceled$jscomp$0(){return new StorageError("canceled","User canceled the upload/download.")}function cannotSliceBlob(){return new StorageError("cannot-slice-blob","Cannot slice blob for upload. Please retry the upload.")}function invalidArgument(message){return new StorageError("invalid-argument",
message)}function appDeleted(){return new StorageError("app-deleted","The Firebase app was deleted.")}function invalidRootOperation(name){return new StorageError("invalid-root-operation","The operation '"+name+"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').")}function invalidFormat(format,message){return new StorageError("invalid-format","String does not match format '"+format+"': "+message)}function internalError(message){throw new StorageError("internal-error",
"Internal error: "+message);}function start(f,callback,timeout){function triggerCallback(...args){triggeredCallback||(triggeredCallback=!0,callback.apply(null,args))}function callWithDelay(millis){retryTimeoutId=setTimeout(()=>{retryTimeoutId=null;f(handler,2===cancelState)},millis)}function handler(success,...args){triggeredCallback?globalTimeoutId&&clearTimeout(globalTimeoutId):success?(globalTimeoutId&&clearTimeout(globalTimeoutId),triggerCallback.call(null,success,...args)):2===cancelState||hitTimeout?
(globalTimeoutId&&clearTimeout(globalTimeoutId),triggerCallback.call(null,success,...args)):(64>waitSeconds&&(waitSeconds*=2),1===cancelState?(cancelState=2,success=0):success=1E3*(waitSeconds+Math.random()),callWithDelay(success))}function stop(wasTimeout){stopped||(stopped=!0,globalTimeoutId&&clearTimeout(globalTimeoutId),triggeredCallback||(null!==retryTimeoutId?(wasTimeout||(cancelState=2),clearTimeout(retryTimeoutId),callWithDelay(0)):wasTimeout||(cancelState=1)))}let waitSeconds=1,retryTimeoutId=
null,globalTimeoutId=null,hitTimeout=!1,cancelState=0,triggeredCallback=!1,stopped=!1;callWithDelay(0);globalTimeoutId=setTimeout(()=>{hitTimeout=!0;stop(!0)},timeout);return stop}function isString(p){return"string"===typeof p||p instanceof String}function isNativeBlob(p){return isNativeBlobDefined()&&p instanceof Blob}function isNativeBlobDefined(){return"undefined"!==typeof Blob}function validateNumber(argument,minValue,maxValue,value){if(value<minValue)throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);
if(value>maxValue)throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);}function makeUrl(urlPart,host,protocol){let origin=host;null==protocol&&(origin=`https://${host}`);return`${protocol}://${origin}/v0${urlPart}`}function makeQueryString(params){const encode=encodeURIComponent;let queryPart="?";for(const key in params)if(params.hasOwnProperty(key)){const nextPart=encode(key)+"\x3d"+encode(params[key]);queryPart=queryPart+nextPart+"\x26"}return queryPart=queryPart.slice(0,
-1)}function makeRequest(requestInfo,appId,authToken,appCheckToken,requestFactory,firebaseVersion){var queryPart=makeQueryString(requestInfo.urlParams);queryPart=requestInfo.url+queryPart;const headers=Object.assign({},requestInfo.headers);appId&&(headers["X-Firebase-GMPID"]=appId);null!==authToken&&0<authToken.length&&(headers.Authorization="Firebase "+authToken);headers["X-Firebase-Storage-Version"]="webjs/"+(null!==firebaseVersion&&void 0!==firebaseVersion?firebaseVersion:"AppManager");null!==
appCheckToken&&(headers["X-Firebase-AppCheck"]=appCheckToken);return new NetworkRequest(queryPart,requestInfo.method,headers,requestInfo.body,requestInfo.successCodes,requestInfo.additionalRetryCodes,requestInfo.handler,requestInfo.errorHandler,requestInfo.timeout,requestInfo.progressCallback,requestFactory)}function getBlob$1(...args){var JSCompiler_inline_result="undefined"!==typeof BlobBuilder?BlobBuilder:"undefined"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:void 0;if(void 0!==JSCompiler_inline_result){JSCompiler_inline_result=
new JSCompiler_inline_result;for(let i=0;i<args.length;i++)JSCompiler_inline_result.append(args[i]);return JSCompiler_inline_result.getBlob()}if(isNativeBlobDefined())return new Blob(args);throw new StorageError("unsupported-environment","This browser doesn't seem to support creating Blobs");}function dataFromString(format,stringData){switch(format){case StringFormat.RAW:return new StringData(utf8Bytes_(stringData));case StringFormat.BASE64:case StringFormat.BASE64URL:return new StringData(base64Bytes_(format,
stringData));case StringFormat.DATA_URL:format=new DataURLParts(stringData);if(format.base64)var JSCompiler_inline_result=base64Bytes_(StringFormat.BASE64,format.rest);else{try{JSCompiler_inline_result=decodeURIComponent(format.rest)}catch(e){throw invalidFormat(StringFormat.DATA_URL,"Malformed data URL.");}JSCompiler_inline_result=utf8Bytes_(JSCompiler_inline_result)}stringData=(new DataURLParts(stringData)).contentType;return new StringData(JSCompiler_inline_result,stringData)}throw unknown();}
function utf8Bytes_(value){const b=[];for(let i=0;i<value.length;i++){var c=value.charCodeAt(i);if(127>=c)b.push(c);else if(2047>=c)b.push(192|c>>6,128|c&63);else if(55296===(c&64512))if(i<value.length-1&&56320===(value.charCodeAt(i+1)&64512)){const lo=value.charCodeAt(++i);c=65536|(c&1023)<<10|lo&1023;b.push(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63)}else b.push(239,191,189);else 56320===(c&64512)?b.push(239,191,189):b.push(224|c>>12,128|c>>6&63,128|c&63)}return new Uint8Array(b)}function base64Bytes_(format,
value){switch(format){case StringFormat.BASE64:var hasMinus=-1!==value.indexOf("-"),hasUnder=-1!==value.indexOf("_");if(hasMinus||hasUnder)throw invalidFormat(format,"Invalid character '"+(hasMinus?"-":"_")+"' found: is it base64url encoded?");break;case StringFormat.BASE64URL:hasMinus=-1!==value.indexOf("+");hasUnder=-1!==value.indexOf("/");if(hasMinus||hasUnder)throw invalidFormat(format,"Invalid character '"+(hasMinus?"+":"/")+"' found: is it base64 encoded?");value=value.replace(/-/g,"+").replace(/_/g,
"/")}let bytes;try{bytes=atob(value)}catch(e){throw invalidFormat(format,"Invalid character found");}format=new Uint8Array(bytes.length);for(value=0;value<bytes.length;value++)format[value]=bytes.charCodeAt(value);return format}function jsonObjectOrNull(s){let obj;try{obj=JSON.parse(s)}catch(e){return null}return"object"!==typeof obj||Array.isArray(obj)?null:obj}function child(path,childPath){childPath=childPath.split("/").filter(component=>0<component.length).join("/");return 0===path.length?childPath:
path+"/"+childPath}function lastComponent(path){const index=path.lastIndexOf("/",path.length-2);return-1===index?path:path.slice(index+1)}function noXform_(metadata,value){return value}function getMappings(){if(mappings_)return mappings_;const mappings=[];mappings.push(new Mapping("bucket"));mappings.push(new Mapping("generation"));mappings.push(new Mapping("metageneration"));mappings.push(new Mapping("name","fullPath",!0));var nameMapping=new Mapping("name");nameMapping.xform=function(_metadata,
fullPath){_metadata=!isString(fullPath)||2>fullPath.length?fullPath:lastComponent(fullPath);return _metadata};mappings.push(nameMapping);nameMapping=new Mapping("size");nameMapping.xform=function(_metadata,size){return void 0!==size?Number(size):size};mappings.push(nameMapping);mappings.push(new Mapping("timeCreated"));mappings.push(new Mapping("updated"));mappings.push(new Mapping("md5Hash",null,!0));mappings.push(new Mapping("cacheControl",null,!0));mappings.push(new Mapping("contentDisposition",
null,!0));mappings.push(new Mapping("contentEncoding",null,!0));mappings.push(new Mapping("contentLanguage",null,!0));mappings.push(new Mapping("contentType",null,!0));mappings.push(new Mapping("metadata","customMetadata",!0));return mappings_=mappings}function addRef(metadata,service){Object.defineProperty(metadata,"ref",{get:function(){const loc=new Location(metadata.bucket,metadata.fullPath);return service._makeStorageReference(loc)}})}function fromResourceString(service,resourceString,mappings){resourceString=
jsonObjectOrNull(resourceString);if(null===resourceString)return null;const metadata={type:"file"},len=mappings.length;for(let i=0;i<len;i++){const mapping=mappings[i];metadata[mapping.local]=mapping.xform(metadata,resourceString[mapping.server])}addRef(metadata,service);return metadata}function downloadUrlFromResourceString(metadata,resourceString,host,protocol){resourceString=jsonObjectOrNull(resourceString);if(null===resourceString||!isString(resourceString.downloadTokens))return null;resourceString=
resourceString.downloadTokens;if(0===resourceString.length)return null;const encode=encodeURIComponent;return resourceString.split(",").map(token=>{var path=metadata.fullPath;path="/b/"+encode(metadata.bucket)+"/o/"+encode(path);path=makeUrl(path,host,protocol);token=makeQueryString({alt:"media",token});return path+token})[0]}function toResourceString(metadata,mappings){const resource={},len=mappings.length;for(let i=0;i<len;i++){const mapping=mappings[i];mapping.writable&&(resource[mapping.server]=
metadata[mapping.local])}return JSON.stringify(resource)}function handlerCheck(cndn){if(!cndn)throw unknown();}function metadataHandler(service,mappings){return function(xhr,text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return xhr}}function listHandler(service,bucket){return function(xhr,text){xhr=jsonObjectOrNull(text);if(null===xhr)var JSCompiler_inline_result=null;else{text=xhr;xhr={prefixes:[],items:[],nextPageToken:text.nextPageToken};if(text.prefixes)for(var path of text.prefixes){var pathWithoutTrailingSlash=
path.replace(/\/$/,"");pathWithoutTrailingSlash=service._makeStorageReference(new Location(bucket,pathWithoutTrailingSlash));xhr.prefixes.push(pathWithoutTrailingSlash)}if(text.items)for(JSCompiler_inline_result of text.items)path=service._makeStorageReference(new Location(bucket,JSCompiler_inline_result.name)),xhr.items.push(path);JSCompiler_inline_result=xhr}handlerCheck(null!==JSCompiler_inline_result);return JSCompiler_inline_result}}function downloadUrlHandler(service,mappings){return function(xhr,
text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return downloadUrlFromResourceString(xhr,text,service.host,service._protocol)}}function sharedErrorHandler(location){return function(xhr,err){xhr=401===xhr.getStatus()?xhr.getErrorText().includes("Firebase App Check token is invalid")?new StorageError("unauthorized-app","This app does not have permission to access Firebase Storage on this project."):new StorageError("unauthenticated","User is not authenticated, please authenticate using Firebase Authentication and try again."):
402===xhr.getStatus()?new StorageError("quota-exceeded","Quota for bucket '"+location.bucket+"' exceeded, please view quota on https://firebase.google.com/pricing/."):403===xhr.getStatus()?new StorageError("unauthorized","User does not have permission to access '"+location.path+"'."):err;xhr.serverResponse=err.serverResponse;return xhr}}function objectErrorHandler(location){const shared=sharedErrorHandler(location);return function(xhr,err){let newErr=shared(xhr,err);404===xhr.getStatus()&&(newErr=
new StorageError("object-not-found","Object '"+location.path+"' does not exist."));newErr.serverResponse=err.serverResponse;return newErr}}function getMetadata$2(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host,service._protocol);const timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,"GET",metadataHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);return service}function getBytes$1(service,location,
maxDownloadSizeBytes){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host,service._protocol)+"?alt\x3dmedia";service=new RequestInfo(urlPart,"GET",(_,data)=>data,service.maxOperationRetryTime);service.errorHandler=objectErrorHandler(location);void 0!==maxDownloadSizeBytes&&(service.headers.Range=`bytes=0-${maxDownloadSizeBytes}`,service.successCodes=[200,206]);return service}function getDownloadUrl(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,
service.host,service._protocol);const timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,"GET",downloadUrlHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);return service}function deleteObject$2(service,location){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host,service._protocol);service=new RequestInfo(urlPart,"DELETE",function(_xhr,_text){},service.maxOperationRetryTime);service.successCodes=[200,204];service.errorHandler=
objectErrorHandler(location);return service}function metadataForUpload_(location,blob,metadata){metadata=Object.assign({},metadata);metadata.fullPath=location.path;metadata.size=blob.size();metadata.contentType||(metadata.contentType=blob&&blob.type()||"application/octet-stream");return metadata}function multipartUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl();const headers={"X-Goog-Upload-Protocol":"multipart"};var JSCompiler_inline_result="";for(var i=
0;2>i;i++)JSCompiler_inline_result+=Math.random().toString().slice(2);headers["Content-Type"]="multipart/related; boundary\x3d"+JSCompiler_inline_result;metadata=metadataForUpload_(location,blob,metadata);i=toResourceString(metadata,mappings);blob=FbsBlob.getBlob("--"+JSCompiler_inline_result+"\r\nContent-Type: application/json; charset\x3dutf-8\r\n\r\n"+i+"\r\n--"+JSCompiler_inline_result+"\r\nContent-Type: "+metadata.contentType+"\r\n\r\n",blob,"\r\n--"+JSCompiler_inline_result+"--");if(null===
blob)throw cannotSliceBlob();metadata={name:metadata.fullPath};urlPart=makeUrl(urlPart,service.host,service._protocol);JSCompiler_inline_result=service.maxUploadRetryTime;service=new RequestInfo(urlPart,"POST",metadataHandler(service,mappings),JSCompiler_inline_result);service.urlParams=metadata;service.headers=headers;service.body=blob.uploadData();service.errorHandler=sharedErrorHandler(location);return service}function checkResumeHeader_(xhr,allowed){let status=null;try{status=xhr.getResponseHeader("X-Goog-Upload-Status")}catch(e){handlerCheck(!1)}xhr=
allowed||["active"];handlerCheck(!!status&&-1!==xhr.indexOf(status));return status}function createResumableUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl();const metadataForUpload=metadataForUpload_(location,blob,metadata);metadata={name:metadataForUpload.fullPath};urlPart=makeUrl(urlPart,service.host,service._protocol);blob={"X-Goog-Upload-Protocol":"resumable","X-Goog-Upload-Command":"start","X-Goog-Upload-Header-Content-Length":`${blob.size()}`,"X-Goog-Upload-Header-Content-Type":metadataForUpload.contentType,
"Content-Type":"application/json; charset\x3dutf-8"};mappings=toResourceString(metadataForUpload,mappings);service=new RequestInfo(urlPart,"POST",function(xhr){checkResumeHeader_(xhr);let url;try{url=xhr.getResponseHeader("X-Goog-Upload-URL")}catch(e){handlerCheck(!1)}handlerCheck(isString(url));return url},service.maxUploadRetryTime);service.urlParams=metadata;service.headers=blob;service.body=mappings;service.errorHandler=sharedErrorHandler(location);return service}function getResumableUploadStatus(service,
location,url,blob){service=new RequestInfo(url,"POST",function(xhr){const status=checkResumeHeader_(xhr,["active","final"]);let sizeString=null;try{sizeString=xhr.getResponseHeader("X-Goog-Upload-Size-Received")}catch(e){handlerCheck(!1)}sizeString||handlerCheck(!1);xhr=Number(sizeString);handlerCheck(!isNaN(xhr));return new ResumableUploadStatus(xhr,blob.size(),"final"===status)},service.maxUploadRetryTime);service.headers={"X-Goog-Upload-Command":"query"};service.errorHandler=sharedErrorHandler(location);
return service}function continueResumableUpload(location,service,url,blob,chunkSize,mappings,status,progressCallback){const status_=new ResumableUploadStatus(0,0);status?(status_.current=status.current,status_.total=status.total):(status_.current=0,status_.total=blob.size());if(blob.size()!==status_.total)throw new StorageError("server-file-wrong-size","Server recorded incorrect upload file size, please retry the upload.");let bytesToUpload=status=status_.total-status_.current;0<chunkSize&&(bytesToUpload=
Math.min(bytesToUpload,chunkSize));const startByte=status_.current;chunkSize={"X-Goog-Upload-Command":bytesToUpload===status?"upload, finalize":"upload","X-Goog-Upload-Offset":`${status_.current}`};status=blob.slice(startByte,startByte+bytesToUpload);if(null===status)throw cannotSliceBlob();url=new RequestInfo(url,"POST",function(xhr,text){const uploadStatus=checkResumeHeader_(xhr,["active","final"]),newCurrent=status_.current+bytesToUpload,size=blob.size();xhr="final"===uploadStatus?metadataHandler(service,
mappings)(xhr,text):null;return new ResumableUploadStatus(newCurrent,size,"final"===uploadStatus,xhr)},service.maxUploadRetryTime);url.headers=chunkSize;url.body=status.uploadData();url.progressCallback=progressCallback||null;url.errorHandler=sharedErrorHandler(location);return url}function taskStateFromInternalTaskState(state){switch(state){case "running":case "pausing":case "canceling":return TaskState.RUNNING;case "paused":return TaskState.PAUSED;case "success":return TaskState.SUCCESS;case "canceled":return TaskState.CANCELED;
case "error":return TaskState.ERROR;default:return TaskState.ERROR}}function async(f){return(...argsToForward)=>{Promise.resolve().then(()=>f(...argsToForward))}}function newTextConnection(){return new XhrTextConnection}function newBytesConnection(){return new XhrBytesConnection}function newBlobConnection(){return new XhrBlobConnection}function getBytesInternal(ref,maxDownloadSizeBytes){ref._throwIfRoot("getBytes");const requestInfo=getBytes$1(ref.storage,ref._location,maxDownloadSizeBytes);return ref.storage.makeRequestWithTokens(requestInfo,
newBytesConnection).then(bytes=>void 0!==maxDownloadSizeBytes?bytes.slice(0,maxDownloadSizeBytes):bytes)}function getBlobInternal(ref,maxDownloadSizeBytes){ref._throwIfRoot("getBlob");const requestInfo=getBytes$1(ref.storage,ref._location,maxDownloadSizeBytes);return ref.storage.makeRequestWithTokens(requestInfo,newBlobConnection).then(blob=>void 0!==maxDownloadSizeBytes?blob.slice(0,maxDownloadSizeBytes):blob)}function uploadBytes$1(ref,data,metadata){ref._throwIfRoot("uploadBytes");data=multipartUpload(ref.storage,
ref._location,getMappings(),new FbsBlob(data,!0),metadata);return ref.storage.makeRequestWithTokens(data,newTextConnection).then(finalMetadata=>({metadata:finalMetadata,ref}))}function uploadString$1(ref,value,format=StringFormat.RAW,metadata){ref._throwIfRoot("uploadString");value=dataFromString(format,value);metadata=Object.assign({},metadata);null==metadata.contentType&&null!=value.contentType&&(metadata.contentType=value.contentType);return uploadBytes$1(ref,value.data,metadata)}function listAll$1(ref){const accumulator=
{prefixes:[],items:[]};return listAllHelper(ref,accumulator).then(()=>accumulator)}function listAllHelper(ref,accumulator,pageToken){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const nextPage=yield list$1(ref,{pageToken});accumulator.prefixes.push(...nextPage.prefixes);accumulator.items.push(...nextPage.items);null!=nextPage.nextPageToken&&(yield listAllHelper(ref,accumulator,nextPage.nextPageToken))})}function list$1(ref,options){null!=options&&"number"===typeof options.maxResults&&
validateNumber("options.maxResults",1,1E3,options.maxResults);var op=options||{},service=ref.storage;options=ref._location;var pageToken=op.pageToken,maxResults=op.maxResults;op={};op.prefix=options.isRoot?"":options.path+"/";op.delimiter="/";pageToken&&(op.pageToken=pageToken);maxResults&&(op.maxResults=maxResults);pageToken=options.bucketOnlyServerUrl();pageToken=makeUrl(pageToken,service.host,service._protocol);maxResults=service.maxOperationRetryTime;service=new RequestInfo(pageToken,"GET",listHandler(service,
options.bucket),maxResults);service.urlParams=op;service.errorHandler=sharedErrorHandler(options);return ref.storage.makeRequestWithTokens(service,newTextConnection)}function getDownloadURL$1(ref){ref._throwIfRoot("getDownloadURL");const requestInfo=getDownloadUrl(ref.storage,ref._location,getMappings());return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection).then(url=>{if(null===url)throw new StorageError("no-download-url","The given file does not have any download URLs.");return url})}
function _getChild$1(ref,childPath){childPath=child(ref._location.path,childPath);childPath=new Location(ref._location.bucket,childPath);return new Reference(ref.storage,childPath)}function refFromPath(ref,path){if(ref instanceof FirebaseStorageImpl){if(null==ref._bucket)throw new StorageError("no-default-bucket","No default bucket found. Did you set the 'storageBucket' property when initializing the app?");ref=new Reference(ref,ref._bucket);return null!=path?refFromPath(ref,path):ref}return void 0!==
path?_getChild$1(ref,path):ref}function extractBucket(host,config){config=null===config||void 0===config?void 0:config.storageBucket;return null==config?null:Location.makeFromBucketSpec(config,host)}function connectStorageEmulator$1(storage,host,port,options={}){storage.host=`${host}:${port}`;storage._protocol="http";({mockUserToken:host}=options);host&&(storage._overrideAuthToken="string"===typeof host?host:(0,_util.createMockUserToken)(host,storage.app.options.projectId))}Object.defineProperty(exports,
"__esModule",{value:!0});exports._dataFromString=dataFromString;exports._getChild=function(ref,childPath){return _getChild$1(ref,childPath)};exports._invalidArgument=invalidArgument;exports._invalidRootOperation=invalidRootOperation;exports.connectStorageEmulator=function(storage,host,port,options={}){connectStorageEmulator$1(storage,host,port,options)};exports.deleteObject=function(ref){ref=(0,_util.getModularInstance)(ref);ref._throwIfRoot("deleteObject");const requestInfo=deleteObject$2(ref.storage,
ref._location);return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection)};exports.getBlob=function(ref,maxDownloadSizeBytes){ref=(0,_util.getModularInstance)(ref);return getBlobInternal(ref,maxDownloadSizeBytes)};exports.getBytes=function(ref,maxDownloadSizeBytes){ref=(0,_util.getModularInstance)(ref);return getBytesInternal(ref,maxDownloadSizeBytes)};exports.getDownloadURL=function(ref){ref=(0,_util.getModularInstance)(ref);return getDownloadURL$1(ref)};exports.getMetadata=function(ref){ref=
(0,_util.getModularInstance)(ref);ref._throwIfRoot("getMetadata");const requestInfo=getMetadata$2(ref.storage,ref._location,getMappings());return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection)};exports.getStorage=function(app=(0,_app.getApp)(),bucketUrl){app=(0,_util.getModularInstance)(app);return(0,_app._getProvider)(app,"storage").getImmediate({identifier:bucketUrl})};exports.getStream=function(ref,maxDownloadSizeBytes){throw Error("getStream() is only supported by NodeJS builds");
};exports.list=function(ref,options){ref=(0,_util.getModularInstance)(ref);return list$1(ref,options)};exports.listAll=function(ref){ref=(0,_util.getModularInstance)(ref);return listAll$1(ref)};exports.ref=function(serviceOrRef,pathOrUrl){serviceOrRef=(0,_util.getModularInstance)(serviceOrRef);if(pathOrUrl&&/^[A-Za-z]+:\/\//.test(pathOrUrl))if(serviceOrRef instanceof FirebaseStorageImpl)pathOrUrl=new Reference(serviceOrRef,pathOrUrl);else throw invalidArgument("To use ref(service, url), the first argument must be a Storage instance.");
else pathOrUrl=refFromPath(serviceOrRef,pathOrUrl);return pathOrUrl};exports.updateMetadata=function(ref,metadata){ref=(0,_util.getModularInstance)(ref);ref._throwIfRoot("updateMetadata");var service=ref.storage,location=ref._location,mappings=getMappings(),urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host,service._protocol);metadata=toResourceString(metadata,mappings);const timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,"PATCH",metadataHandler(service,mappings),
timeout);service.headers={"Content-Type":"application/json; charset\x3dutf-8"};service.body=metadata;service.errorHandler=objectErrorHandler(location);return ref.storage.makeRequestWithTokens(service,newTextConnection)};exports.uploadBytes=function(ref,data,metadata){ref=(0,_util.getModularInstance)(ref);return uploadBytes$1(ref,data,metadata)};exports.uploadBytesResumable=function(ref,data,metadata){ref=(0,_util.getModularInstance)(ref);ref._throwIfRoot("uploadBytesResumable");return new UploadTask(ref,
new FbsBlob(data),metadata)};exports.uploadString=function(ref,value,format,metadata){ref=(0,_util.getModularInstance)(ref);return uploadString$1(ref,value,format,metadata)};exports._UploadTask=exports._TaskState=exports._TaskEvent=exports._Location=exports._FbsBlob=exports.StringFormat=void 0;var _app=require("module$node_modules$$firebase$app$dist$esm$index_esm2017"),_util=require("module$node_modules$$firebase$util$dist$index_esm2017");global=require("module$node_modules$$firebase$component$dist$esm$index_esm2017");
class StorageError extends _util.FirebaseError{constructor(code,message){super("storage/"+code,`Firebase Storage: ${message} (${"storage/"+code})`);this.customData={serverResponse:null};this._baseMessage=this.message;Object.setPrototypeOf(this,StorageError.prototype)}_codeEquals(code){return"storage/"+code===this.code}get serverResponse(){return this.customData.serverResponse}set serverResponse(serverResponse){this.customData.serverResponse=serverResponse;this.message=this.customData.serverResponse?
`${this._baseMessage}\n${this.customData.serverResponse}`:this._baseMessage}}class Location{constructor(bucket,path){this.bucket=bucket;this.path_=path}get path(){return this.path_}get isRoot(){return 0===this.path.length}fullServerUrl(){const encode=encodeURIComponent;return"/b/"+encode(this.bucket)+"/o/"+encode(this.path)}bucketOnlyServerUrl(){return"/b/"+encodeURIComponent(this.bucket)+"/o"}static makeFromBucketSpec(bucketString,host){let bucketLocation;try{bucketLocation=Location.makeFromUrl(bucketString,
host)}catch(e){return new Location(bucketString,"")}if(""===bucketLocation.path)return bucketLocation;throw new StorageError("invalid-default-bucket","Invalid default bucket '"+bucketString+"'.");}static makeFromUrl(url,host){function httpModify(loc){loc.path_=decodeURIComponent(loc.path)}var location=null,gsRegex=RegExp("^gs://([A-Za-z0-9.\\-_]+)(/(.*))?$","i"),firebaseStorageHost=host.replace(/[.]/g,"\\.");firebaseStorageHost=[{regex:gsRegex,indices:{bucket:1,path:3},postModify:function(loc){"/"===
loc.path.charAt(loc.path.length-1)&&(loc.path_=loc.path_.slice(0,-1))}},{regex:new RegExp(`^https?://${firebaseStorageHost}/${"v[A-Za-z0-9_]+"}/b/${"([A-Za-z0-9.\\-_]+)"}/o${"(/([^?#]*).*)?$"}`,"i"),indices:{bucket:1,path:3},postModify:httpModify},{regex:new RegExp(`^https?://${"firebasestorage.googleapis.com"===host?"(?:storage.googleapis.com|storage.cloud.google.com)":host}/${"([A-Za-z0-9.\\-_]+)"}/${"([^?#]*)"}`,"i"),indices:{bucket:1,path:2},postModify:httpModify}];for(let i=0;i<firebaseStorageHost.length;i++)if(host=
firebaseStorageHost[i],gsRegex=host.regex.exec(url)){location=gsRegex[host.indices.bucket];(gsRegex=gsRegex[host.indices.path])||(gsRegex="");location=new Location(location,gsRegex);host.postModify(location);break}if(null==location)throw new StorageError("invalid-url","Invalid URL '"+url+"'.");return location}}exports._Location=Location;class FailRequest{constructor(error){this.promise_=Promise.reject(error)}getPromise(){return this.promise_}cancel(_appDelete){}}var ErrorCode;(function(ErrorCode){ErrorCode[ErrorCode.NO_ERROR=
0]="NO_ERROR";ErrorCode[ErrorCode.NETWORK_ERROR=1]="NETWORK_ERROR";ErrorCode[ErrorCode.ABORT=2]="ABORT"})(ErrorCode||(ErrorCode={}));class NetworkRequest{constructor(url_,method_,headers_,body_,successCodes_,additionalRetryCodes_,callback_,errorCallback_,timeout_,progressCallback_,connectionFactory_){this.url_=url_;this.method_=method_;this.headers_=headers_;this.body_=body_;this.successCodes_=successCodes_;this.additionalRetryCodes_=additionalRetryCodes_;this.callback_=callback_;this.errorCallback_=
errorCallback_;this.timeout_=timeout_;this.progressCallback_=progressCallback_;this.connectionFactory_=connectionFactory_;this.backoffId_=this.pendingConnection_=null;this.appDelete_=this.canceled_=!1;this.promise_=new Promise((resolve,reject)=>{this.resolve_=resolve;this.reject_=reject;this.start_()})}start_(){const doTheRequest=(backoffCallback,canceled)=>{if(canceled)backoffCallback(!1,new RequestEndStatus(!1,null,!0));else{var connection=this.connectionFactory_();this.pendingConnection_=connection;
var progressListener=progressEvent=>{const loaded=progressEvent.loaded;progressEvent=progressEvent.lengthComputable?progressEvent.total:-1;null!==this.progressCallback_&&this.progressCallback_(loaded,progressEvent)};null!==this.progressCallback_&&connection.addUploadProgressListener(progressListener);connection.send(this.url_,this.method_,this.body_,this.headers_).then(()=>{null!==this.progressCallback_&&connection.removeUploadProgressListener(progressListener);this.pendingConnection_=null;var hitServer=
connection.getErrorCode()===ErrorCode.NO_ERROR;const status=connection.getStatus();!hitServer||this.isRetryStatusCode_(status)?(hitServer=connection.getErrorCode()===ErrorCode.ABORT,backoffCallback(!1,new RequestEndStatus(!1,null,hitServer))):(hitServer=-1!==this.successCodes_.indexOf(status),backoffCallback(!0,new RequestEndStatus(hitServer,connection)))})}},backoffDone=(requestWentThrough,status)=>{const resolve=this.resolve_;requestWentThrough=this.reject_;const connection=status.connection;if(status.wasSuccessCode)try{const result=
this.callback_(connection,connection.getResponse());void 0!==result?resolve(result):resolve()}catch(e){requestWentThrough(e)}else null!==connection?(status=unknown(),status.serverResponse=connection.getErrorText(),this.errorCallback_?requestWentThrough(this.errorCallback_(connection,status)):requestWentThrough(status)):status.canceled?(status=this.appDelete_?appDeleted():canceled$jscomp$0(),requestWentThrough(status)):(status=new StorageError("retry-limit-exceeded","Max retry time for operation exceeded, please try again."),
requestWentThrough(status))};this.canceled_?backoffDone(!1,new RequestEndStatus(!1,null,!0)):this.backoffId_=start(doTheRequest,backoffDone,this.timeout_)}getPromise(){return this.promise_}cancel(appDelete){this.canceled_=!0;this.appDelete_=appDelete||!1;null!==this.backoffId_&&(0,this.backoffId_)(!1);null!==this.pendingConnection_&&this.pendingConnection_.abort()}isRetryStatusCode_(status){const isFiveHundredCode=500<=status&&600>status,isExtraRetryCode=-1!==[408,429].indexOf(status);status=-1!==
this.additionalRetryCodes_.indexOf(status);return isFiveHundredCode||isExtraRetryCode||status}}class RequestEndStatus{constructor(wasSuccessCode,connection,canceled){this.wasSuccessCode=wasSuccessCode;this.connection=connection;this.canceled=!!canceled}}const StringFormat={RAW:"raw",BASE64:"base64",BASE64URL:"base64url",DATA_URL:"data_url"};exports.StringFormat=StringFormat;class StringData{constructor(data,contentType){this.data=data;this.contentType=contentType||null}}class DataURLParts{constructor(dataURL){this.base64=
!1;this.contentType=null;var matches=dataURL.match(/^data:([^,]+)?,/);if(null===matches)throw invalidFormat(StringFormat.DATA_URL,"Must be formatted 'data:[\x3cmediatype\x3e][;base64],\x3cdata\x3e");matches=matches[1]||null;if(null!=matches){var JSCompiler_inline_result=7<=matches.length?";base64"===matches.substring(matches.length-7):!1;this.contentType=(this.base64=JSCompiler_inline_result)?matches.substring(0,matches.length-7):matches}this.rest=dataURL.substring(dataURL.indexOf(",")+1)}}class FbsBlob{constructor(data,
elideCopy){let size=0,blobType="";isNativeBlob(data)?(this.data_=data,size=data.size,blobType=data.type):data instanceof ArrayBuffer?(elideCopy?this.data_=new Uint8Array(data):(this.data_=new Uint8Array(data.byteLength),this.data_.set(new Uint8Array(data))),size=this.data_.length):data instanceof Uint8Array&&(elideCopy?this.data_=data:(this.data_=new Uint8Array(data.length),this.data_.set(data)),size=data.length);this.size_=size;this.type_=blobType}size(){return this.size_}type(){return this.type_}slice(startByte,
endByte){if(isNativeBlob(this.data_)){var blob=this.data_;startByte=blob.webkitSlice?blob.webkitSlice(startByte,endByte):blob.mozSlice?blob.mozSlice(startByte,endByte):blob.slice?blob.slice(startByte,endByte):null;return null===startByte?null:new FbsBlob(startByte)}startByte=new Uint8Array(this.data_.buffer,startByte,endByte-startByte);return new FbsBlob(startByte,!0)}static getBlob(...args){if(isNativeBlobDefined())return args=args.map(val=>val instanceof FbsBlob?val.data_:val),new FbsBlob(getBlob$1.apply(null,
args));args=args.map(val=>isString(val)?dataFromString(StringFormat.RAW,val).data:val.data_);let finalLength=0;args.forEach(array=>{finalLength+=array.byteLength});const merged=new Uint8Array(finalLength);let index=0;args.forEach(array=>{for(let i=0;i<array.length;i++)merged[index++]=array[i]});return new FbsBlob(merged,!0)}uploadData(){return this.data_}}exports._FbsBlob=FbsBlob;class Mapping{constructor(server,local,writable,xform){this.server=server;this.local=local||server;this.writable=!!writable;
this.xform=xform||noXform_}}let mappings_=null;class RequestInfo{constructor(url,method,handler,timeout){this.url=url;this.method=method;this.handler=handler;this.timeout=timeout;this.urlParams={};this.headers={};this.progressCallback=this.errorHandler=this.body=null;this.successCodes=[200];this.additionalRetryCodes=[]}}class ResumableUploadStatus{constructor(current,total,finalized,metadata){this.current=current;this.total=total;this.finalized=!!finalized;this.metadata=metadata||null}}exports._TaskEvent=
{STATE_CHANGED:"state_changed"};const TaskState={RUNNING:"running",PAUSED:"paused",SUCCESS:"success",CANCELED:"canceled",ERROR:"error"};exports._TaskState=TaskState;class Observer{constructor(nextOrObserver,error,complete){"function"===typeof nextOrObserver||null!=error||null!=complete?(this.next=nextOrObserver,this.error=null!==error&&void 0!==error?error:void 0,this.complete=null!==complete&&void 0!==complete?complete:void 0):(this.next=nextOrObserver.next,this.error=nextOrObserver.error,this.complete=
nextOrObserver.complete)}}class XhrConnection{constructor(){this.sent_=!1;this.xhr_=new XMLHttpRequest;this.initXhr();this.errorCode_=ErrorCode.NO_ERROR;this.sendPromise_=new Promise(resolve=>{this.xhr_.addEventListener("abort",()=>{this.errorCode_=ErrorCode.ABORT;resolve()});this.xhr_.addEventListener("error",()=>{this.errorCode_=ErrorCode.NETWORK_ERROR;resolve()});this.xhr_.addEventListener("load",()=>{resolve()})})}send(url,method,body,headers){if(this.sent_)throw internalError("cannot .send() more than once");
this.sent_=!0;this.xhr_.open(method,url,!0);if(void 0!==headers)for(const key in headers)headers.hasOwnProperty(key)&&this.xhr_.setRequestHeader(key,headers[key].toString());void 0!==body?this.xhr_.send(body):this.xhr_.send();return this.sendPromise_}getErrorCode(){if(!this.sent_)throw internalError("cannot .getErrorCode() before sending");return this.errorCode_}getStatus(){if(!this.sent_)throw internalError("cannot .getStatus() before sending");try{return this.xhr_.status}catch(e){return-1}}getResponse(){if(!this.sent_)throw internalError("cannot .getResponse() before sending");
return this.xhr_.response}getErrorText(){if(!this.sent_)throw internalError("cannot .getErrorText() before sending");return this.xhr_.statusText}abort(){this.xhr_.abort()}getResponseHeader(header){return this.xhr_.getResponseHeader(header)}addUploadProgressListener(listener){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener("progress",listener)}removeUploadProgressListener(listener){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener("progress",listener)}}class XhrTextConnection extends XhrConnection{initXhr(){this.xhr_.responseType=
"text"}}class XhrBytesConnection extends XhrConnection{initXhr(){this.xhr_.responseType="arraybuffer"}}class XhrBlobConnection extends XhrConnection{initXhr(){this.xhr_.responseType="blob"}}class UploadTask{constructor(ref,blob,metadata=null){this._transferred=0;this._needToFetchMetadata=this._needToFetchStatus=!1;this._observers=[];this._request=this._uploadUrl=this._error=void 0;this._chunkMultiplier=1;this._reject=this._resolve=void 0;this._ref=ref;this._blob=blob;this._metadata=metadata;this._mappings=
getMappings();this._resumable=this._shouldDoResumable(this._blob);this._state="running";this._errorHandler=error=>{this._request=void 0;this._chunkMultiplier=1;error._codeEquals("canceled")?(this._needToFetchStatus=!0,this.completeTransitions_()):(this._error=error,this._transition("error"))};this._metadataErrorHandler=error=>{this._request=void 0;error._codeEquals("canceled")?this.completeTransitions_():(this._error=error,this._transition("error"))};this._promise=new Promise((resolve,reject)=>{this._resolve=
resolve;this._reject=reject;this._start()});this._promise.then(null,()=>{})}_makeProgressCallback(){const sizeBefore=this._transferred;return loaded=>this._updateProgress(sizeBefore+loaded)}_shouldDoResumable(blob){return 262144<blob.size()}_start(){"running"===this._state&&void 0===this._request&&(this._resumable?void 0===this._uploadUrl?this._createResumable():this._needToFetchStatus?this._fetchStatus():this._needToFetchMetadata?this._fetchMetadata():this._continueUpload():this._oneShotUpload())}_resolveToken(callback){Promise.all([this._ref.storage._getAuthToken(),
this._ref.storage._getAppCheckToken()]).then(([authToken,appCheckToken])=>{switch(this._state){case "running":callback(authToken,appCheckToken);break;case "canceling":this._transition("canceled");break;case "pausing":this._transition("paused")}})}_createResumable(){this._resolveToken((authToken,appCheckToken)=>{const requestInfo=createResumableUpload(this._ref.storage,this._ref._location,this._mappings,this._blob,this._metadata);this._request=authToken=this._ref.storage._makeRequest(requestInfo,newTextConnection,
authToken,appCheckToken);authToken.getPromise().then(url=>{this._request=void 0;this._uploadUrl=url;this._needToFetchStatus=!1;this.completeTransitions_()},this._errorHandler)})}_fetchStatus(){const url=this._uploadUrl;this._resolveToken((authToken,appCheckToken)=>{const requestInfo=getResumableUploadStatus(this._ref.storage,this._ref._location,url,this._blob);this._request=authToken=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);authToken.getPromise().then(status=>
{this._request=void 0;this._updateProgress(status.current);this._needToFetchStatus=!1;status.finalized&&(this._needToFetchMetadata=!0);this.completeTransitions_()},this._errorHandler)})}_continueUpload(){const chunkSize=262144*this._chunkMultiplier,status=new ResumableUploadStatus(this._transferred,this._blob.size()),url=this._uploadUrl;this._resolveToken((authToken,appCheckToken)=>{let requestInfo;try{requestInfo=continueResumableUpload(this._ref._location,this._ref.storage,url,this._blob,chunkSize,
this._mappings,status,this._makeProgressCallback())}catch(e){this._error=e;this._transition("error");return}this._request=authToken=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);authToken.getPromise().then(newStatus=>{this._increaseMultiplier();this._request=void 0;this._updateProgress(newStatus.current);newStatus.finalized?(this._metadata=newStatus.metadata,this._transition("success")):this.completeTransitions_()},this._errorHandler)})}_increaseMultiplier(){33554432>
262144*this._chunkMultiplier&&(this._chunkMultiplier*=2)}_fetchMetadata(){this._resolveToken((authToken,appCheckToken)=>{const requestInfo=getMetadata$2(this._ref.storage,this._ref._location,this._mappings);this._request=authToken=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);authToken.getPromise().then(metadata=>{this._request=void 0;this._metadata=metadata;this._transition("success")},this._metadataErrorHandler)})}_oneShotUpload(){this._resolveToken((authToken,
appCheckToken)=>{const requestInfo=multipartUpload(this._ref.storage,this._ref._location,this._mappings,this._blob,this._metadata);this._request=authToken=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);authToken.getPromise().then(metadata=>{this._request=void 0;this._metadata=metadata;this._updateProgress(this._blob.size());this._transition("success")},this._errorHandler)})}_updateProgress(transferred){const old=this._transferred;this._transferred=transferred;
this._transferred!==old&&this._notifyObservers()}_transition(state){if(this._state!==state)switch(state){case "canceling":this._state=state;void 0!==this._request&&this._request.cancel();break;case "pausing":this._state=state;void 0!==this._request&&this._request.cancel();break;case "running":const wasPaused="paused"===this._state;this._state=state;wasPaused&&(this._notifyObservers(),this._start());break;case "paused":this._state=state;this._notifyObservers();break;case "canceled":this._error=canceled$jscomp$0();
this._state=state;this._notifyObservers();break;case "error":this._state=state;this._notifyObservers();break;case "success":this._state=state,this._notifyObservers()}}completeTransitions_(){switch(this._state){case "pausing":this._transition("paused");break;case "canceling":this._transition("canceled");break;case "running":this._start()}}get snapshot(){const externalState=taskStateFromInternalTaskState(this._state);return{bytesTransferred:this._transferred,totalBytes:this._blob.size(),state:externalState,
metadata:this._metadata,task:this,ref:this._ref}}on(type,nextOrObserver,error,completed){const observer=new Observer(nextOrObserver||void 0,error||void 0,completed||void 0);this._addObserver(observer);return()=>{this._removeObserver(observer)}}then(onFulfilled,onRejected){return this._promise.then(onFulfilled,onRejected)}catch(onRejected){return this.then(null,onRejected)}_addObserver(observer){this._observers.push(observer);this._notifyObserver(observer)}_removeObserver(observer){observer=this._observers.indexOf(observer);
-1!==observer&&this._observers.splice(observer,1)}_notifyObservers(){this._finishPromise();this._observers.slice().forEach(observer=>{this._notifyObserver(observer)})}_finishPromise(){if(void 0!==this._resolve){let triggered=!0;switch(taskStateFromInternalTaskState(this._state)){case TaskState.SUCCESS:async(this._resolve.bind(null,this.snapshot))();break;case TaskState.CANCELED:case TaskState.ERROR:async(this._reject.bind(null,this._error))();break;default:triggered=!1}triggered&&(this._reject=this._resolve=
void 0)}}_notifyObserver(observer){switch(taskStateFromInternalTaskState(this._state)){case TaskState.RUNNING:case TaskState.PAUSED:observer.next&&async(observer.next.bind(observer,this.snapshot))();break;case TaskState.SUCCESS:observer.complete&&async(observer.complete.bind(observer))();break;case TaskState.CANCELED:case TaskState.ERROR:observer.error&&async(observer.error.bind(observer,this._error))();break;default:observer.error&&async(observer.error.bind(observer,this._error))()}}resume(){const valid=
"paused"===this._state||"pausing"===this._state;valid&&this._transition("running");return valid}pause(){const valid="running"===this._state;valid&&this._transition("pausing");return valid}cancel(){const valid="running"===this._state||"pausing"===this._state;valid&&this._transition("canceling");return valid}}exports._UploadTask=UploadTask;class Reference{constructor(_service,location){this._service=_service;this._location=location instanceof Location?location:Location.makeFromUrl(location,_service.host)}toString(){return"gs://"+
this._location.bucket+"/"+this._location.path}_newRef(service,location){return new Reference(service,location)}get root(){const location=new Location(this._location.bucket,"");return this._newRef(this._service,location)}get bucket(){return this._location.bucket}get fullPath(){return this._location.path}get name(){return lastComponent(this._location.path)}get storage(){return this._service}get parent(){var JSCompiler_inline_result=this._location.path;if(0===JSCompiler_inline_result.length)JSCompiler_inline_result=
null;else{var index=JSCompiler_inline_result.lastIndexOf("/");JSCompiler_inline_result=-1===index?"":JSCompiler_inline_result.slice(0,index)}if(null===JSCompiler_inline_result)return null;JSCompiler_inline_result=new Location(this._location.bucket,JSCompiler_inline_result);return new Reference(this._service,JSCompiler_inline_result)}_throwIfRoot(name){if(""===this._location.path)throw invalidRootOperation(name);}}class FirebaseStorageImpl{constructor(app,_authProvider,_appCheckProvider,_url,_firebaseVersion){this.app=
app;this._authProvider=_authProvider;this._appCheckProvider=_appCheckProvider;this._url=_url;this._firebaseVersion=_firebaseVersion;this._bucket=null;this._host="firebasestorage.googleapis.com";this._protocol="https";this._appId=null;this._deleted=!1;this._maxOperationRetryTime=12E4;this._maxUploadRetryTime=6E5;this._requests=new Set;this._bucket=null!=_url?Location.makeFromBucketSpec(_url,this._host):extractBucket(this._host,this.app.options)}get host(){return this._host}set host(host){this._host=
host;this._bucket=null!=this._url?Location.makeFromBucketSpec(this._url,host):extractBucket(host,this.app.options)}get maxUploadRetryTime(){return this._maxUploadRetryTime}set maxUploadRetryTime(time){validateNumber("time",0,Number.POSITIVE_INFINITY,time);this._maxUploadRetryTime=time}get maxOperationRetryTime(){return this._maxOperationRetryTime}set maxOperationRetryTime(time){validateNumber("time",0,Number.POSITIVE_INFINITY,time);this._maxOperationRetryTime=time}_getAuthToken(){const $jscomp$async$this=
this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){if($jscomp$async$this._overrideAuthToken)return $jscomp$async$this._overrideAuthToken;var auth=$jscomp$async$this._authProvider.getImmediate({optional:!0});return auth&&(auth=yield auth.getToken(),null!==auth)?auth.accessToken:null})}_getAppCheckToken(){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const appCheck=$jscomp$async$this._appCheckProvider.getImmediate({optional:!0});return appCheck?
(yield appCheck.getToken()).token:null})}_delete(){this._deleted||(this._deleted=!0,this._requests.forEach(request=>request.cancel()),this._requests.clear());return Promise.resolve()}_makeStorageReference(loc){return new Reference(this,loc)}_makeRequest(requestInfo,requestFactory,authToken,appCheckToken){if(this._deleted)return new FailRequest(appDeleted());const request=makeRequest(requestInfo,this._appId,authToken,appCheckToken,requestFactory,this._firebaseVersion);this._requests.add(request);request.getPromise().then(()=>
this._requests.delete(request),()=>this._requests.delete(request));return request}makeRequestWithTokens(requestInfo,requestFactory){const $jscomp$async$this=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const [authToken,appCheckToken]=yield Promise.all([$jscomp$async$this._getAuthToken(),$jscomp$async$this._getAppCheckToken()]);return $jscomp$async$this._makeRequest(requestInfo,requestFactory,authToken,appCheckToken).getPromise()})}}(0,_app._registerComponent)((new global.Component("storage",
function(container,{instanceIdentifier:url}){const app=container.getProvider("app").getImmediate(),authProvider=container.getProvider("auth-internal");container=container.getProvider("app-check-internal");return new FirebaseStorageImpl(app,authProvider,container,url,_app.SDK_VERSION)},"PUBLIC")).setMultipleInstances(!0));(0,_app.registerVersion)("@firebase/storage","0.9.5","");(0,_app.registerVersion)("@firebase/storage","0.9.5","esm2017")}
//# sourceMappingURL=module$node_modules$$firebase$storage$dist$index_esm2017.js.map
