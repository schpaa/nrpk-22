{
"version":3,
"file":"module$node_modules$$firebase$app$dist$esm$index_esm2017.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/@firebase/app/dist/esm/index.esm2017.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$app$dist$esm$index_esm2017\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._addComponent = _addComponent;\nexports._addOrOverwriteComponent = _addOrOverwriteComponent;\nexports._clearComponents = _clearComponents;\nexports._getProvider = _getProvider;\nexports._registerComponent = _registerComponent;\nexports._removeServiceInstance = _removeServiceInstance;\nexports.deleteApp = deleteApp;\nexports.getApp = getApp;\nexports.getApps = getApps;\nexports.initializeApp = initializeApp;\nexports.onLog = onLog;\nexports.registerVersion = registerVersion;\nexports.setLogLevel = setLogLevel;\nObject.defineProperty(exports, \"FirebaseError\", {\n  enumerable: true,\n  get: function () {\n    return _util.FirebaseError;\n  }\n});\nexports._components = exports._apps = exports._DEFAULT_ENTRY_NAME = exports.SDK_VERSION = void 0;\n\nvar _component = require(\"@firebase/component\");\n\nvar _logger = require(\"@firebase/logger\");\n\nvar _util = require(\"@firebase/util\");\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass PlatformLoggerServiceImpl {\n  constructor(container) {\n    this.container = container;\n  } // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n\n\n  getPlatformInfoString() {\n    const providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are\n    // version components.\n\n    return providers.map(provider => {\n      if (isVersionServiceProvider(provider)) {\n        const service = provider.getImmediate();\n        return `${service.library}/${service.version}`;\n      } else {\n        return null;\n      }\n    }).filter(logString => logString).join(' ');\n  }\n\n}\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\n\n\nfunction isVersionServiceProvider(provider) {\n  const component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\"\n  /* VERSION */\n  ;\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.21\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst logger = new _logger.Logger('@firebase/app');\nconst name$n = \"@firebase/app-compat\";\nconst name$m = \"@firebase/analytics-compat\";\nconst name$l = \"@firebase/analytics\";\nconst name$k = \"@firebase/app-check-compat\";\nconst name$j = \"@firebase/app-check\";\nconst name$i = \"@firebase/auth\";\nconst name$h = \"@firebase/auth-compat\";\nconst name$g = \"@firebase/database\";\nconst name$f = \"@firebase/database-compat\";\nconst name$e = \"@firebase/functions\";\nconst name$d = \"@firebase/functions-compat\";\nconst name$c = \"@firebase/installations\";\nconst name$b = \"@firebase/installations-compat\";\nconst name$a = \"@firebase/messaging\";\nconst name$9 = \"@firebase/messaging-compat\";\nconst name$8 = \"@firebase/performance\";\nconst name$7 = \"@firebase/performance-compat\";\nconst name$6 = \"@firebase/remote-config\";\nconst name$5 = \"@firebase/remote-config-compat\";\nconst name$4 = \"@firebase/storage\";\nconst name$3 = \"@firebase/storage-compat\";\nconst name$2 = \"@firebase/firestore\";\nconst name$1 = \"@firebase/firestore-compat\";\nconst name = \"firebase\";\nconst version = \"9.6.11\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\nexports._DEFAULT_ENTRY_NAME = DEFAULT_ENTRY_NAME;\nconst PLATFORM_LOG_STRING = {\n  [name$o]: 'fire-core',\n  [name$n]: 'fire-core-compat',\n  [name$l]: 'fire-analytics',\n  [name$m]: 'fire-analytics-compat',\n  [name$j]: 'fire-app-check',\n  [name$k]: 'fire-app-check-compat',\n  [name$i]: 'fire-auth',\n  [name$h]: 'fire-auth-compat',\n  [name$g]: 'fire-rtdb',\n  [name$f]: 'fire-rtdb-compat',\n  [name$e]: 'fire-fn',\n  [name$d]: 'fire-fn-compat',\n  [name$c]: 'fire-iid',\n  [name$b]: 'fire-iid-compat',\n  [name$a]: 'fire-fcm',\n  [name$9]: 'fire-fcm-compat',\n  [name$8]: 'fire-perf',\n  [name$7]: 'fire-perf-compat',\n  [name$6]: 'fire-rc',\n  [name$5]: 'fire-rc-compat',\n  [name$4]: 'fire-gcs',\n  [name$3]: 'fire-gcs-compat',\n  [name$2]: 'fire-fst',\n  [name$1]: 'fire-fst-compat',\n  'fire-js': 'fire-js',\n  [name]: 'fire-js-all'\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\nconst _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexports._apps = _apps;\n\nconst _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\n\n\nexports._components = _components;\n\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\n\n\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\n\n\nfunction _registerComponent(component) {\n  const componentName = component.name;\n\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n\n  _components.set(componentName, component); // add the component to existing app instances\n\n\n  for (const app of _apps.values()) {\n    _addComponent(app, component);\n  }\n\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\n\n\nfunction _getProvider(app, name) {\n  const heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\n\n\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\n\n\nfunction _clearComponents() {\n  _components.clear();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERRORS = {\n  [\"no-app\"\n  /* NO_APP */\n  ]: \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()',\n  [\"bad-app-name\"\n  /* BAD_APP_NAME */\n  ]: \"Illegal App name: '{$appName}\",\n  [\"duplicate-app\"\n  /* DUPLICATE_APP */\n  ]: \"Firebase App named '{$appName}' already exists with different options or config\",\n  [\"app-deleted\"\n  /* APP_DELETED */\n  ]: \"Firebase App named '{$appName}' already deleted\",\n  [\"invalid-app-argument\"\n  /* INVALID_APP_ARGUMENT */\n  ]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n  [\"invalid-log-argument\"\n  /* INVALID_LOG_ARGUMENT */\n  ]: 'First argument to `onLog` must be null or a function.',\n  [\"storage-open\"\n  /* STORAGE_OPEN */\n  ]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [\"storage-get\"\n  /* STORAGE_GET */\n  ]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [\"storage-set\"\n  /* STORAGE_WRITE */\n  ]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [\"storage-delete\"\n  /* STORAGE_DELETE */\n  ]: 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\n};\nconst ERROR_FACTORY = new _util.ErrorFactory('app', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nclass FirebaseAppImpl {\n  constructor(options, config, container) {\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new _component.Component('app', () => this, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n  }\n\n  get automaticDataCollectionEnabled() {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name() {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options() {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config() {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get isDeleted() {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val) {\n    this._isDeleted = val;\n  }\n  /**\r\n   * This function will throw an Error if the App has already been deleted -\r\n   * use before performing API actions on the App.\r\n   */\n\n\n  checkDestroyed() {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(\"app-deleted\"\n      /* APP_DELETED */\n      , {\n        appName: this._name\n      });\n    }\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\n\n\nconst SDK_VERSION = version;\nexports.SDK_VERSION = SDK_VERSION;\n\nfunction initializeApp(options, rawConfig = {}) {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = {\n      name\n    };\n  }\n\n  const config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\"\n    /* BAD_APP_NAME */\n    , {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name);\n\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if ((0, _util.deepEqual)(options, existingApp.options) && (0, _util.deepEqual)(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\"\n      /* DUPLICATE_APP */\n      , {\n        appName: name\n      });\n    }\n  }\n\n  const container = new _component.ComponentContainer(name);\n\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\n\n\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\n  const app = _apps.get(name);\n\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\"\n    /* NO_APP */\n    , {\n      appName: name\n    });\n  }\n\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\n\n\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nasync function deleteApp(app) {\n  const name = app.name;\n\n  if (_apps.has(name)) {\n    _apps.delete(name);\n\n    await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n    app.isDeleted = true;\n  }\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\n\n\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a; // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n\n\n  let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n\n  if (variant) {\n    library += `-${variant}`;\n  }\n\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n\n  if (libraryMismatch || versionMismatch) {\n    const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n\n    if (versionMismatch) {\n      warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    logger.warn(warning.join(' '));\n    return;\n  }\n\n  _registerComponent(new _component.Component(`${library}-version`, () => ({\n    library,\n    version\n  }), \"VERSION\"\n  /* VERSION */\n  ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\n\n\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\"\n    /* INVALID_LOG_ARGUMENT */\n    );\n  }\n\n  (0, _logger.setUserLogHandler)(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\n\n\nfunction setLogLevel(logLevel) {\n  (0, _logger.setLogLevel)(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\nlet dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = (0, _util.openDB)(DB_NAME, DB_VERSION, (db, oldVersion) => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (oldVersion) {\n        case 0:\n          db.createObjectStore(STORE_NAME);\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(\"storage-open\"\n      /* STORAGE_OPEN */\n      , {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n\n  return dbPromise;\n}\n\nasync function readHeartbeatsFromIndexedDB(app) {\n  try {\n    const db = await getDbPromise();\n    return db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app));\n  } catch (e) {\n    throw ERROR_FACTORY.create(\"storage-get\"\n    /* STORAGE_GET */\n    , {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.complete;\n  } catch (e) {\n    throw ERROR_FACTORY.create(\"storage-set\"\n    /* STORAGE_WRITE */\n    , {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nfunction computeKey(app) {\n  return `${app.name}!${app.options.appId}`;\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst MAX_HEADER_BYTES = 1024; // 30 days\n\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nclass HeartbeatServiceImpl {\n  constructor(container) {\n    this.container = container;\n    /**\r\n     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n     * the header string.\r\n     * Stores one record per date. This will be consolidated into the standard\r\n     * format of one record per user agent string before being sent as a header.\r\n     * Populated from indexedDB when the controller is instantiated and should\r\n     * be kept in sync with indexedDB.\r\n     * Leave public for easier testing.\r\n     */\n\n    this._heartbeatsCache = null;\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n  /**\r\n   * Called to report a heartbeat. The function will generate\r\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n   * to IndexedDB.\r\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n   * already logged, subsequent calls to this function in the same day will be ignored.\r\n   */\n\n\n  async triggerHeartbeat() {\n    const platformLogger = this.container.getProvider('platform-logger').getImmediate(); // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    } // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n\n\n    if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({\n        date,\n        agent\n      });\n    } // Remove entries older than 30 days.\n\n\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n      const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n      const now = Date.now();\n      return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n    });\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n  /**\r\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n   * It also clears all heartbeats from memory as well as in IndexedDB.\r\n   *\r\n   * NOTE: Consuming product SDKs should not send the header if this method\r\n   * returns an empty string.\r\n   */\n\n\n  async getHeartbeatsHeader() {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    } // If it's still null or the array is empty, there is no data to send.\n\n\n    if (this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0) {\n      return '';\n    }\n\n    const date = getUTCDateString(); // Extract as many heartbeats from the cache as will fit under the size limit.\n\n    const {\n      heartbeatsToSend,\n      unsentEntries\n    } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n    const headerString = (0, _util.base64urlEncodeWithoutPadding)(JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsToSend\n    })); // Store last sent date to prevent another being logged/sent for the same day.\n\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries; // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = []; // Do not wait for this, to reduce latency.\n\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n\n    return headerString;\n  }\n\n}\n\nfunction getUTCDateString() {\n  const today = new Date(); // Returns date format 'YYYY-MM-DD'\n\n  return today.toISOString().substring(0, 10);\n}\n\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend = []; // Single date format heartbeats that are not sent.\n\n  let unsentEntries = heartbeatsCache.slice();\n\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date); // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    } // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n\n\n    unsentEntries = unsentEntries.slice(1);\n  }\n\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nclass HeartbeatStorageImpl {\n  constructor(app) {\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n\n  async runIndexedDBEnvironmentCheck() {\n    if (!(0, _util.isIndexedDBAvailable)()) {\n      return false;\n    } else {\n      return (0, _util.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n    }\n  }\n  /**\r\n   * Read all heartbeats.\r\n   */\n\n\n  async read() {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n\n    if (!canUseIndexedDB) {\n      return {\n        heartbeats: []\n      };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || {\n        heartbeats: []\n      };\n    }\n  } // overwrite the storage with the provided heartbeats\n\n\n  async overwrite(heartbeatsObject) {\n    var _a;\n\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  } // add heartbeats\n\n\n  async add(heartbeatsObject) {\n    var _a;\n\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n      });\n    }\n  }\n\n}\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\n\n\nfunction countBytes(heartbeatsCache) {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return (0, _util.base64urlEncodeWithoutPadding)( // heartbeatsCache wrapper properties\n  JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerCoreComponents(variant) {\n  _registerComponent(new _component.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\"\n  /* PRIVATE */\n  ));\n\n  _registerComponent(new _component.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\"\n  /* PRIVATE */\n  )); // Register `app` package.\n\n\n  registerVersion(name$o, version$1, variant); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name$o, version$1, 'esm2017'); // Register platform SDK identifier (no version).\n\n  registerVersion('fire-js', '');\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\n\n\nregisterCoreComponents('');\n};"],
"names":["shadow$provide","global","require","module","exports","_addComponent","app","component","container","addComponent","e","logger","debug","name","_registerComponent","componentName","_components","has","set","_apps","values","_getProvider","heartbeatController","getProvider","getImmediate","optional","triggerHeartbeat","registerVersion","libraryKeyOrName","version","variant","_a","library","PLATFORM_LOG_STRING","libraryMismatch","match","versionMismatch","warning","push","warn","join","_component","Component","getDbPromise","dbPromise","_util","openDB","DB_NAME","DB_VERSION","db","oldVersion","createObjectStore","STORE_NAME","catch","ERROR_FACTORY","create","originalErrorMessage","message","readHeartbeatsFromIndexedDB","transaction","objectStore","get","options","appId","writeHeartbeatsToIndexedDB","heartbeatObject","tx","put","complete","extractHeartbeatsForHeader","heartbeatsCache","maxSize","MAX_HEADER_BYTES","heartbeatsToSend","unsentEntries","slice","singleDateHeartbeat","heartbeatEntry","find","hb","agent","dates","date","countBytes","pop","base64urlEncodeWithoutPadding","JSON","stringify","heartbeats","length","Object","defineProperty","value","_addOrOverwriteComponent","addOrOverwriteComponent","_clearComponents","clear","_removeServiceInstance","instanceIdentifier","DEFAULT_ENTRY_NAME","clearInstance","deleteApp","delete","Promise","all","getProviders","map","provider","isDeleted","getApp","appName","getApps","Array","from","initializeApp","rawConfig","config","assign","automaticDataCollectionEnabled","String","existingApp","deepEqual","ComponentContainer","newApp","FirebaseAppImpl","onLog","logCallback","_logger","setUserLogHandler","setLogLevel","logLevel","enumerable","FirebaseError","_DEFAULT_ENTRY_NAME","SDK_VERSION","PlatformLoggerServiceImpl","constructor","getPlatformInfoString","providers","getComponent","type","service","filter","logString","Logger","name$o","name$n","name$l","name$m","name$j","name$k","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","Map","ErrorFactory","ERRORS","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","_container","checkDestroyed","val","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","result","platformLogger","toISOString","today","Date","substring","lastSentHeartbeatDate","some","hbTimestamp","valueOf","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","now","overwrite","getHeartbeatsHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","validateIndexedDBOpenable","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","add","registerCoreComponents","version$1"]
}
