{"version":3,"sources":["kee_frame/event_logger.cljc"],"mappings":";AAKA,AAAKA,qCACH,6HAAA,kDAAA,oEAAA,nPAACC,ySAEO,WAAKC;AAAL,AACE,IAAMC,QAAQ,wEAAA,xEAACC,gEAAeF;IACxBG,UAAQ,wEAAA,xEAACD,gEAAeF;IACxBI,SAAQ,sEAAA,gDAAA,tHAACC,8DAAaL;IACtBM,UAAQ,sHAAA,tHAACC,+CAAO,AAACF,8DAAaL;AAHpC,AAKE,AAAAQ,0DAAAC,mCAAA,wDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAW,uGAAA,2CAAA,lJAACC,wMAAcV,cACR,0BAAA,AAAA,2CAAA,oFAAA,vJAAM,AAACW,cAAIN,yHACMA,sBACjB,qKAAA,nKAAM,uDAAA,vDAACO,gDAAKT,mHACV,iBAAAU,aAA+B,AAACI,kBAAUf,QAAQC;kBAAlD,AAAAW,4CAAAD,WAAA,IAAA,zEAAOE;iBAAP,AAAAD,4CAAAD,WAAA,IAAA,xEAAmBG;IACbE,oBAAY,EAAI,GAAA,gBAAA,fAAOH,4BAAa,GAAA,eAAA,dAAOC;AADjD,AAEE,GAAME;AAAN,AAAA,kDAAA,2DAAA,2CAAA,8EAAA,ZAC0BH,4EACAC;;AAF1B;;KAHJ;GAHlB,OAAA,KAAA,WAAA;;AASAjB","names":["kee-frame.event-logger/interceptor","re_frame.interceptor.__GT_interceptor","context","event","re_frame.interceptor.get_coeffect","orig-db","new-db","re_frame.interceptor.get_effect","effects","cljs.core.dissoc","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.merge","cljs.core/seq","cljs.core.not_EQ_","vec__48413","cljs.core.nth","only-before","only-after","clojure.data/diff","db-changed?"],"sourcesContent":["(ns ^:no-doc kee-frame.event-logger\n  (:require [re-frame.interceptor :as i]\n            [clojure.data :as data]\n            [taoensso.timbre :as log]))\n\n(def interceptor\n  (i/->interceptor\n   :id :event-logger\n   :after (fn [context]\n            (let [event   (i/get-coeffect context :event)\n                  orig-db (i/get-coeffect context :db)\n                  new-db  (i/get-effect context :db ::not-found)\n                  effects (dissoc (i/get-effect context) :db)]\n\n              (log/debug (merge {:event event}\n                                (when (seq effects)\n                                  {:side-effects effects})\n                                (when (not= new-db ::not-found)\n                                  (let [[only-before only-after] (data/diff orig-db new-db)\n                                        db-changed? (or (some? only-before) (some? only-after))]\n                                    (when db-changed?\n                                      {:db-diff {:only-before only-before\n                                                 :only-after  only-after}})))))\n              context))))"]}